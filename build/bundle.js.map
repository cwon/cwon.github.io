{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/svelte-chartjs/dist/index.js","../../src/App.svelte","../../node_modules/chart.js/auto/auto.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { listen, bubble, current_component, SvelteComponent, init, safe_not_equal, assign, element, set_attributes, insert, get_spread_update, noop, detach, exclude_internal_props, binding_callbacks, bind, create_component, mount_component, get_spread_object, add_flush_callback, transition_in, transition_out, destroy_component } from 'svelte/internal';\nimport { onMount, onDestroy, afterUpdate } from 'svelte';\nimport { Chart as Chart$1, LineController, RadarController, DoughnutController, PieController, BarController, PolarAreaController, BubbleController, ScatterController } from 'chart.js';\n\nconst eventPrefix = /^on/;\nconst events = [];\nObject.keys(globalThis).forEach((key)=>{\n    if (eventPrefix.test(key)) {\n        events.push(key.replace(eventPrefix, \"\"));\n    }\n});\nfunction useForwardEvents(getRef) {\n    const component = current_component;\n    const destructors = [];\n    function forward(e) {\n        bubble(component, e);\n    }\n    onMount(()=>{\n        const ref = getRef();\n        events.forEach(ref instanceof Element ? (event)=>destructors.push(listen(ref, event, forward)) : (event)=>destructors.push(ref.$on(event, forward)));\n    });\n    onDestroy(()=>{\n        while(destructors.length){\n            destructors.pop()();\n        }\n    });\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nfunction create_fragment$8(ctx) {\n    let canvas;\n    let canvas_levels = [\n        /*props*/ ctx[1]\n    ];\n    let canvas_data = {};\n    for(let i = 0; i < canvas_levels.length; i += 1){\n        canvas_data = assign(canvas_data, canvas_levels[i]);\n    }\n    return {\n        c () {\n            canvas = element(\"canvas\");\n            set_attributes(canvas, canvas_data);\n        },\n        m (target, anchor) {\n            insert(target, canvas, anchor);\n            /*canvas_binding*/ ctx[8](canvas);\n        },\n        p (ctx, param) {\n            set_attributes(canvas, canvas_data = get_spread_update(canvas_levels, [\n                /*props*/ ctx[1]\n            ]));\n        },\n        i: noop,\n        o: noop,\n        d (detaching) {\n            if (detaching) detach(canvas);\n            /*canvas_binding*/ ctx[8](null);\n        }\n    };\n}\nfunction clean(props) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    let { data , type , options , plugins , children , $$scope , $$slots , ...rest } = props;\n    return rest;\n}\nfunction instance$8($$self, $$props, $$invalidate) {\n    let { type  } = $$props;\n    let { data ={\n        datasets: []\n    }  } = $$props;\n    let { options ={}  } = $$props;\n    let { plugins =[]  } = $$props;\n    let { updateMode =undefined  } = $$props;\n    let { chart =null  } = $$props;\n    let canvasRef;\n    let props = clean($$props);\n    onMount(()=>{\n        $$invalidate(2, chart = new Chart$1(canvasRef, {\n            type,\n            data,\n            options,\n            plugins\n        }));\n    });\n    afterUpdate(()=>{\n        if (!chart) return;\n        $$invalidate(2, chart.data = data, chart);\n        $$invalidate(2, chart.options = options, chart);\n        chart.update(updateMode);\n    });\n    onDestroy(()=>{\n        if (chart) chart.destroy();\n        $$invalidate(2, chart = null);\n    });\n    useForwardEvents(()=>canvasRef);\n    function canvas_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            canvasRef = $$value;\n            $$invalidate(0, canvasRef);\n        });\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(9, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"type\" in $$new_props) $$invalidate(3, type = $$new_props.type);\n        if (\"data\" in $$new_props) $$invalidate(4, data = $$new_props.data);\n        if (\"options\" in $$new_props) $$invalidate(5, options = $$new_props.options);\n        if (\"plugins\" in $$new_props) $$invalidate(6, plugins = $$new_props.plugins);\n        if (\"updateMode\" in $$new_props) $$invalidate(7, updateMode = $$new_props.updateMode);\n        if (\"chart\" in $$new_props) $$invalidate(2, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        canvasRef,\n        props,\n        chart,\n        type,\n        data,\n        options,\n        plugins,\n        updateMode,\n        canvas_binding\n    ];\n}\nclass Chart extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$8, create_fragment$8, safe_not_equal, {\n            type: 3,\n            data: 4,\n            options: 5,\n            plugins: 6,\n            updateMode: 7,\n            chart: 2\n        });\n    }\n}\n\nfunction create_fragment$7(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"line\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance$7($$self, $$props, $$invalidate) {\n    Chart$1.register(LineController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass Line extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$7, create_fragment$7, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\nfunction create_fragment$6(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"radar\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance$6($$self, $$props, $$invalidate) {\n    Chart$1.register(RadarController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass Radar extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$6, create_fragment$6, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\nfunction create_fragment$5(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"doughnut\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance$5($$self, $$props, $$invalidate) {\n    Chart$1.register(DoughnutController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass Doughnut extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$5, create_fragment$5, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\nfunction create_fragment$4(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"pie\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance$4($$self, $$props, $$invalidate) {\n    Chart$1.register(PieController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass Pie extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$4, create_fragment$4, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\nfunction create_fragment$3(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"bar\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance$3($$self, $$props, $$invalidate) {\n    Chart$1.register(BarController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass Bar extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$3, create_fragment$3, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\nfunction create_fragment$2(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"polarArea\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance$2($$self, $$props, $$invalidate) {\n    Chart$1.register(PolarAreaController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass PolarArea extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$2, create_fragment$2, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\nfunction create_fragment$1(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"bubble\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance$1($$self, $$props, $$invalidate) {\n    Chart$1.register(BubbleController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass Bubble extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance$1, create_fragment$1, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\nfunction create_fragment(ctx) {\n    let chart_1;\n    let updating_chart;\n    let current;\n    const chart_1_spread_levels = [\n        {\n            type: \"scatter\"\n        },\n        /*props*/ ctx[2]\n    ];\n    function chart_1_chart_binding(value) {\n        /*chart_1_chart_binding*/ ctx[4](value);\n    }\n    let chart_1_props = {};\n    for(let i = 0; i < chart_1_spread_levels.length; i += 1){\n        chart_1_props = assign(chart_1_props, chart_1_spread_levels[i]);\n    }\n    if (/*chart*/ ctx[0] !== void 0) {\n        chart_1_props.chart = /*chart*/ ctx[0];\n    }\n    chart_1 = new Chart({\n        props: chart_1_props\n    });\n    /*chart_1_binding*/ ctx[3](chart_1);\n    binding_callbacks.push(()=>bind(chart_1, \"chart\", chart_1_chart_binding));\n    return {\n        c () {\n            create_component(chart_1.$$.fragment);\n        },\n        m (target, anchor) {\n            mount_component(chart_1, target, anchor);\n            current = true;\n        },\n        p (ctx, param) {\n            let [dirty] = param;\n            const chart_1_changes = dirty & /*props*/ 4 ? get_spread_update(chart_1_spread_levels, [\n                chart_1_spread_levels[0],\n                get_spread_object(/*props*/ ctx[2])\n            ]) : {};\n            if (!updating_chart && dirty & /*chart*/ 1) {\n                updating_chart = true;\n                chart_1_changes.chart = /*chart*/ ctx[0];\n                add_flush_callback(()=>updating_chart = false);\n            }\n            chart_1.$set(chart_1_changes);\n        },\n        i (local) {\n            if (current) return;\n            transition_in(chart_1.$$.fragment, local);\n            current = true;\n        },\n        o (local) {\n            transition_out(chart_1.$$.fragment, local);\n            current = false;\n        },\n        d (detaching) {\n            /*chart_1_binding*/ ctx[3](null);\n            destroy_component(chart_1, detaching);\n        }\n    };\n}\nfunction instance($$self, $$props, $$invalidate) {\n    Chart$1.register(ScatterController);\n    let { chart =null  } = $$props;\n    let props = $$props;\n    let baseChartRef;\n    useForwardEvents(()=>baseChartRef);\n    function chart_1_binding($$value) {\n        binding_callbacks[$$value ? \"unshift\" : \"push\"](()=>{\n            baseChartRef = $$value;\n            $$invalidate(1, baseChartRef);\n        });\n    }\n    function chart_1_chart_binding(value) {\n        chart = value;\n        $$invalidate(0, chart);\n    }\n    $$self.$$set = ($$new_props)=>{\n        $$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));\n        if (\"chart\" in $$new_props) $$invalidate(0, chart = $$new_props.chart);\n    };\n    $$props = exclude_internal_props($$props);\n    return [\n        chart,\n        baseChartRef,\n        props,\n        chart_1_binding,\n        chart_1_chart_binding\n    ];\n}\nclass Scatter extends SvelteComponent {\n    constructor(options){\n        super();\n        init(this, options, instance, create_fragment, safe_not_equal, {\n            chart: 0\n        });\n    }\n}\n\n/**\n * @deprecated Please use `Chart` name instead.\n * @todo Remove in v3.0.0\n */ const Base = Chart;\n/**\n * @deprecated Please use `PolarArea` name instead.\n * @todo Remove in v3.0.0\n */ const Polar = PolarArea;\n\nexport { Bar, Base, Bubble, Chart, Doughnut, Line, Pie, Polar, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent, useForwardEvents };\n//# sourceMappingURL=index.js.map\n","<script>\n    import {Bar} from \"svelte-chartjs\";\n    import {onMount} from \"svelte\";\n    import Chart from \"chart.js/auto\";\n\n    let celebrities = [\n        {name: \"Celebrity 1\", height: 170},\n        {name: \"Celebrity 2\", height: 160},\n        {name: \"Celebrity 3\", height: 180},\n        {name: \"Celebrity 4\", height: 150},\n        {name: \"Celebrity 5\", height: 165},\n    ];\n\n    let selectedCelebrities = [];\n    let chartData = {\n        labels: [],\n        datasets: [\n            {\n                label: \"Height Difference (cm)\",\n                data: [],\n                backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n                borderColor: \"rgba(75, 192, 192, 1)\",\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    function toggleCelebrity(celebrity) {\n        if (selectedCelebrities.includes(celebrity)) {\n            selectedCelebrities = selectedCelebrities.filter(c => c !== celebrity);\n        } else {\n            if (selectedCelebrities.length < 5) {\n                selectedCelebrities = [...selectedCelebrities, celebrity];\n            } else {\n                alert(\"You can select up to 5 celebrities only.\");\n            }\n        }\n        updateChartData();\n    }\n\n    function updateChartData() {\n        chartData.labels = selectedCelebrities.map(c => c.name);\n        if (selectedCelebrities.length > 1) {\n            const heights = selectedCelebrities.map(c => c.height);\n            const maxHeight = Math.max(...heights);\n            chartData.datasets[0].data = heights.map(height => maxHeight - height);\n        } else {\n            chartData.datasets[0].data = [];\n        }\n    }\n\n    onMount(() => {\n        updateChartData();\n    });\n</script>\n\n<main>\n    <h1>Celebrity Height Comparison</h1>\n    <div class=\"celebrity-list\">\n        {#each celebrities as celebrity}\n            <label>\n                <input type=\"checkbox\" on:change={() => toggleCelebrity(celebrity)} />\n                {celebrity.name} ({celebrity.height} cm)\n            </label>\n        {/each}\n    </div>\n    <button on:click={() => updateChartData()}>Compare Heights</button>\n    {#if chartData.datasets[0].data.length > 0}\n        <Bar {chartData} />\n    {/if}\n</main>\n\n<style>\n    body {\n        font-family: Arial, sans-serif;\n    }\n    .celebrity-list {\n        max-width: 300px;\n        margin-bottom: 20px;\n    }\n    .celebrity-list label {\n        display: block;\n        margin-bottom: 5px;\n    }\n</style>\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import App from \"./App.svelte\";\n\nconst app = new App({\n    target: document.body,\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","indexOf","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","e","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","detaching","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","splice","$set","$$props","obj","$$set","keys","round","v","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element$1","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","Element","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart$1","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","eventPrefix","useForwardEvents","getRef","destructors","forward","bubble","ref","create_fragment$8","canvas_levels","canvas_data","param","instance$8","$$self","$$invalidate","canvasRef","updateMode","$$slots","clean","$$new_props","$$value","globalThis","test","create_fragment$3","chart_1","updating_chart","chart_1_spread_levels","chart_1_chart_binding","chart_1_props","chart_1_changes","spread_props","instance$3","baseChartRef","Bar","t1_value","t3_value","create_if_block","main","div","button","iterations","selectedCelebrities","chartData","toggleCelebrity","celebrity","alert","updateChartData"],"mappings":"gCAAA,SAASA,IAAU,CAEnB,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,CACX,CAWA,SAASG,EAAIC,GACT,OAAOA,GACX,CACA,SAASC,IACL,OAAOC,OAAOC,OAAO,KACzB,CACA,SAASC,EAAQC,GACbA,EAAIC,QAAQP,EAChB,CACA,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,CAClB,CACA,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,CAChF,CAqFA,SAASE,EAAuBC,GAC5B,MAAMC,EAAS,CAAA,EACf,IAAK,MAAMhB,KAAKe,EACC,MAATf,EAAE,KACFgB,EAAOhB,GAAKe,EAAMf,IAC1B,OAAOgB,CACX,CAqOA,SAASC,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,EACvB,CAoDA,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,KACxC,CASA,SAASE,EAAOL,GACRA,EAAKM,YACLN,EAAKM,WAAWC,YAAYP,EAEpC,CAOA,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,EAClC,CAmBA,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,EACnC,CACA,SAASE,IACL,OAAOH,EAAK,IAChB,CAOA,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,GAElC,OADAnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,EAC1D,CAoCA,SAASG,EAAKtB,EAAMuB,EAAWC,GACd,MAATA,EACAxB,EAAKyB,gBAAgBF,GAChBvB,EAAK0B,aAAaH,KAAeC,GACtCxB,EAAK2B,aAAaJ,EAAWC,EACrC,CAQA,MAAMI,EAAmC,CAAC,QAAS,UACnD,SAASC,EAAe7B,EAAM8B,GAE1B,MAAMC,EAAc9C,OAAO+C,0BAA0BhC,EAAKiC,WAC1D,IAAK,MAAMC,KAAOJ,EACS,MAAnBA,EAAWI,GACXlC,EAAKyB,gBAAgBS,GAER,UAARA,EACLlC,EAAKmC,MAAMC,QAAUN,EAAWI,GAEnB,YAARA,EACLlC,EAAKwB,MAAQxB,EAAKkC,GAAOJ,EAAWI,GAE/BH,EAAYG,IAAQH,EAAYG,GAAKG,MAA0D,IAAnDT,EAAiCU,QAAQJ,GAC1FlC,EAAKkC,GAAOJ,EAAWI,GAGvBZ,EAAKtB,EAAMkC,EAAKJ,EAAWI,GAGvC,CAukBA,IAAIK,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,CACxB,CACA,SAASC,IACL,IAAKH,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,CACX,CAoBA,SAASK,EAAQ7D,GACb2D,IAAwBG,GAAGC,SAASC,KAAKhE,EAC7C,CAiBA,SAASiE,EAAUjE,GACf2D,IAAwBG,GAAGI,WAAWF,KAAKhE,EAC/C,CAiFA,MAAMmE,EAAmB,GAEnBC,EAAoB,GAC1B,IAAIC,EAAmB,GACvB,MAAMC,EAAkB,GAClBC,EAAmCC,QAAQC,UACjD,IAAIC,GAAmB,EAWvB,SAASC,EAAoB3E,GACzBqE,EAAiBL,KAAKhE,EAC1B,CAsBA,MAAM4E,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IAIL,GAAiB,IAAbD,EACA,OAEJ,MAAME,EAAkBxB,EACxB,EAAG,CAGC,IACI,KAAOsB,EAAWX,EAAiBc,QAAQ,CACvC,MAAMvB,EAAYS,EAAiBW,GACnCA,IACArB,EAAsBC,GACtBwB,EAAOxB,EAAUI,GACpB,CACJ,CACD,MAAOqB,GAIH,MAFAhB,EAAiBc,OAAS,EAC1BH,EAAW,EACLK,CACT,CAID,IAHA1B,EAAsB,MACtBU,EAAiBc,OAAS,EAC1BH,EAAW,EACJV,EAAkBa,QACrBb,EAAkBgB,KAAlBhB,GAIJ,IAAK,IAAIiB,EAAI,EAAGA,EAAIhB,EAAiBY,OAAQI,GAAK,EAAG,CACjD,MAAMC,EAAWjB,EAAiBgB,GAC7BT,EAAeW,IAAID,KAEpBV,EAAeY,IAAIF,GACnBA,IAEP,CACDjB,EAAiBY,OAAS,CAClC,OAAad,EAAiBc,QAC1B,KAAOX,EAAgBW,QACnBX,EAAgBc,KAAhBd,GAEJI,GAAmB,EACnBE,EAAea,QACfhC,EAAsBuB,EAC1B,CACA,SAASE,EAAOpB,GACZ,GAAoB,OAAhBA,EAAG4B,SAAmB,CACtB5B,EAAGoB,SACH9E,EAAQ0D,EAAG6B,eACX,MAAMC,EAAQ9B,EAAG8B,MACjB9B,EAAG8B,MAAQ,EAAE,GACb9B,EAAG4B,UAAY5B,EAAG4B,SAASG,EAAE/B,EAAGgC,IAAKF,GACrC9B,EAAGiC,aAAazF,QAAQqE,EAC3B,CACL,CAyBA,MAAMqB,EAAW,IAAInB,IACrB,IAAIoB,EAcJ,SAASC,EAAcC,EAAOC,GACtBD,GAASA,EAAMd,IACfW,EAASK,OAAOF,GAChBA,EAAMd,EAAEe,GAEhB,CACA,SAASE,EAAeH,EAAOC,EAAO9E,EAAQgE,GAC1C,GAAIa,GAASA,EAAMI,EAAG,CAClB,GAAIP,EAAST,IAAIY,GACb,OACJH,EAASR,IAAIW,GACbF,EAAOO,EAAExC,MAAK,KACVgC,EAASK,OAAOF,GACZb,IACIhE,GACA6E,EAAMM,EAAE,GACZnB,IACH,IAELa,EAAMI,EAAEH,EACX,MACQd,GACLA,GAER,CAkaA,SAASoB,EAAkBC,EAAQC,GAC/B,MAAM1B,EAAS,CAAA,EACT2B,EAAc,CAAA,EACdC,EAAgB,CAAEC,QAAS,GACjC,IAAI1B,EAAIsB,EAAO1B,OACf,KAAOI,KAAK,CACR,MAAMkB,EAAII,EAAOtB,GACX2B,EAAIJ,EAAQvB,GAClB,GAAI2B,EAAG,CACH,IAAK,MAAM7D,KAAOoD,EACRpD,KAAO6D,IACTH,EAAY1D,GAAO,GAE3B,IAAK,MAAMA,KAAO6D,EACTF,EAAc3D,KACf+B,EAAO/B,GAAO6D,EAAE7D,GAChB2D,EAAc3D,GAAO,GAG7BwD,EAAOtB,GAAK2B,CACf,MAEG,IAAK,MAAM7D,KAAOoD,EACdO,EAAc3D,GAAO,CAGhC,CACD,IAAK,MAAMA,KAAO0D,EACR1D,KAAO+B,IACTA,EAAO/B,QAAO8D,GAEtB,OAAO/B,CACX,CAiOA,SAASgC,EAAiBf,GACtBA,GAASA,EAAMK,GACnB,CAIA,SAASW,EAAgBzD,EAAW1C,EAAQI,EAAQgG,GAChD,MAAM1B,SAAEA,EAAQK,aAAEA,GAAiBrC,EAAUI,GAC7C4B,GAAYA,EAAS2B,EAAErG,EAAQI,GAC1BgG,GAEDzC,GAAoB,KAChB,MAAM2C,EAAiB5D,EAAUI,GAAGC,SAASwD,IAAIxH,GAAKyH,OAAOjH,GAIzDmD,EAAUI,GAAGI,WACbR,EAAUI,GAAGI,WAAWF,QAAQsD,GAKhClH,EAAQkH,GAEZ5D,EAAUI,GAAGC,SAAW,EAAE,IAGlCgC,EAAazF,QAAQqE,EACzB,CACA,SAAS8C,EAAkB/D,EAAWgE,GAClC,MAAM5D,EAAKJ,EAAUI,GACD,OAAhBA,EAAG4B,YA9vBX,SAAgCrF,GAC5B,MAAMsH,EAAW,GACXC,EAAU,GAChBvD,EAAiB/D,SAASkG,IAA0B,IAApBnG,EAAIkD,QAAQiD,GAAYmB,EAAS3D,KAAKwC,GAAKoB,EAAQ5D,KAAKwC,KACxFoB,EAAQtH,SAASkG,GAAMA,MACvBnC,EAAmBsD,CACvB,CAyvBQE,CAAuB/D,EAAGiC,cAC1B3F,EAAQ0D,EAAGI,YACXJ,EAAG4B,UAAY5B,EAAG4B,SAASe,EAAEiB,GAG7B5D,EAAGI,WAAaJ,EAAG4B,SAAW,KAC9B5B,EAAGgC,IAAM,GAEjB,CACA,SAASgC,EAAWpE,EAAW2B,IACI,IAA3B3B,EAAUI,GAAG8B,MAAM,KACnBzB,EAAiBH,KAAKN,GA52BrBgB,IACDA,GAAmB,EACnBH,EAAiBwD,KAAKhD,IA42BtBrB,EAAUI,GAAG8B,MAAMoC,KAAK,IAE5BtE,EAAUI,GAAG8B,MAAOP,EAAI,GAAM,IAAO,GAAMA,EAAI,EACnD,CACA,SAAS4C,EAAKvE,EAAWtB,EAAS8F,EAAUC,EAAiBC,EAAWvH,EAAOwH,EAAezC,EAAQ,EAAE,IACpG,MAAM0C,EAAmB9E,EACzBC,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtB4B,SAAU,KACVI,IAAK,GAELjF,QACAqE,OAAQxF,EACR0I,YACAG,MAAOtI,IAEP8D,SAAU,GACVG,WAAY,GACZsE,cAAe,GACf7C,cAAe,GACfI,aAAc,GACd0C,QAAS,IAAIC,IAAItG,EAAQqG,UAAYH,EAAmBA,EAAiBxE,GAAG2E,QAAU,KAEtFE,UAAW1I,IACX2F,QACAgD,YAAY,EACZC,KAAMzG,EAAQpB,QAAUsH,EAAiBxE,GAAG+E,MAEhDR,GAAiBA,EAAcvE,EAAG+E,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAhF,EAAGgC,IAAMoC,EACHA,EAASxE,EAAWtB,EAAQvB,OAAS,CAAE,GAAE,CAACwE,EAAG0D,KAAQC,KACnD,MAAMvG,EAAQuG,EAAK/D,OAAS+D,EAAK,GAAKD,EAOtC,OANIjF,EAAGgC,KAAOsC,EAAUtE,EAAGgC,IAAIT,GAAIvB,EAAGgC,IAAIT,GAAK5C,MACtCqB,EAAG8E,YAAc9E,EAAGyE,MAAMlD,IAC3BvB,EAAGyE,MAAMlD,GAAG5C,GACZqG,GACAhB,EAAWpE,EAAW2B,IAEvB0D,CAAG,IAEZ,GACNjF,EAAGoB,SACH4D,GAAQ,EACR1I,EAAQ0D,EAAG6B,eAEX7B,EAAG4B,WAAWyC,GAAkBA,EAAgBrE,EAAGgC,KAC/C1D,EAAQpB,OAAQ,CAChB,GAAIoB,EAAQ6G,QAAS,CAEjB,MAAMC,EAvhDlB,SAAkBzH,GACd,OAAO0H,MAAMC,KAAK3H,EAAQ4H,WAC9B,CAqhD0BC,CAASlH,EAAQpB,QAE/B8C,EAAG4B,UAAY5B,EAAG4B,SAAS6D,EAAEL,GAC7BA,EAAM5I,QAAQgB,EACjB,MAGGwC,EAAG4B,UAAY5B,EAAG4B,SAASc,IAE3BpE,EAAQoH,OACRtD,EAAcxC,EAAUI,GAAG4B,UAC/ByB,EAAgBzD,EAAWtB,EAAQpB,OAAQoB,EAAQhB,OAAQgB,EAAQgF,eAEnErC,GACH,CACDtB,EAAsB6E,EAC1B,CAoDA,MAAMmB,EACF,QAAAC,GACIjC,EAAkBkC,KAAM,GACxBA,KAAKD,SAAWhK,CACnB,CACD,GAAAkK,CAAIC,EAAMvE,GACN,IAAK/E,EAAY+E,GACb,OAAO5F,EAEX,MAAMiJ,EAAagB,KAAK7F,GAAG6E,UAAUkB,KAAUF,KAAK7F,GAAG6E,UAAUkB,GAAQ,IAEzE,OADAlB,EAAU3E,KAAKsB,GACR,KACH,MAAMwE,EAAQnB,EAAUpF,QAAQ+B,IACjB,IAAXwE,GACAnB,EAAUoB,OAAOD,EAAO,EAAE,CAErC,CACD,IAAAE,CAAKC,GAhrET,IAAkBC,EAirENP,KAAKQ,QAjrECD,EAirEkBD,EAhrEG,IAA5B/J,OAAOkK,KAAKF,GAAKjF,UAirEhB0E,KAAK7F,GAAG8E,YAAa,EACrBe,KAAKQ,MAAMF,GACXN,KAAK7F,GAAG8E,YAAa,EAE5B;;;;;;OC5tEL,SAASyB,EAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,CACA,MAAMC,EAAM,CAACD,EAAGf,EAAGiB,IAAMC,KAAKC,IAAID,KAAKE,IAAIL,EAAGE,GAAIjB,GAClD,SAASqB,EAAIN,GACX,OAAOC,EAAIF,EAAU,KAAJC,GAAW,EAAG,IACjC,CAIA,SAASO,EAAIP,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASQ,EAAIR,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASS,EAAIT,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CAEA,MAAMU,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI5K,EAAG,GAAIC,EAAG,GAAI6F,EAAG,GAAIC,EAAG,GAAItB,EAAG,GAAIoG,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAK9K,GAAK6K,EAAQ,GAAJ7K,GACd+K,GAAK/K,GAAK6K,GAAS,IAAJ7K,IAAa,GAAK6K,EAAQ,GAAJ7K,GACrCgL,GAAKhL,IAAW,IAAJA,IAAa,IAAY,GAAJA,GAyBvC,SAASiL,GAAUtB,GACjB,IAAIiB,EAzBUjB,IAAKqB,GAAGrB,EAAEuB,IAAMF,GAAGrB,EAAEwB,IAAMH,GAAGrB,EAAE3J,IAAMgL,GAAGrB,EAAE5J,GAyBjDqL,CAAQzB,GAAKmB,EAAKC,GAC1B,OAAOpB,EACH,IAAMiB,EAAEjB,EAAEuB,GAAKN,EAAEjB,EAAEwB,GAAKP,EAAEjB,EAAE3J,GAJpB,EAACD,EAAG6K,IAAM7K,EAAI,IAAM6K,EAAE7K,GAAK,GAIFsL,CAAM1B,EAAE5J,EAAG6K,QAC5CtE,CACN,CAEA,MAAMgF,GAAS,+GACf,SAASC,GAAS1B,EAAG2B,EAAG5C,GACtB,MAAM7I,EAAIyL,EAAI1B,KAAKE,IAAIpB,EAAG,EAAIA,GACxBgC,EAAI,CAACvE,EAAGlH,GAAKkH,EAAIwD,EAAI,IAAM,KAAOjB,EAAI7I,EAAI+J,KAAKC,IAAID,KAAKE,IAAI7K,EAAI,EAAG,EAAIA,EAAG,IAAK,GACrF,MAAO,CAACyL,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASa,GAAS5B,EAAG2B,EAAG7B,GACtB,MAAMiB,EAAI,CAACvE,EAAGlH,GAAKkH,EAAIwD,EAAI,IAAM,IAAMF,EAAIA,EAAI6B,EAAI1B,KAAKC,IAAID,KAAKE,IAAI7K,EAAG,EAAIA,EAAG,GAAI,GACnF,MAAO,CAACyL,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASc,GAAS7B,EAAG8B,EAAG3L,GACtB,MAAM4L,EAAML,GAAS1B,EAAG,EAAG,IAC3B,IAAInF,EAMJ,IALIiH,EAAI3L,EAAI,IACV0E,EAAI,GAAKiH,EAAI3L,GACb2L,GAAKjH,EACL1E,GAAK0E,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBkH,EAAIlH,IAAM,EAAIiH,EAAI3L,EAClB4L,EAAIlH,IAAMiH,EAEZ,OAAOC,CACT,CAUA,SAASC,GAAQlC,GACf,MACMuB,EAAIvB,EAAEuB,EADE,IAERC,EAAIxB,EAAEwB,EAFE,IAGRnL,EAAI2J,EAAE3J,EAHE,IAIR+J,EAAMD,KAAKC,IAAImB,EAAGC,EAAGnL,GACrBgK,EAAMF,KAAKE,IAAIkB,EAAGC,EAAGnL,GACrB4I,GAAKmB,EAAMC,GAAO,EACxB,IAAIH,EAAG2B,EAAG1F,EAOV,OANIiE,IAAQC,IACVlE,EAAIiE,EAAMC,EACVwB,EAAI5C,EAAI,GAAM9C,GAAK,EAAIiE,EAAMC,GAAOlE,GAAKiE,EAAMC,GAC/CH,EArBJ,SAAkBqB,EAAGC,EAAGnL,EAAG8F,EAAGiE,GAC5B,OAAImB,IAAMnB,GACCoB,EAAInL,GAAK8F,GAAMqF,EAAInL,EAAI,EAAI,GAElCmL,IAAMpB,GACA/J,EAAIkL,GAAKpF,EAAI,GAEfoF,EAAIC,GAAKrF,EAAI,CACvB,CAaQgG,CAASZ,EAAGC,EAAGnL,EAAG8F,EAAGiE,GACzBF,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO2B,GAAK,EAAG5C,EACzB,CACA,SAASmD,GAAMnB,EAAG7K,EAAGC,EAAG6F,GACtB,OACE2C,MAAMwD,QAAQjM,GACV6K,EAAE7K,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChB6K,EAAE7K,EAAGC,EAAG6F,IACZe,IAAIsD,EACR,CACA,SAAS+B,GAAQpC,EAAG2B,EAAG5C,GACrB,OAAOmD,GAAMR,GAAU1B,EAAG2B,EAAG5C,EAC/B,CAOA,SAASsD,GAAIrC,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASsC,GAASC,GAChB,MAAM1F,EAAI4E,GAAOe,KAAKD,GACtB,IACIzC,EADA5J,EAAI,IAER,IAAK2G,EACH,OAEEA,EAAE,KAAOiD,IACX5J,EAAI2G,EAAE,GAAKuD,GAAKvD,EAAE,IAAMwD,GAAKxD,EAAE,KAEjC,MAAMmD,EAAIqC,IAAKxF,EAAE,IACX4F,GAAM5F,EAAE,GAAK,IACb6F,GAAM7F,EAAE,GAAK,IAQnB,OANEiD,EADW,QAATjD,EAAE,GAtBR,SAAiBmD,EAAG8B,EAAG3L,GACrB,OAAO+L,GAAML,GAAU7B,EAAG8B,EAAG3L,EAC/B,CAqBQwM,CAAQ3C,EAAGyC,EAAIC,GACD,QAAT7F,EAAE,GArBf,SAAiBmD,EAAG2B,EAAG7B,GACrB,OAAOoC,GAAMN,GAAU5B,EAAG2B,EAAG7B,EAC/B,CAoBQ8C,CAAQ5C,EAAGyC,EAAIC,GAEfN,GAAQpC,EAAGyC,EAAIC,GAEd,CACLrB,EAAGvB,EAAE,GACLwB,EAAGxB,EAAE,GACL3J,EAAG2J,EAAE,GACL5J,EAAGA,EAEP,CAsBA,MAAM6G,GAAM,CACV8F,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACH1C,EAAG,KACH2C,EAAG,KACHC,EAAG,KACH3C,EAAG,KACHC,EAAG,QACHC,EAAG,QACH0C,EAAG,KACHC,EAAG,WACH1C,EAAG,KACH2C,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH9C,EAAG,KACH+C,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIC,GACJ,SAASC,GAAUjL,GACZgL,KACHA,GApBJ,WACE,MAAME,EAAW,CAAA,EACX7N,EAAOlK,OAAOkK,KAAKsE,IACnBwJ,EAAQhY,OAAOkK,KAAK7C,IAC1B,IAAIlC,EAAG8S,EAAGrY,EAAGsY,EAAIC,EACjB,IAAKhT,EAAI,EAAGA,EAAI+E,EAAKnF,OAAQI,IAAK,CAEhC,IADA+S,EAAKC,EAAKjO,EAAK/E,GACV8S,EAAI,EAAGA,EAAID,EAAMjT,OAAQkT,IAC5BrY,EAAIoY,EAAMC,GACVE,EAAKA,EAAGC,QAAQxY,EAAGyH,GAAIzH,IAEzBA,EAAIyY,SAAS7J,GAAQ0J,GAAK,IAC1BH,EAASI,GAAM,CAACvY,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAChD,CACD,OAAOmY,CACT,CAKYO,GACRT,GAAMU,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAM/X,EAAIqX,GAAMhL,EAAI2L,eACpB,OAAOhY,GAAK,CACVmL,EAAGnL,EAAE,GACLoL,EAAGpL,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEuE,OAAevE,EAAE,GAAK,IAE/B,CAEA,MAAMiY,GAAS,uGAiCf,MAAMC,GAAKtO,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBG,KAAKoO,IAAIvO,EAAG,EAAM,KAAe,KACxElB,GAAOkB,GAAKA,GAAK,OAAUA,EAAI,MAAQG,KAAKoO,KAAKvO,EAAI,MAAS,MAAO,KAa3E,SAASwO,GAAOxO,EAAGjF,EAAG0T,GACpB,GAAIzO,EAAG,CACL,IAAI0O,EAAMxM,GAAQlC,GAClB0O,EAAI3T,GAAKoF,KAAKC,IAAI,EAAGD,KAAKE,IAAIqO,EAAI3T,GAAK2T,EAAI3T,GAAK0T,EAAa,IAAN1T,EAAU,IAAM,IACvE2T,EAAMpM,GAAQoM,GACd1O,EAAEuB,EAAImN,EAAI,GACV1O,EAAEwB,EAAIkN,EAAI,GACV1O,EAAE3J,EAAIqY,EAAI,EACX,CACH,CACA,SAASC,GAAM3O,EAAG4O,GAChB,OAAO5O,EAAIpK,OAAOP,OAAOuZ,GAAS,GAAI5O,GAAKA,CAC7C,CACA,SAAS6O,GAAWC,GAClB,IAAI9O,EAAI,CAACuB,EAAG,EAAGC,EAAG,EAAGnL,EAAG,EAAGD,EAAG,KAY9B,OAXIyI,MAAMwD,QAAQyM,GACZA,EAAMnU,QAAU,IAClBqF,EAAI,CAACuB,EAAGuN,EAAM,GAAItN,EAAGsN,EAAM,GAAIzY,EAAGyY,EAAM,GAAI1Y,EAAG,KAC3C0Y,EAAMnU,OAAS,IACjBqF,EAAE5J,EAAImK,EAAIuO,EAAM,OAIpB9O,EAAI2O,GAAMG,EAAO,CAACvN,EAAG,EAAGC,EAAG,EAAGnL,EAAG,EAAGD,EAAG,KACrCA,EAAImK,EAAIP,EAAE5J,GAEP4J,CACT,CACA,SAAS+O,GAActM,GACrB,MAAsB,MAAlBA,EAAIuM,OAAO,GA3EjB,SAAkBvM,GAChB,MAAM1F,EAAIsR,GAAO3L,KAAKD,GACtB,IACIlB,EAAGC,EAAGnL,EADND,EAAI,IAER,GAAK2G,EAAL,CAGA,GAAIA,EAAE,KAAOwE,EAAG,CACd,MAAMvB,GAAKjD,EAAE,GACb3G,EAAI2G,EAAE,GAAKuD,EAAIN,GAAKC,EAAQ,IAAJD,EAAS,EAAG,IACrC,CAOD,OANAuB,GAAKxE,EAAE,GACPyE,GAAKzE,EAAE,GACP1G,GAAK0G,EAAE,GACPwE,EAAI,KAAOxE,EAAE,GAAKuD,EAAIiB,GAAKtB,EAAIsB,EAAG,EAAG,MACrCC,EAAI,KAAOzE,EAAE,GAAKuD,EAAIkB,GAAKvB,EAAIuB,EAAG,EAAG,MACrCnL,EAAI,KAAO0G,EAAE,GAAKuD,EAAIjK,GAAK4J,EAAI5J,EAAG,EAAG,MAC9B,CACLkL,EAAGA,EACHC,EAAGA,EACHnL,EAAGA,EACHD,EAAGA,EAfJ,CAiBH,CAqDW6Y,CAASxM,GAEXD,GAASC,EAClB,CACA,MAAMyM,GACJ,WAAAC,CAAYL,GACV,GAAIA,aAAiBI,GACnB,OAAOJ,EAET,MAAMvP,SAAcuP,EACpB,IAAI9O,EA7bR,IAAkByC,EAEZhE,EADA2Q,EA6bW,WAAT7P,EACFS,EAAI6O,GAAWC,GACG,WAATvP,IA/bT6P,GADY3M,EAicCqM,GAhcHnU,OAEC,MAAX8H,EAAI,KACM,IAAR2M,GAAqB,IAARA,EACf3Q,EAAM,CACJ8C,EAAG,IAAsB,GAAhBb,EAAM+B,EAAI,IACnBjB,EAAG,IAAsB,GAAhBd,EAAM+B,EAAI,IACnBpM,EAAG,IAAsB,GAAhBqK,EAAM+B,EAAI,IACnBrM,EAAW,IAARgZ,EAA4B,GAAhB1O,EAAM+B,EAAI,IAAW,KAErB,IAAR2M,GAAqB,IAARA,IACtB3Q,EAAM,CACJ8C,EAAGb,EAAM+B,EAAI,KAAO,EAAI/B,EAAM+B,EAAI,IAClCjB,EAAGd,EAAM+B,EAAI,KAAO,EAAI/B,EAAM+B,EAAI,IAClCpM,EAAGqK,EAAM+B,EAAI,KAAO,EAAI/B,EAAM+B,EAAI,IAClCrM,EAAW,IAARgZ,EAAa1O,EAAM+B,EAAI,KAAO,EAAI/B,EAAM+B,EAAI,IAAO,OAibxDzC,EA7aGvB,GA6aoBiP,GAAUoB,IAAUC,GAAcD,IAE3DzP,KAAKgQ,KAAOrP,EACZX,KAAKiQ,SAAWtP,CACjB,CACD,SAAIuP,GACF,OAAOlQ,KAAKiQ,MACb,CACD,OAAIrN,GACF,IAAIjC,EAAI2O,GAAMtP,KAAKgQ,MAInB,OAHIrP,IACFA,EAAE5J,EAAIoK,EAAIR,EAAE5J,IAEP4J,CACR,CACD,OAAIiC,CAAIrC,GACNP,KAAKgQ,KAAOR,GAAWjP,EACxB,CACD,SAAA4P,GACE,OAAOnQ,KAAKiQ,QArFGtP,EAqFgBX,KAAKgQ,QAnFpCrP,EAAE5J,EAAI,IACF,QAAQ4J,EAAEuB,MAAMvB,EAAEwB,MAAMxB,EAAE3J,MAAMmK,EAAIR,EAAE5J,MACtC,OAAO4J,EAAEuB,MAAMvB,EAAEwB,MAAMxB,EAAE3J,WAiFesG,EArFhD,IAAmBqD,CAsFhB,CACD,SAAAsB,GACE,OAAOjC,KAAKiQ,OAAShO,GAAUjC,KAAKgQ,WAAQ1S,CAC7C,CACD,SAAA8S,GACE,OAAOpQ,KAAKiQ,OApVhB,SAAmBtP,GACjB,IAAKA,EACH,OAEF,MAAM5J,EAAI8L,GAAQlC,GACZE,EAAI9J,EAAE,GACNyL,EAAIpB,EAAIrK,EAAE,IACV6I,EAAIwB,EAAIrK,EAAE,IAChB,OAAO4J,EAAE5J,EAAI,IACT,QAAQ8J,MAAM2B,OAAO5C,OAAOuB,EAAIR,EAAE5J,MAClC,OAAO8J,MAAM2B,OAAO5C,KAC1B,CAyUyBwQ,CAAUpQ,KAAKgQ,WAAQ1S,CAC7C,CACD,GAAA+S,CAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKxQ,KAAK4C,IACV6N,EAAKH,EAAM1N,IACjB,IAAI8N,EACJ,MAAMxU,EAAIqU,IAAWG,EAAK,GAAMH,EAC1B5N,EAAI,EAAIzG,EAAI,EACZnF,EAAIyZ,EAAGzZ,EAAI0Z,EAAG1Z,EACd4Z,IAAOhO,EAAI5L,IAAO,EAAI4L,GAAKA,EAAI5L,IAAM,EAAI4L,EAAI5L,IAAM,GAAK,EAC9D2Z,EAAK,EAAIC,EACTH,EAAGtO,EAAI,IAAOyO,EAAKH,EAAGtO,EAAIwO,EAAKD,EAAGvO,EAAI,GACtCsO,EAAGrO,EAAI,IAAOwO,EAAKH,EAAGrO,EAAIuO,EAAKD,EAAGtO,EAAI,GACtCqO,EAAGxZ,EAAI,IAAO2Z,EAAKH,EAAGxZ,EAAI0Z,EAAKD,EAAGzZ,EAAI,GACtCwZ,EAAGzZ,EAAImF,EAAIsU,EAAGzZ,GAAK,EAAImF,GAAKuU,EAAG1Z,EAC/BiJ,KAAK4C,IAAM4N,CACZ,CACD,OAAOxQ,IACR,CACD,WAAA4Q,CAAYN,EAAOO,GAIjB,OAHIP,IACFtQ,KAAKgQ,KAvGX,SAAqBc,EAAMC,EAAMF,GAC/B,MAAM3O,EAAIzC,GAAK0B,EAAI2P,EAAK5O,IAClBC,EAAI1C,GAAK0B,EAAI2P,EAAK3O,IAClBnL,EAAIyI,GAAK0B,EAAI2P,EAAK9Z,IACxB,MAAO,CACLkL,EAAGhB,EAAI+N,GAAG/M,EAAI2O,GAAKpR,GAAK0B,EAAI4P,EAAK7O,IAAMA,KACvCC,EAAGjB,EAAI+N,GAAG9M,EAAI0O,GAAKpR,GAAK0B,EAAI4P,EAAK5O,IAAMA,KACvCnL,EAAGkK,EAAI+N,GAAGjY,EAAI6Z,GAAKpR,GAAK0B,EAAI4P,EAAK/Z,IAAMA,KACvCD,EAAG+Z,EAAK/Z,EAAI8Z,GAAKE,EAAKha,EAAI+Z,EAAK/Z,GAEnC,CA6FkB6Z,CAAY5Q,KAAKgQ,KAAMM,EAAMN,KAAMa,IAE1C7Q,IACR,CACD,KAAAsP,GACE,OAAO,IAAIO,GAAM7P,KAAK4C,IACvB,CACD,KAAAP,CAAMtL,GAEJ,OADAiJ,KAAKgQ,KAAKjZ,EAAImK,EAAInK,GACXiJ,IACR,CACD,OAAAgR,CAAQ5B,GAGN,OAFYpP,KAAKgQ,KACbjZ,GAAK,EAAIqY,EACNpP,IACR,CACD,SAAAiR,GACE,MAAMrO,EAAM5C,KAAKgQ,KACXkB,EAAMxQ,EAAc,GAARkC,EAAIV,EAAkB,IAARU,EAAIT,EAAmB,IAARS,EAAI5L,GAEnD,OADA4L,EAAIV,EAAIU,EAAIT,EAAIS,EAAI5L,EAAIka,EACjBlR,IACR,CACD,OAAAmR,CAAQ/B,GAGN,OAFYpP,KAAKgQ,KACbjZ,GAAK,EAAIqY,EACNpP,IACR,CACD,MAAAoR,GACE,MAAMzQ,EAAIX,KAAKgQ,KAIf,OAHArP,EAAEuB,EAAI,IAAMvB,EAAEuB,EACdvB,EAAEwB,EAAI,IAAMxB,EAAEwB,EACdxB,EAAE3J,EAAI,IAAM2J,EAAE3J,EACPgJ,IACR,CACD,OAAAqR,CAAQjC,GAEN,OADAD,GAAOnP,KAAKgQ,KAAM,EAAGZ,GACdpP,IACR,CACD,MAAAsR,CAAOlC,GAEL,OADAD,GAAOnP,KAAKgQ,KAAM,GAAIZ,GACfpP,IACR,CACD,QAAAuR,CAASnC,GAEP,OADAD,GAAOnP,KAAKgQ,KAAM,EAAGZ,GACdpP,IACR,CACD,UAAAwR,CAAWpC,GAET,OADAD,GAAOnP,KAAKgQ,KAAM,GAAIZ,GACfpP,IACR,CACD,MAAAyR,CAAOC,GAEL,OAtaJ,SAAgB/Q,EAAG+Q,GACjB,IAAI7Q,EAAIgC,GAAQlC,GAChBE,EAAE,GAAKqC,GAAIrC,EAAE,GAAK6Q,GAClB7Q,EAAIoC,GAAQpC,GACZF,EAAEuB,EAAIrB,EAAE,GACRF,EAAEwB,EAAItB,EAAE,GACRF,EAAE3J,EAAI6J,EAAE,EACV,CA8ZI4Q,CAAOzR,KAAKgQ,KAAM0B,GACX1R,IACR;;;;;;OCzjBC,SAASjK,KACD,CAGR,MAAM4b,GAAM,MACZ,IAAIC,EAAK,EACT,MAAO,IAAIA,GACd,EAHe,GAQZ,SAASC,GAAc/Y,GACvB,OAAOA,OACX,CAKI,SAASkK,GAAQlK,GACjB,GAAI0G,MAAMwD,SAAWxD,MAAMwD,QAAQlK,GAC/B,OAAO,EAEX,MAAMoH,EAAO3J,OAAOub,UAAUC,SAASC,KAAKlZ,GAC5C,MAAyB,YAArBoH,EAAK+R,MAAM,EAAG,IAAuC,WAAnB/R,EAAK+R,OAAO,EAItD,CAKI,SAASC,GAASpZ,GAClB,OAAiB,OAAVA,GAA4D,oBAA1CvC,OAAOub,UAAUC,SAASC,KAAKlZ,EAC5D,CAII,SAASqZ,GAAerZ,GACxB,OAAyB,iBAAVA,GAAsBA,aAAiBsZ,SAAWC,UAAUvZ,EAC/E,CAKI,SAASwZ,GAAgBxZ,EAAOyZ,GAChC,OAAOJ,GAAerZ,GAASA,EAAQyZ,CAC3C,CAKI,SAASC,GAAe1Z,EAAOyZ,GAC/B,YAAwB,IAAVzZ,EAAwByZ,EAAezZ,CACzD,CACA,MACM2Z,GAAc,CAAC3Z,EAAO4Z,IAA6B,iBAAV5Z,GAAsBA,EAAM6Z,SAAS,KAAOC,WAAW9Z,GAAS,IAAM4Z,GAAa5Z,EAO9H,SAAS6C,GAAStF,EAAIwc,EAAMC,GAC5B,GAAIzc,GAAyB,mBAAZA,EAAG2b,KAChB,OAAO3b,EAAG0c,MAAMD,EAASD,EAEjC,CACA,SAASG,GAAKC,EAAU5c,EAAIyc,EAASI,GACjC,IAAIxX,EAAGqU,EAAKtP,EACZ,GAAIuC,GAAQiQ,GAER,GADAlD,EAAMkD,EAAS3X,OACX4X,EACA,IAAIxX,EAAIqU,EAAM,EAAGrU,GAAK,EAAGA,IACrBrF,EAAG2b,KAAKc,EAASG,EAASvX,GAAIA,QAGlC,IAAIA,EAAI,EAAGA,EAAIqU,EAAKrU,IAChBrF,EAAG2b,KAAKc,EAASG,EAASvX,GAAIA,QAGnC,GAAIwW,GAASe,GAGhB,IAFAxS,EAAOlK,OAAOkK,KAAKwS,GACnBlD,EAAMtP,EAAKnF,OACPI,EAAI,EAAGA,EAAIqU,EAAKrU,IAChBrF,EAAG2b,KAAKc,EAASG,EAASxS,EAAK/E,IAAK+E,EAAK/E,GAGrD,CAMI,SAASyX,GAAeC,EAAIC,GAC5B,IAAI3X,EAAG4X,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAG9X,SAAW+X,EAAG/X,OAC/B,OAAO,EAEX,IAAII,EAAI,EAAG4X,EAAOF,EAAG9X,OAAQI,EAAI4X,IAAQ5X,EAGrC,GAFA6X,EAAKH,EAAG1X,GACR8X,EAAKH,EAAG3X,GACJ6X,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGpT,QAAUqT,EAAGrT,MACvD,OAAO,EAGf,OAAO,CACX,CAII,SAASmP,GAAMoE,GACf,GAAI1Q,GAAQ0Q,GACR,OAAOA,EAAO9V,IAAI0R,IAEtB,GAAI4C,GAASwB,GAAS,CAClB,MAAMrc,EAASd,OAAOC,OAAO,MACvBiK,EAAOlK,OAAOkK,KAAKiT,GACnBC,EAAOlT,EAAKnF,OAClB,IAAInF,EAAI,EACR,KAAMA,EAAIwd,IAAQxd,EACdkB,EAAOoJ,EAAKtK,IAAMmZ,GAAMoE,EAAOjT,EAAKtK,KAExC,OAAOkB,CACV,CACD,OAAOqc,CACX,CACA,SAASE,GAAWpa,GAChB,OAIoB,IAJb,CACH,YACA,YACA,eACFI,QAAQJ,EACd,CAKI,SAASqa,GAAQra,EAAKnC,EAAQqc,EAAQjb,GACtC,IAAKmb,GAAWpa,GACZ,OAEJ,MAAMsa,EAAOzc,EAAOmC,GACdua,EAAOL,EAAOla,GAChB0Y,GAAS4B,IAAS5B,GAAS6B,GAE3BC,GAAMF,EAAMC,EAAMtb,GAElBpB,EAAOmC,GAAO8V,GAAMyE,EAE5B,CACA,SAASC,GAAM3c,EAAQqc,EAAQjb,GAC3B,MAAMwb,EAAUjR,GAAQ0Q,GAAUA,EAAS,CACvCA,GAEEJ,EAAOW,EAAQ3Y,OACrB,IAAK4W,GAAS7a,GACV,OAAOA,EAGX,MAAM6c,GADNzb,EAAUA,GAAW,IACEyb,QAAUL,GACjC,IAAIM,EACJ,IAAI,IAAIzY,EAAI,EAAGA,EAAI4X,IAAQ5X,EAAE,CAEzB,GADAyY,EAAUF,EAAQvY,IACbwW,GAASiC,GACV,SAEJ,MAAM1T,EAAOlK,OAAOkK,KAAK0T,GACzB,IAAI,IAAIhe,EAAI,EAAGwd,EAAOlT,EAAKnF,OAAQnF,EAAIwd,IAAQxd,EAC3C+d,EAAOzT,EAAKtK,GAAIkB,EAAQ8c,EAAS1b,EAExC,CACD,OAAOpB,CACX,CACA,SAAS+c,GAAQ/c,EAAQqc,GAErB,OAAOM,GAAM3c,EAAQqc,EAAQ,CACzBQ,OAAQG,IAEhB,CAII,SAASA,GAAU7a,EAAKnC,EAAQqc,GAChC,IAAKE,GAAWpa,GACZ,OAEJ,MAAMsa,EAAOzc,EAAOmC,GACdua,EAAOL,EAAOla,GAChB0Y,GAAS4B,IAAS5B,GAAS6B,GAC3BK,GAAQN,EAAMC,GACNxd,OAAOub,UAAUwC,eAAetC,KAAK3a,EAAQmC,KACrDnC,EAAOmC,GAAO8V,GAAMyE,GAE5B,CASA,MAAMQ,GAAe,CAEjB,GAAK5T,GAAIA,EAET+C,EAAI9G,GAAIA,EAAE8G,EACV8Q,EAAI5X,GAAIA,EAAE4X,GA+Bd,SAASC,GAAiBlU,EAAK/G,GAC3B,MAAMkb,EAAWH,GAAa/a,KAAS+a,GAAa/a,GAbxD,SAAyBA,GACrB,MAAMiH,EAhBN,SAAmBjH,GACnB,MAAMmb,EAAQnb,EAAIob,MAAM,KAClBnU,EAAO,GACb,IAAI4O,EAAM,GACV,IAAK,MAAMwF,KAAQF,EACftF,GAAOwF,EACHxF,EAAIsD,SAAS,MACbtD,EAAMA,EAAI4C,MAAM,GAAI,GAAK,KAEzBxR,EAAKpG,KAAKgV,GACVA,EAAM,IAGd,OAAO5O,CACX,CAEiBqU,CAAUtb,GACvB,OAAQ+G,IACJ,IAAK,MAAMpK,KAAKsK,EAAK,CACjB,GAAU,KAANtK,EACA,MAEJoK,EAAMA,GAAOA,EAAIpK,EACpB,CACD,OAAOoK,CAAG,CAElB,CAE+DwU,CAAgBvb,IAC3E,OAAOkb,EAASnU,EACpB,CAGI,SAASyU,GAAY5R,GACrB,OAAOA,EAAIuM,OAAO,GAAGsF,cAAgB7R,EAAI6O,MAAM,EACnD,CACA,MAAMiD,GAAWpc,QAAyB,IAAVA,EAC1Bqc,GAAcrc,GAAyB,mBAAVA,EAE7Bsc,GAAY,CAACre,EAAGC,KAClB,GAAID,EAAEse,OAASre,EAAEqe,KACb,OAAO,EAEX,IAAK,MAAMC,KAAQve,EACf,IAAKC,EAAE4E,IAAI0Z,GACP,OAAO,EAGf,OAAO,CAAI,EAYX,MAAMC,GAAKzU,KAAKyU,GACdC,GAAM,EAAID,GACVE,GAAQD,GAAMD,GACdG,GAAWtD,OAAOuD,kBAClBC,GAAcL,GAAK,IACnBM,GAAUN,GAAK,EACfO,GAAaP,GAAK,EAClBQ,GAAqB,EAALR,GAAS,EACzBS,GAAQlV,KAAKkV,MACbC,GAAOnV,KAAKmV,KAClB,SAASC,GAAaxS,EAAG8Q,EAAG2B,GACxB,OAAOrV,KAAKsV,IAAI1S,EAAI8Q,GAAK2B,CAC7B,CAGI,SAASE,GAAQC,GACjB,MAAMC,EAAezV,KAAKJ,MAAM4V,GAChCA,EAAQJ,GAAaI,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAME,EAAY1V,KAAKoO,IAAI,GAAIpO,KAAK2V,MAAMT,GAAMM,KAC1CI,EAAWJ,EAAQE,EAEzB,OADqBE,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DF,CAC1B,CAoBA,SAASG,GAAStZ,GACd,OAAQuZ,MAAMhE,WAAWvV,KAAOgV,SAAShV,EAC7C,CAOI,SAASwZ,GAAmBC,EAAOzf,EAAQ0f,GAC3C,IAAIrb,EAAG4X,EAAMxa,EACb,IAAI4C,EAAI,EAAG4X,EAAOwD,EAAMxb,OAAQI,EAAI4X,EAAM5X,IACtC5C,EAAQge,EAAMpb,GAAGqb,GACZH,MAAM9d,KACPzB,EAAO2J,IAAMF,KAAKE,IAAI3J,EAAO2J,IAAKlI,GAClCzB,EAAO0J,IAAMD,KAAKC,IAAI1J,EAAO0J,IAAKjI,GAG9C,CACA,SAASke,GAAUC,GACf,OAAOA,GAAW1B,GAAK,IAC3B,CACA,SAAS2B,GAAUC,GACf,OAAOA,GAAW,IAAM5B,GAC5B,CAOI,SAAS6B,GAAe1T,GACxB,IAAKyO,GAAezO,GAChB,OAEJ,IAAIlI,EAAI,EACJU,EAAI,EACR,KAAM4E,KAAKJ,MAAMgD,EAAIlI,GAAKA,IAAMkI,GAC5BlI,GAAK,GACLU,IAEJ,OAAOA,CACX,CAEA,SAASmb,GAAkBC,EAAaC,GACpC,MAAMC,EAAsBD,EAAW7T,EAAI4T,EAAY5T,EACjD+T,EAAsBF,EAAW/C,EAAI8C,EAAY9C,EACjDkD,EAA2B5W,KAAK6W,KAAKH,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIG,EAAQ9W,KAAK+W,MAAMJ,EAAqBD,GAI5C,OAHII,GAAS,GAAMrC,KACfqC,GAASpC,IAEN,CACHoC,QACAE,SAAUJ,EAElB,CACA,SAASK,GAAsBC,EAAKC,GAChC,OAAOnX,KAAK6W,KAAK7W,KAAKoO,IAAI+I,EAAIvU,EAAIsU,EAAItU,EAAG,GAAK5C,KAAKoO,IAAI+I,EAAIzD,EAAIwD,EAAIxD,EAAG,GAC1E,CAII,SAAS0D,GAAWnhB,EAAGC,GACvB,OAAQD,EAAIC,EAAIye,IAASD,GAAMD,EACnC,CAII,SAAS4C,GAAgBphB,GACzB,OAAQA,EAAIye,GAAMA,IAAOA,EAC7B,CAGI,SAAS4C,GAAcR,EAAOS,EAAOC,EAAKC,GAC1C,MAAMxhB,EAAIohB,GAAgBP,GACpBpV,EAAI2V,GAAgBE,GACpB7c,EAAI2c,GAAgBG,GACpBE,EAAeL,GAAgB3V,EAAIzL,GACnC0hB,EAAaN,GAAgB3c,EAAIzE,GACjC2hB,EAAeP,GAAgBphB,EAAIyL,GACnCmW,EAAaR,GAAgBphB,EAAIyE,GACvC,OAAOzE,IAAMyL,GAAKzL,IAAMyE,GAAK+c,GAAyB/V,IAAMhH,GAAKgd,EAAeC,GAAcC,EAAeC,CACjH,CAOI,SAASC,GAAY9f,EAAOkI,EAAKD,GACjC,OAAOD,KAAKC,IAAIC,EAAKF,KAAKE,IAAID,EAAKjI,GACvC,CAaI,SAAS+f,GAAW/f,EAAOuf,EAAOC,EAAKnC,EAAU,MACjD,OAAOrd,GAASgI,KAAKE,IAAIqX,EAAOC,GAAOnC,GAAWrd,GAASgI,KAAKC,IAAIsX,EAAOC,GAAOnC,CACtF,CAEA,SAAS2C,GAAQC,EAAOjgB,EAAOkgB,GAC3BA,EAAMA,GAAG,CAAM7Y,GAAQ4Y,EAAM5Y,GAASrH,GACtC,IAEImgB,EAFAC,EAAKH,EAAMzd,OAAS,EACpB6d,EAAK,EAET,KAAMD,EAAKC,EAAK,GACZF,EAAME,EAAKD,GAAM,EACbF,EAAIC,GACJE,EAAKF,EAELC,EAAKD,EAGb,MAAO,CACHE,KACAD,KAER,CAQI,MAAME,GAAe,CAACL,EAAOvf,EAAKV,EAAOugB,IAAOP,GAAQC,EAAOjgB,EAAOugB,EAAQlZ,IAC1E,MAAMmZ,EAAKP,EAAM5Y,GAAO3G,GACxB,OAAO8f,EAAKxgB,GAASwgB,IAAOxgB,GAASigB,EAAM5Y,EAAQ,GAAG3G,KAASV,CAAK,EACnEqH,GAAQ4Y,EAAM5Y,GAAO3G,GAAOV,GAO3BygB,GAAgB,CAACR,EAAOvf,EAAKV,IAAQggB,GAAQC,EAAOjgB,GAAQqH,GAAQ4Y,EAAM5Y,GAAO3G,IAAQV,IAkBnG,MAAM0gB,GAAc,CAChB,OACA,MACA,QACA,SACA,WAkCJ,SAASC,GAAoB3C,EAAO4C,GAChC,MAAMC,EAAO7C,EAAM8C,SACnB,IAAKD,EACD,OAEJ,MAAME,EAAYF,EAAKE,UACjB1Z,EAAQ0Z,EAAUjgB,QAAQ8f,IACjB,IAAXvZ,GACA0Z,EAAUzZ,OAAOD,EAAO,GAExB0Z,EAAUve,OAAS,IAGvBke,GAAY7iB,SAAS6C,WACVsd,EAAMtd,EAAI,WAEdsd,EAAM8C,SACjB,CAGI,SAASE,GAAaC,GACtB,MAAMpgB,EAAM,IAAIuB,IAAI6e,GACpB,OAAIpgB,EAAI0b,OAAS0E,EAAMze,OACZye,EAEJva,MAAMC,KAAK9F,EACtB,CAOG,MAAMqgB,GACiB,oBAAXC,OACA,SAASte,GACZ,OAAOA,GACnB,EAEWse,OAAOC,sBAKd,SAASC,GAAU9jB,EAAIyc,GACvB,IAAIsH,EAAY,GACZC,GAAU,EACd,OAAO,YAAYxH,GAEfuH,EAAYvH,EACPwH,IACDA,GAAU,EACVL,GAAiBhI,KAAKiI,QAAQ,KAC1BI,GAAU,EACVhkB,EAAG0c,MAAMD,EAASsH,EAAU,IAG5C,CACA,CAkBI,MAAME,GAAsBC,GAAkB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAIvFC,GAAiB,CAACD,EAAOlC,EAAOC,IAAgB,UAAViC,EAAoBlC,EAAkB,QAAVkC,EAAkBjC,GAAOD,EAAQC,GAAO,EAWhH,SAASmC,GAAiCC,EAAMC,EAAQC,GACxD,MAAMC,EAAaF,EAAOrf,OAC1B,IAAI+c,EAAQ,EACRyC,EAAQD,EACZ,GAAIH,EAAKK,QAAS,CACd,MAAMC,OAAEA,EAAMC,QAAGA,GAAaP,EACxBQ,EAAOF,EAAOE,MACdla,IAAEA,EAAGD,IAAGA,EAAMoa,WAAAA,EAAaC,WAAAA,GAAgBJ,EAAOK,gBACpDF,IACA9C,EAAQO,GAAY9X,KAAKE,IACzBoY,GAAa6B,EAASC,EAAMla,GAAKmY,GACjCyB,EAAqBC,EAAazB,GAAauB,EAAQO,EAAMF,EAAOM,iBAAiBta,IAAMmY,IAAK,EAAG0B,EAAa,IAGhHC,EADAM,EACQxC,GAAY9X,KAAKC,IACzBqY,GAAa6B,EAASD,EAAOE,KAAMna,GAAK,GAAMmY,GAAK,EACnD0B,EAAqB,EAAIxB,GAAauB,EAAQO,EAAMF,EAAOM,iBAAiBva,IAAM,GAAMmY,GAAK,GAAIb,EAAOwC,GAAcxC,EAE9GwC,EAAaxC,CAE5B,CACD,MAAO,CACHA,QACAyC,QAER,CAMI,SAASS,GAAoBb,GAC7B,MAAMc,OAAEA,EAASC,OAAAA,eAASC,GAAkBhB,EACtCiB,EAAY,CACdC,KAAMJ,EAAOxa,IACb6a,KAAML,EAAOza,IACb+a,KAAML,EAAOza,IACb+a,KAAMN,EAAO1a,KAEjB,IAAK2a,EAED,OADAhB,EAAKgB,aAAeC,GACb,EAEX,MAAMK,EAAUN,EAAaE,OAASJ,EAAOxa,KAAO0a,EAAaG,OAASL,EAAOza,KAAO2a,EAAaI,OAASL,EAAOza,KAAO0a,EAAaK,OAASN,EAAO1a,IAEzJ,OADAxK,OAAOP,OAAO0lB,EAAcC,GACrBK,CACX,CAEA,MAAMC,GAAUpL,GAAU,IAANA,GAAiB,IAANA,EACzBqL,GAAY,CAACrL,EAAGrO,EAAGtG,KAAM4E,KAAKoO,IAAI,EAAG,IAAM2B,GAAK,IAAM/P,KAAKqb,KAAKtL,EAAIrO,GAAKgT,GAAMtZ,GAC/EkgB,GAAa,CAACvL,EAAGrO,EAAGtG,IAAI4E,KAAKoO,IAAI,GAAI,GAAK2B,GAAK/P,KAAKqb,KAAKtL,EAAIrO,GAAKgT,GAAMtZ,GAAK,EAKzEmgB,GAAU,CAChBC,OAASzL,GAAIA,EACb0L,WAAa1L,GAAIA,EAAIA,EACrB2L,YAAc3L,IAAKA,GAAKA,EAAI,GAC5B4L,cAAgB5L,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,GAAK,MAASA,GAAKA,EAAI,GAAK,GAC3E6L,YAAc7L,GAAIA,EAAIA,EAAIA,EAC1B8L,aAAe9L,IAAKA,GAAK,GAAKA,EAAIA,EAAI,EACtC+L,eAAiB/L,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAClFgM,YAAchM,GAAIA,EAAIA,EAAIA,EAAIA,EAC9BiM,aAAejM,MAAOA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5CkM,eAAiBlM,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,GAAK,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC3FmM,YAAcnM,GAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCoM,aAAepM,IAAKA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CqM,eAAiBrM,IAAKA,GAAK,IAAO,EAAI,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAClGsM,WAAatM,GAA6B,EAAxB/P,KAAKsc,IAAIvM,EAAIgF,IAC/BwH,YAAcxM,GAAI/P,KAAKqb,IAAItL,EAAIgF,IAC/ByH,cAAgBzM,IAAK,IAAO/P,KAAKsc,IAAI7H,GAAK1E,GAAK,GAC/C0M,WAAa1M,GAAU,IAANA,EAAU,EAAI/P,KAAKoO,IAAI,EAAG,IAAM2B,EAAI,IACrD2M,YAAc3M,GAAU,IAANA,EAAU,EAA4B,EAAvB/P,KAAKoO,IAAI,GAAI,GAAK2B,GACnD4M,cAAgB5M,GAAIoL,GAAOpL,GAAKA,EAAIA,EAAI,GAAM,GAAM/P,KAAKoO,IAAI,EAAG,IAAU,EAAJ2B,EAAQ,IAAM,IAAyC,EAAjC/P,KAAKoO,IAAI,GAAI,IAAU,EAAJ2B,EAAQ,KACvH6M,WAAa7M,GAAIA,GAAK,EAAIA,IAAM/P,KAAK6W,KAAK,EAAI9G,EAAIA,GAAK,GACvD8M,YAAc9M,GAAI/P,KAAK6W,KAAK,GAAK9G,GAAK,GAAKA,GAC3C+M,cAAgB/M,IAAKA,GAAK,IAAO,GAAK,IAAO/P,KAAK6W,KAAK,EAAI9G,EAAIA,GAAK,GAAK,IAAO/P,KAAK6W,KAAK,GAAK9G,GAAK,GAAKA,GAAK,GAC9GgN,cAAgBhN,GAAIoL,GAAOpL,GAAKA,EAAIqL,GAAUrL,EAAG,KAAO,IACxDiN,eAAiBjN,GAAIoL,GAAOpL,GAAKA,EAAIuL,GAAWvL,EAAG,KAAO,IAC1D,gBAAAkN,CAAkBlN,GACd,MAAMrO,EAAI,MAEV,OAAOyZ,GAAOpL,GAAKA,EAAIA,EAAI,GAAM,GAAMqL,GAAc,EAAJrL,EAAOrO,EAD9C,KACsD,GAAM,GAAM4Z,GAAe,EAAJvL,EAAQ,EAAGrO,EADxF,IAEb,EACD,UAAAwb,CAAYnN,GACR,MAAMrO,EAAI,QACV,OAAOqO,EAAIA,IAAMrO,EAAI,GAAKqO,EAAIrO,EACjC,EACD,WAAAyb,CAAapN,GACT,MAAMrO,EAAI,QACV,OAAQqO,GAAK,GAAKA,IAAMrO,EAAI,GAAKqO,EAAIrO,GAAK,CAC7C,EACD,aAAA0b,CAAerN,GACX,IAAIrO,EAAI,QACR,OAAKqO,GAAK,IAAO,EACCA,EAAIA,IAAqB,GAAdrO,GAAK,QAAcqO,EAAIrO,GAAzC,GAEJ,KAAQqO,GAAK,GAAKA,IAAqB,GAAdrO,GAAK,QAAcqO,EAAIrO,GAAK,EAC/D,EACD2b,aAAetN,GAAI,EAAIwL,GAAQ+B,cAAc,EAAIvN,GACjD,aAAAuN,CAAevN,GACX,MAAMnT,EAAI,OACJZ,EAAI,KACV,OAAI+T,EAAI,EAAI/T,EACDY,EAAImT,EAAIA,EAEfA,EAAI,EAAI/T,EACDY,GAAKmT,GAAK,IAAM/T,GAAK+T,EAAI,IAEhCA,EAAI,IAAM/T,EACHY,GAAKmT,GAAK,KAAO/T,GAAK+T,EAAI,MAE9BnT,GAAKmT,GAAK,MAAQ/T,GAAK+T,EAAI,OACrC,EACDwN,gBAAkBxN,GAAIA,EAAI,GAAoC,GAA9BwL,GAAQ8B,aAAiB,EAAJtN,GAAkD,GAAnCwL,GAAQ+B,cAAkB,EAAJvN,EAAQ,GAAW,IAGjH,SAASyN,GAAoBxlB,GACzB,GAAIA,GAA0B,iBAAVA,EAAoB,CACpC,MAAMoH,EAAOpH,EAAMiZ,WACnB,MAAgB,2BAAT7R,GAA8C,4BAATA,CAC/C,CACD,OAAO,CACX,CACA,SAASoQ,GAAMxX,GACX,OAAOwlB,GAAoBxlB,GAASA,EAAQ,IAAI+W,GAAM/W,EAC1D,CACA,SAASylB,GAAczlB,GACnB,OAAOwlB,GAAoBxlB,GAASA,EAAQ,IAAI+W,GAAM/W,GAAOyY,SAAS,IAAKD,OAAO,IAAKrP,WAC3F,CAEA,MAAMuc,GAAU,CACZ,IACA,IACA,cACA,SACA,WAEEC,GAAS,CACX,QACA,cACA,mBAgFJ,MAAMC,GAAY,IAAI3f,IAWtB,SAAS4f,GAAaC,EAAKC,EAAQpmB,GAC/B,OAXJ,SAAyBomB,EAAQpmB,GAC7BA,EAAUA,GAAW,GACrB,MAAMqmB,EAAWD,EAASE,KAAKC,UAAUvmB,GACzC,IAAIwmB,EAAYP,GAAUQ,IAAIJ,GAK9B,OAJKG,IACDA,EAAY,IAAIE,KAAKC,aAAaP,EAAQpmB,GAC1CimB,GAAU/kB,IAAImlB,EAAUG,IAErBA,CACX,CAEWI,CAAgBR,EAAQpmB,GAAS6mB,OAAOV,EACnD,CAEA,MAAMW,GAAa,CAClBC,OAAQ1mB,GACMkK,GAAQlK,GAAUA,EAAQ,GAAKA,EAE7C,OAAA2mB,CAASC,EAAWvf,EAAOwf,GACpB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMb,EAAS7e,KAAK4f,MAAMnnB,QAAQomB,OAClC,IAAIgB,EACAC,EAAQJ,EACZ,GAAIC,EAAMrkB,OAAS,EAAG,CAClB,MAAMykB,EAAUjf,KAAKC,IAAID,KAAKsV,IAAIuJ,EAAM,GAAG7mB,OAAQgI,KAAKsV,IAAIuJ,EAAMA,EAAMrkB,OAAS,GAAGxC,SAChFinB,EAAU,MAAQA,EAAU,QAC5BF,EAAW,cAEfC,EA8BZ,SAAwBJ,EAAWC,GAC/B,IAAIG,EAAQH,EAAMrkB,OAAS,EAAIqkB,EAAM,GAAG7mB,MAAQ6mB,EAAM,GAAG7mB,MAAQ6mB,EAAM,GAAG7mB,MAAQ6mB,EAAM,GAAG7mB,MACvFgI,KAAKsV,IAAI0J,IAAU,GAAKJ,IAAc5e,KAAK2V,MAAMiJ,KACjDI,EAAQJ,EAAY5e,KAAK2V,MAAMiJ,IAEnC,OAAOI,CACX,CApCoBE,CAAeN,EAAWC,EACrC,CACD,MAAMM,EAAWjK,GAAMlV,KAAKsV,IAAI0J,IAC1BI,EAAatJ,MAAMqJ,GAAY,EAAInf,KAAKC,IAAID,KAAKE,KAAK,EAAIF,KAAK2V,MAAMwJ,GAAW,IAAK,GACrFxnB,EAAU,CACZonB,WACAM,sBAAuBD,EACvBE,sBAAuBF,GAG3B,OADA3pB,OAAOP,OAAOyC,EAASuH,KAAKvH,QAAQknB,MAAML,QACnCX,GAAae,EAAWb,EAAQpmB,EAC1C,EACJ,WAAA4nB,CAAaX,EAAWvf,EAAOwf,GACxB,GAAkB,IAAdD,EACA,MAAO,IAEX,MAAMY,EAASX,EAAMxf,GAAOogB,aAAeb,EAAY5e,KAAKoO,IAAI,GAAIpO,KAAK2V,MAAMT,GAAM0J,KACrF,MAAI,CACA,EACA,EACA,EACA,EACA,GACA,IACFc,SAASF,IAAWngB,EAAQ,GAAMwf,EAAMrkB,OAC/BikB,GAAWE,QAAQzN,KAAKhS,KAAM0f,EAAWvf,EAAOwf,GAEpD,EACV,GASJ,IAAIc,GAAQ,CACTlB,eA2EJ,MAAMmB,GAAYnqB,OAAOC,OAAO,MAC1B6C,GAAc9C,OAAOC,OAAO,MACjC,SAASmqB,GAAWrpB,EAAMkC,GACvB,IAAKA,EACD,OAAOlC,EAEX,MAAMmJ,EAAOjH,EAAIob,MAAM,KACvB,IAAI,IAAIlZ,EAAI,EAAG2B,EAAIoD,EAAKnF,OAAQI,EAAI2B,IAAK3B,EAAE,CACvC,MAAMvF,EAAIsK,EAAK/E,GACfpE,EAAOA,EAAKnB,KAAOmB,EAAKnB,GAAKI,OAAOC,OAAO,MAC9C,CACD,OAAOc,CACX,CACA,SAASqC,GAAIuF,EAAM0hB,EAAOpB,GACtB,MAAqB,iBAAVoB,EACA5M,GAAM2M,GAAWzhB,EAAM0hB,GAAQpB,GAEnCxL,GAAM2M,GAAWzhB,EAAM,IAAK0hB,EACvC,CACC,MAAMC,GACH,WAAA/Q,CAAYgR,EAAcC,GACtB/gB,KAAKghB,eAAY1jB,EACjB0C,KAAKihB,gBAAkB,kBACvBjhB,KAAKkhB,YAAc,kBACnBlhB,KAAKsQ,MAAQ,OACbtQ,KAAKmhB,SAAW,GAChBnhB,KAAKohB,iBAAoBtiB,GAAUA,EAAQ8gB,MAAMyB,SAASC,sBAC1DthB,KAAKuhB,SAAW,GAChBvhB,KAAKwhB,OAAS,CACV,YACA,WACA,QACA,aACA,aAEJxhB,KAAKyhB,KAAO,CACRC,OAAQ,qDACRrM,KAAM,GACN5b,MAAO,SACPkoB,WAAY,IACZpR,OAAQ,MAEZvQ,KAAK4hB,MAAQ,GACb5hB,KAAK6hB,qBAAuB,CAAC1lB,EAAK1D,IAAU8lB,GAAc9lB,EAAQwoB,iBAClEjhB,KAAK8hB,iBAAmB,CAAC3lB,EAAK1D,IAAU8lB,GAAc9lB,EAAQyoB,aAC9DlhB,KAAK+hB,WAAa,CAAC5lB,EAAK1D,IAAU8lB,GAAc9lB,EAAQ6X,OACxDtQ,KAAKgiB,UAAY,IACjBhiB,KAAKiiB,YAAc,CACfC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEtBpiB,KAAKqiB,qBAAsB,EAC3BriB,KAAKsiB,QAAU,KACftiB,KAAKuiB,QAAU,KACfviB,KAAKwiB,SAAU,EACfxiB,KAAKyiB,QAAU,GACfziB,KAAK0iB,YAAa,EAClB1iB,KAAK2iB,WAAQrlB,EACb0C,KAAK4iB,OAAS,GACd5iB,KAAK6iB,UAAW,EAChB7iB,KAAK8iB,yBAA0B,EAC/B9iB,KAAK+iB,SAASjC,GACd9gB,KAAK+S,MAAMgO,EACd,CACJ,GAAApnB,CAAIinB,EAAOpB,GACJ,OAAO7lB,GAAIqG,KAAM4gB,EAAOpB,EAC3B,CACJ,GAAAN,CAAI0B,GACG,OAAOD,GAAW3gB,KAAM4gB,EAC3B,CACJ,QAAAmC,CAASnC,EAAOpB,GACT,OAAO7lB,GAAIN,GAAaunB,EAAOpB,EAClC,CACD,QAAAwD,CAASpC,EAAOpB,GACZ,OAAO7lB,GAAI+mB,GAAWE,EAAOpB,EAChC,CACJ,KAAAyD,CAAMrC,EAAO7oB,EAAMmrB,EAAaC,GACzB,MAAMC,EAAczC,GAAW3gB,KAAM4gB,GAC/ByC,EAAoB1C,GAAW3gB,KAAMkjB,GACrCI,EAAc,IAAMvrB,EAC1BxB,OAAOgtB,iBAAiBH,EAAa,CACjCE,CAACA,GAAc,CACXxqB,MAAOsqB,EAAYrrB,GACnByrB,UAAU,GAEdzrB,CAACA,GAAO,CACJ0rB,YAAY,EACZ,GAAAvE,GACI,MAAMziB,EAAQuD,KAAKsjB,GACbjsB,EAASgsB,EAAkBF,GACjC,OAAIjR,GAASzV,GACFlG,OAAOP,OAAO,CAAE,EAAEqB,EAAQoF,GAE9B+V,GAAe/V,EAAOpF,EAChC,EACD,GAAAsC,CAAKb,GACDkH,KAAKsjB,GAAexqB,CACvB,IAGZ,CACD,KAAAia,CAAM2Q,GACFA,EAAS/sB,SAASoc,GAAQA,EAAM/S,OACnC,EAEL,IAAI2jB,GAA2B,IAAI9C,GAAS,CACxC+C,YAAc7rB,IAAQA,EAAK8rB,WAAW,MACtCC,WAAa/rB,GAAgB,WAATA,EACpB6pB,MAAO,CACHmC,UAAW,eAEf9B,YAAa,CACT2B,aAAa,EACbE,YAAY,IAEjB,CAlVH,SAAiCH,GAC7BA,EAAShqB,IAAI,YAAa,CACtBqqB,WAAO1mB,EACP2mB,SAAU,IACVC,OAAQ,eACR7tB,QAAIiH,EACJmC,UAAMnC,EACN6mB,UAAM7mB,EACN2R,QAAI3R,EACJ4C,UAAM5C,IAEVqmB,EAASZ,SAAS,YAAa,CAC3BgB,WAAW,EACXD,YAAY,EACZF,YAAc7rB,GAAgB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3E4rB,EAAShqB,IAAI,aAAc,CACvB8kB,OAAQ,CACJve,KAAM,QACNkkB,WAAY3F,IAEhBD,QAAS,CACLte,KAAM,SACNkkB,WAAY5F,MAGpBmF,EAASZ,SAAS,aAAc,CAC5BgB,UAAW,cAEfJ,EAAShqB,IAAI,cAAe,CACxB0qB,OAAQ,CACJrD,UAAW,CACPiD,SAAU,MAGlBK,OAAQ,CACJtD,UAAW,CACPiD,SAAU,IAGlBM,KAAM,CACFC,WAAY,CACR/F,OAAQ,CACJhf,KAAM,eAEVglB,QAAS,CACLvkB,KAAM,UACN+jB,SAAU,KAItBS,KAAM,CACFF,WAAY,CACR/F,OAAQ,CACJxP,GAAI,eAERwV,QAAS,CACLvkB,KAAM,UACNgkB,OAAQ,SACR7tB,GAAKsK,GAAQ,EAAJA,MAK7B,EAEA,SAA8BgjB,GAC1BA,EAAShqB,IAAI,SAAU,CACnBgrB,aAAa,EACbC,QAAS,CACLC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGlB,EA0EA,SAA4BrB,GACxBA,EAAShqB,IAAI,QAAS,CAClBsrB,SAAS,EACTC,QAAQ,EACRhS,SAAS,EACTiS,aAAa,EACpBC,OAAQ,QACDC,MAAM,EACbC,MAAO,EACAC,KAAM,CACFN,SAAS,EACTO,UAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,WAAY,EACZC,UAAW,CAACC,EAAMptB,IAAUA,EAAQ+sB,UACpCM,UAAW,CAACD,EAAMptB,IAAUA,EAAQ6X,MACpC4U,QAAQ,GAEZa,OAAQ,CACJd,SAAS,EACTe,KAAM,GACNC,WAAY,EACZC,MAAO,GAEXC,MAAO,CACHlB,SAAS,EACT/sB,KAAM,GACN0sB,QAAS,CACLC,IAAK,EACLE,OAAQ,IAGhBpF,MAAO,CACHyG,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB5B,QAAS,EACTK,SAAS,EACTwB,UAAU,EACVC,gBAAiB,EACjBC,YAAa,EACbhrB,SAAU8kB,GAAMlB,WAAWC,OAC3BoH,MAAO,CAAE,EACTC,MAAO,CAAE,EACTtM,MAAO,SACPuM,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGzBtD,EAASV,MAAM,cAAe,QAAS,GAAI,SAC3CU,EAASV,MAAM,aAAc,QAAS,GAAI,eAC1CU,EAASV,MAAM,eAAgB,QAAS,GAAI,eAC5CU,EAASV,MAAM,cAAe,QAAS,GAAI,SAC3CU,EAASZ,SAAS,QAAS,CACvBgB,WAAW,EACXH,YAAc7rB,IAAQA,EAAK8rB,WAAW,YAAc9rB,EAAK8rB,WAAW,UAAqB,aAAT9rB,GAAgC,WAATA,EACvG+rB,WAAa/rB,GAAgB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAE9E4rB,EAASZ,SAAS,SAAU,CACxBgB,UAAW,UAEfJ,EAASZ,SAAS,cAAe,CAC7Ba,YAAc7rB,GAAgB,oBAATA,GAAuC,aAATA,EACnD+rB,WAAa/rB,GAAgB,oBAATA,GAE5B,IAyII,SAASmvB,GAAa/qB,EAAKhE,EAAMgvB,EAAIC,EAASC,GAC9C,IAAIC,EAAYnvB,EAAKkvB,GAQrB,OAPKC,IACDA,EAAYnvB,EAAKkvB,GAAUlrB,EAAIorB,YAAYF,GAAQnB,MACnDiB,EAAG9sB,KAAKgtB,IAERC,EAAYF,IACZA,EAAUE,GAEPF,CACX,CAIA,SAASI,GAAarrB,EAAKslB,EAAMgG,EAAeC,GAE5C,IAAIvvB,GADJuvB,EAAQA,GAAS,IACAvvB,KAAOuvB,EAAMvvB,MAAQ,CAAA,EAClCgvB,EAAKO,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAMjG,OAASA,IACftpB,EAAOuvB,EAAMvvB,KAAO,GACpBgvB,EAAKO,EAAMC,eAAiB,GAC5BD,EAAMjG,KAAOA,GAEjBtlB,EAAIyrB,OACJzrB,EAAIslB,KAAOA,EACX,IAAI2F,EAAU,EACd,MAAM9T,EAAOmU,EAAcnsB,OAC3B,IAAII,EAAG8S,EAAGqZ,EAAMhxB,EAAOixB,EACvB,IAAIpsB,EAAI,EAAGA,EAAI4X,EAAM5X,IAGjB,GAFA7E,EAAQ4wB,EAAc/rB,GAElB7E,SAA0CmM,GAAQnM,IAE/C,GAAImM,GAAQnM,GAGf,IAAI2X,EAAI,EAAGqZ,EAAOhxB,EAAMyE,OAAQkT,EAAIqZ,EAAMrZ,IACtCsZ,EAAcjxB,EAAM2X,GAEhBsZ,SAAsD9kB,GAAQ8kB,KAC9DV,EAAUF,GAAa/qB,EAAKhE,EAAMgvB,EAAIC,EAASU,SARvDV,EAAUF,GAAa/qB,EAAKhE,EAAMgvB,EAAIC,EAASvwB,GAavDsF,EAAI4rB,UACJ,MAAMC,EAAQb,EAAG7rB,OAAS,EAC1B,GAAI0sB,EAAQP,EAAcnsB,OAAQ,CAC9B,IAAII,EAAI,EAAGA,EAAIssB,EAAOtsB,WACXvD,EAAKgvB,EAAGzrB,IAEnByrB,EAAG/mB,OAAO,EAAG4nB,EAChB,CACD,OAAOZ,CACX,CAQI,SAASa,GAAYrI,EAAOsI,EAAOhC,GACnC,MAAM9E,EAAmBxB,EAAMuI,wBACzBC,EAAsB,IAAVlC,EAAcplB,KAAKC,IAAImlB,EAAQ,EAAG,IAAO,EAC3D,OAAOplB,KAAKJ,OAAOwnB,EAAQE,GAAahH,GAAoBA,EAAmBgH,CACnF,CAGI,SAASC,GAAYC,EAAQnsB,IACxBA,GAAQmsB,MAGbnsB,EAAMA,GAAOmsB,EAAOC,WAAW,OAC3BX,OAGJzrB,EAAIqsB,iBACJrsB,EAAIssB,UAAU,EAAG,EAAGH,EAAOpC,MAAOoC,EAAOI,QACzCvsB,EAAI4rB,UACR,CACA,SAASY,GAAUxsB,EAAK1D,EAASiL,EAAG8Q,GAEhCoU,GAAgBzsB,EAAK1D,EAASiL,EAAG8Q,EAAG,KACxC,CAEA,SAASoU,GAAgBzsB,EAAK1D,EAASiL,EAAG8Q,EAAG7R,GACzC,IAAIzC,EAAM2oB,EAASC,EAASzT,EAAM0T,EAAc7C,EAAO8C,EAAUC,EACjE,MAAMxvB,EAAQhB,EAAQywB,WAChBC,EAAW1wB,EAAQ0wB,SACnBC,EAAS3wB,EAAQ2wB,OACvB,IAAIC,GAAOF,GAAY,GAAKvT,GAC5B,GAAInc,GAA0B,iBAAVA,IAChByG,EAAOzG,EAAMsY,WACA,8BAAT7R,GAAiD,+BAATA,GAMxC,OALA/D,EAAIyrB,OACJzrB,EAAImtB,UAAU5lB,EAAG8Q,GACjBrY,EAAIsV,OAAO4X,GACXltB,EAAIotB,UAAU9vB,GAAQA,EAAMysB,MAAQ,GAAIzsB,EAAMivB,OAAS,EAAGjvB,EAAMysB,MAAOzsB,EAAMivB,aAC7EvsB,EAAI4rB,UAIZ,KAAInR,MAAMwS,IAAWA,GAAU,GAA/B,CAIA,OADAjtB,EAAIqtB,YACG/vB,GAEH,QACQkJ,EACAxG,EAAIstB,QAAQ/lB,EAAG8Q,EAAG7R,EAAI,EAAGymB,EAAQ,EAAG,EAAG5T,IAEvCrZ,EAAIutB,IAAIhmB,EAAG8Q,EAAG4U,EAAQ,EAAG5T,IAE7BrZ,EAAIwtB,YACJ,MACJ,IAAK,WACDzD,EAAQvjB,EAAIA,EAAI,EAAIymB,EACpBjtB,EAAIytB,OAAOlmB,EAAI5C,KAAKqb,IAAIkN,GAAOnD,EAAO1R,EAAI1T,KAAKsc,IAAIiM,GAAOD,GAC1DC,GAAOtT,GACP5Z,EAAI0tB,OAAOnmB,EAAI5C,KAAKqb,IAAIkN,GAAOnD,EAAO1R,EAAI1T,KAAKsc,IAAIiM,GAAOD,GAC1DC,GAAOtT,GACP5Z,EAAI0tB,OAAOnmB,EAAI5C,KAAKqb,IAAIkN,GAAOnD,EAAO1R,EAAI1T,KAAKsc,IAAIiM,GAAOD,GAC1DjtB,EAAIwtB,YACJ,MACJ,IAAK,cAQDZ,EAAwB,KAATK,EACf/T,EAAO+T,EAASL,EAChBF,EAAU/nB,KAAKsc,IAAIiM,EAAMvT,IAAcT,EACvC2T,EAAWloB,KAAKsc,IAAIiM,EAAMvT,KAAenT,EAAIA,EAAI,EAAIomB,EAAe1T,GACpEyT,EAAUhoB,KAAKqb,IAAIkN,EAAMvT,IAAcT,EACvC4T,EAAWnoB,KAAKqb,IAAIkN,EAAMvT,KAAenT,EAAIA,EAAI,EAAIomB,EAAe1T,GACpElZ,EAAIutB,IAAIhmB,EAAIslB,EAAUxU,EAAIsU,EAASC,EAAcM,EAAM9T,GAAI8T,EAAMxT,IACjE1Z,EAAIutB,IAAIhmB,EAAIulB,EAAUzU,EAAIqU,EAASE,EAAcM,EAAMxT,GAASwT,GAChEltB,EAAIutB,IAAIhmB,EAAIslB,EAAUxU,EAAIsU,EAASC,EAAcM,EAAKA,EAAMxT,IAC5D1Z,EAAIutB,IAAIhmB,EAAIulB,EAAUzU,EAAIqU,EAASE,EAAcM,EAAMxT,GAASwT,EAAM9T,IACtEpZ,EAAIwtB,YACJ,MACJ,IAAK,OACD,IAAKR,EAAU,CACX9T,EAAOvU,KAAKgpB,QAAUV,EACtBlD,EAAQvjB,EAAIA,EAAI,EAAI0S,EACpBlZ,EAAI4tB,KAAKrmB,EAAIwiB,EAAO1R,EAAIa,EAAM,EAAI6Q,EAAO,EAAI7Q,GAC7C,KACH,CACDgU,GAAOvT,GACS,IAAK,UACrBkT,EAAWloB,KAAKsc,IAAIiM,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCP,EAAU/nB,KAAKsc,IAAIiM,GAAOD,EAC1BN,EAAUhoB,KAAKqb,IAAIkN,GAAOD,EAC1BH,EAAWnoB,KAAKqb,IAAIkN,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCjtB,EAAIytB,OAAOlmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAI0tB,OAAOnmB,EAAIulB,EAAUzU,EAAIqU,GAC7B1sB,EAAI0tB,OAAOnmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAI0tB,OAAOnmB,EAAIulB,EAAUzU,EAAIqU,GAC7B1sB,EAAIwtB,YACJ,MACJ,IAAK,WACDN,GAAOvT,GACS,IAAK,QACrBkT,EAAWloB,KAAKsc,IAAIiM,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCP,EAAU/nB,KAAKsc,IAAIiM,GAAOD,EAC1BN,EAAUhoB,KAAKqb,IAAIkN,GAAOD,EAC1BH,EAAWnoB,KAAKqb,IAAIkN,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCjtB,EAAIytB,OAAOlmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAI0tB,OAAOnmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAIytB,OAAOlmB,EAAIulB,EAAUzU,EAAIqU,GAC7B1sB,EAAI0tB,OAAOnmB,EAAIulB,EAAUzU,EAAIqU,GAC7B,MACJ,IAAK,OACDG,EAAWloB,KAAKsc,IAAIiM,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCP,EAAU/nB,KAAKsc,IAAIiM,GAAOD,EAC1BN,EAAUhoB,KAAKqb,IAAIkN,GAAOD,EAC1BH,EAAWnoB,KAAKqb,IAAIkN,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCjtB,EAAIytB,OAAOlmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAI0tB,OAAOnmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAIytB,OAAOlmB,EAAIulB,EAAUzU,EAAIqU,GAC7B1sB,EAAI0tB,OAAOnmB,EAAIulB,EAAUzU,EAAIqU,GAC7BQ,GAAOvT,GACPkT,EAAWloB,KAAKsc,IAAIiM,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCP,EAAU/nB,KAAKsc,IAAIiM,GAAOD,EAC1BN,EAAUhoB,KAAKqb,IAAIkN,GAAOD,EAC1BH,EAAWnoB,KAAKqb,IAAIkN,IAAQ1mB,EAAIA,EAAI,EAAIymB,GACxCjtB,EAAIytB,OAAOlmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAI0tB,OAAOnmB,EAAIslB,EAAUxU,EAAIsU,GAC7B3sB,EAAIytB,OAAOlmB,EAAIulB,EAAUzU,EAAIqU,GAC7B1sB,EAAI0tB,OAAOnmB,EAAIulB,EAAUzU,EAAIqU,GAC7B,MACJ,IAAK,OACDA,EAAUlmB,EAAIA,EAAI,EAAI7B,KAAKsc,IAAIiM,GAAOD,EACtCN,EAAUhoB,KAAKqb,IAAIkN,GAAOD,EAC1BjtB,EAAIytB,OAAOlmB,EAAImlB,EAASrU,EAAIsU,GAC5B3sB,EAAI0tB,OAAOnmB,EAAImlB,EAASrU,EAAIsU,GAC5B,MACJ,IAAK,OACD3sB,EAAIytB,OAAOlmB,EAAG8Q,GACdrY,EAAI0tB,OAAOnmB,EAAI5C,KAAKsc,IAAIiM,IAAQ1mB,EAAIA,EAAI,EAAIymB,GAAS5U,EAAI1T,KAAKqb,IAAIkN,GAAOD,GACzE,MACJ,KAAK,EACDjtB,EAAIwtB,YAGZxtB,EAAIkC,OACA5F,EAAQuxB,YAAc,GACtB7tB,EAAI8tB,QA3GP,CA6GL,CAOI,SAASC,GAAeC,EAAOC,EAAMC,GAErC,OADAA,EAASA,GAAU,IACXD,GAAQD,GAASA,EAAMzmB,EAAI0mB,EAAKpF,KAAOqF,GAAUF,EAAMzmB,EAAI0mB,EAAKtF,MAAQuF,GAAUF,EAAM3V,EAAI4V,EAAKvF,IAAMwF,GAAUF,EAAM3V,EAAI4V,EAAKrF,OAASsF,CACrJ,CACA,SAASC,GAASnuB,EAAKiuB,GACnBjuB,EAAIyrB,OACJzrB,EAAIqtB,YACJrtB,EAAI4tB,KAAKK,EAAKpF,KAAMoF,EAAKvF,IAAKuF,EAAKtF,MAAQsF,EAAKpF,KAAMoF,EAAKrF,OAASqF,EAAKvF,KACzE1oB,EAAIkpB,MACR,CACA,SAASkF,GAAWpuB,GAChBA,EAAI4rB,SACR,CAGI,SAASyC,GAAeruB,EAAKsuB,EAAUpzB,EAAQqzB,EAAMxI,GACrD,IAAKuI,EACD,OAAOtuB,EAAI0tB,OAAOxyB,EAAOqM,EAAGrM,EAAOmd,GAEvC,GAAa,WAAT0N,EAAmB,CACnB,MAAMyI,GAAYF,EAAS/mB,EAAIrM,EAAOqM,GAAK,EAC3CvH,EAAI0tB,OAAOc,EAAUF,EAASjW,GAC9BrY,EAAI0tB,OAAOc,EAAUtzB,EAAOmd,EAC/B,KAAmB,UAAT0N,KAAuBwI,EAC9BvuB,EAAI0tB,OAAOY,EAAS/mB,EAAGrM,EAAOmd,GAE9BrY,EAAI0tB,OAAOxyB,EAAOqM,EAAG+mB,EAASjW,GAElCrY,EAAI0tB,OAAOxyB,EAAOqM,EAAGrM,EAAOmd,EAChC,CAGI,SAASoW,GAAezuB,EAAKsuB,EAAUpzB,EAAQqzB,GAC/C,IAAKD,EACD,OAAOtuB,EAAI0tB,OAAOxyB,EAAOqM,EAAGrM,EAAOmd,GAEvCrY,EAAI0uB,cAAcH,EAAOD,EAASK,KAAOL,EAASM,KAAML,EAAOD,EAASO,KAAOP,EAASQ,KAAMP,EAAOrzB,EAAO0zB,KAAO1zB,EAAOyzB,KAAMJ,EAAOrzB,EAAO4zB,KAAO5zB,EAAO2zB,KAAM3zB,EAAOqM,EAAGrM,EAAOmd,EACvL,CAkBA,SAAS0W,GAAa/uB,EAAKuH,EAAG8Q,EAAG2W,EAAMC,GACnC,GAAIA,EAAKC,eAAiBD,EAAKE,UAAW,CAOtC,MAAMC,EAAUpvB,EAAIorB,YAAY4D,GAC1BnG,EAAOthB,EAAI6nB,EAAQC,sBACnB1G,EAAQphB,EAAI6nB,EAAQE,uBACpB5G,EAAMrQ,EAAI+W,EAAQG,wBAClB3G,EAASvQ,EAAI+W,EAAQI,yBACrBC,EAAcR,EAAKC,eAAiBxG,EAAME,GAAU,EAAIA,EAC9D5oB,EAAI0vB,YAAc1vB,EAAI2vB,UACtB3vB,EAAIqtB,YACJrtB,EAAIqpB,UAAY4F,EAAKW,iBAAmB,EACxC5vB,EAAIytB,OAAO5E,EAAM4G,GACjBzvB,EAAI0tB,OAAO/E,EAAO8G,GAClBzvB,EAAI8tB,QACP,CACL,CACA,SAAS+B,GAAa7vB,EAAKivB,GACvB,MAAMa,EAAW9vB,EAAI2vB,UACrB3vB,EAAI2vB,UAAYV,EAAK9a,MACrBnU,EAAI+vB,SAASd,EAAKpG,KAAMoG,EAAKvG,IAAKuG,EAAKlF,MAAOkF,EAAK1C,QACnDvsB,EAAI2vB,UAAYG,CACpB,CAGI,SAASE,GAAWhwB,EAAKjE,EAAMwL,EAAG8Q,EAAGiN,EAAM2J,EAAO,IAClD,MAAMgB,EAAQppB,GAAQ9K,GAAQA,EAAO,CACjCA,GAEE+xB,EAASmB,EAAKiB,YAAc,GAA0B,KAArBjB,EAAKkB,YAC5C,IAAI5wB,EAAGyvB,EAIP,IAHAhvB,EAAIyrB,OACJzrB,EAAIslB,KAAOA,EAAK4F,OAtDpB,SAAuBlrB,EAAKivB,GACpBA,EAAKmB,aACLpwB,EAAImtB,UAAU8B,EAAKmB,YAAY,GAAInB,EAAKmB,YAAY,IAEnD1a,GAAcuZ,EAAKjC,WACpBhtB,EAAIsV,OAAO2Z,EAAKjC,UAEhBiC,EAAK9a,QACLnU,EAAI2vB,UAAYV,EAAK9a,OAErB8a,EAAKoB,YACLrwB,EAAIqwB,UAAYpB,EAAKoB,WAErBpB,EAAKqB,eACLtwB,EAAIswB,aAAerB,EAAKqB,aAEhC,CAuCIC,CAAcvwB,EAAKivB,GACf1vB,EAAI,EAAGA,EAAI0wB,EAAM9wB,SAAUI,EAC3ByvB,EAAOiB,EAAM1wB,GACT0vB,EAAKuB,UACLX,GAAa7vB,EAAKivB,EAAKuB,UAEvB1C,IACImB,EAAKkB,cACLnwB,EAAI0vB,YAAcT,EAAKkB,aAEtBza,GAAcuZ,EAAKiB,eACpBlwB,EAAIqpB,UAAY4F,EAAKiB,aAEzBlwB,EAAIywB,WAAWzB,EAAMznB,EAAG8Q,EAAG4W,EAAKyB,WAEpC1wB,EAAI2wB,SAAS3B,EAAMznB,EAAG8Q,EAAG4W,EAAKyB,UAC9B3B,GAAa/uB,EAAKuH,EAAG8Q,EAAG2W,EAAMC,GAC9B5W,GAAKpC,OAAOqP,EAAKE,YAErBxlB,EAAI4rB,SACR,CAKI,SAASgF,GAAmB5wB,EAAK4tB,GACjC,MAAMrmB,EAAEA,EAAC8Q,EAAGA,EAAI7R,EAAAA,EAAI9B,EAAAA,EAAIuoB,OAAAA,GAAYW,EAEpC5tB,EAAIutB,IAAIhmB,EAAI0lB,EAAO4D,QAASxY,EAAI4U,EAAO4D,QAAS5D,EAAO4D,QAAS,IAAMzX,GAAIA,IAAI,GAE9EpZ,EAAI0tB,OAAOnmB,EAAG8Q,EAAI3T,EAAIuoB,EAAO6D,YAE7B9wB,EAAIutB,IAAIhmB,EAAI0lB,EAAO6D,WAAYzY,EAAI3T,EAAIuoB,EAAO6D,WAAY7D,EAAO6D,WAAY1X,GAAIM,IAAS,GAE1F1Z,EAAI0tB,OAAOnmB,EAAIf,EAAIymB,EAAO8D,YAAa1Y,EAAI3T,GAE3C1E,EAAIutB,IAAIhmB,EAAIf,EAAIymB,EAAO8D,YAAa1Y,EAAI3T,EAAIuoB,EAAO8D,YAAa9D,EAAO8D,YAAarX,GAAS,GAAG,GAEhG1Z,EAAI0tB,OAAOnmB,EAAIf,EAAG6R,EAAI4U,EAAO+D,UAE7BhxB,EAAIutB,IAAIhmB,EAAIf,EAAIymB,EAAO+D,SAAU3Y,EAAI4U,EAAO+D,SAAU/D,EAAO+D,SAAU,GAAItX,IAAS,GAEpF1Z,EAAI0tB,OAAOnmB,EAAI0lB,EAAO4D,QAASxY,EACnC,CAEA,MAAM4Y,GAAc,uCACdC,GAAa,wEAWf,SAASC,GAAax0B,EAAOuc,GAC7B,MAAMkY,GAAW,GAAKz0B,GAAO00B,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACpB,OAAc,IAAPlY,EAGX,OADAvc,GAASy0B,EAAQ,GACVA,EAAQ,IACX,IAAK,KACD,OAAOz0B,EACX,IAAK,IACDA,GAAS,IAGjB,OAAOuc,EAAOvc,CAClB,CACA,MAAM20B,GAAgB9sB,IAAKA,GAAK,EAChC,SAAS+sB,GAAkB50B,EAAO5B,GAC9B,MAAMkI,EAAM,CAAA,EACNuuB,EAAWzb,GAAShb,GACpBuJ,EAAOktB,EAAWp3B,OAAOkK,KAAKvJ,GAASA,EACvC02B,EAAO1b,GAASpZ,GAAS60B,EAAYE,GAAOrb,GAAe1Z,EAAM+0B,GAAO/0B,EAAM5B,EAAM22B,KAAWA,GAAO/0B,EAAM+0B,GAAQ,IAAI/0B,EAC9H,IAAK,MAAM+0B,KAAQptB,EACfrB,EAAIyuB,GAAQJ,GAAaG,EAAKC,IAElC,OAAOzuB,CACX,CAQI,SAAS0uB,GAAOh1B,GAChB,OAAO40B,GAAkB50B,EAAO,CAC5B+rB,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,KAAM,KAEd,CAOI,SAAS+I,GAAcj1B,GACvB,OAAO40B,GAAkB50B,EAAO,CAC5B,UACA,WACA,aACA,eAER,CAQI,SAASk1B,GAAUl1B,GACnB,MAAMyH,EAAMutB,GAAOh1B,GAGnB,OAFAyH,EAAI2lB,MAAQ3lB,EAAIykB,KAAOzkB,EAAIukB,MAC3BvkB,EAAImoB,OAASnoB,EAAIskB,IAAMtkB,EAAIwkB,OACpBxkB,CACX,CAOI,SAAS0tB,GAAOx1B,EAASy1B,GACzBz1B,EAAUA,GAAW,GACrBy1B,EAAWA,GAAYvK,GAASlC,KAChC,IAAIpM,EAAO7C,GAAe/Z,EAAQ4c,KAAM6Y,EAAS7Y,MAC7B,iBAATA,IACPA,EAAOzG,SAASyG,EAAM,KAE1B,IAAI5b,EAAQ+Y,GAAe/Z,EAAQgB,MAAOy0B,EAASz0B,OAC/CA,KAAW,GAAKA,GAAO+zB,MAAMH,MAC7Bc,QAAQC,KAAK,kCAAoC30B,EAAQ,KACzDA,OAAQ6D,GAEZ,MAAMmkB,EAAO,CACTC,OAAQlP,GAAe/Z,EAAQipB,OAAQwM,EAASxM,QAChDC,WAAY2L,GAAa9a,GAAe/Z,EAAQkpB,WAAYuM,EAASvM,YAAatM,GAClFA,OACA5b,QACA8W,OAAQiC,GAAe/Z,EAAQ8X,OAAQ2d,EAAS3d,QAChD8W,OAAQ,IAGZ,OADA5F,EAAK4F,OAzdL,SAAsB5F,GACtB,OAAKA,GAAQ5P,GAAc4P,EAAKpM,OAASxD,GAAc4P,EAAKC,QACjD,MAEHD,EAAKhoB,MAAQgoB,EAAKhoB,MAAQ,IAAM,KAAOgoB,EAAKlR,OAASkR,EAAKlR,OAAS,IAAM,IAAMkR,EAAKpM,KAAO,MAAQoM,EAAKC,MACpH,CAodkB2M,CAAa5M,GACpBA,CACX,CAWI,SAAS3mB,GAAQwzB,EAAQxvB,EAASqB,EAAOouB,GACzC,IACI7yB,EAAG4X,EAAMxa,EADT01B,GAAY,EAEhB,IAAI9yB,EAAI,EAAG4X,EAAOgb,EAAOhzB,OAAQI,EAAI4X,IAAQ5X,EAEzC,GADA5C,EAAQw1B,EAAO5yB,QACD4B,IAAVxE,SAGYwE,IAAZwB,GAA0C,mBAAVhG,IAChCA,EAAQA,EAAMgG,GACd0vB,GAAY,QAEFlxB,IAAV6C,GAAuB6C,GAAQlK,KAC/BA,EAAQA,EAAMqH,EAAQrH,EAAMwC,QAC5BkzB,GAAY,QAEFlxB,IAAVxE,GAIA,OAHIy1B,IAASC,IACTD,EAAKC,WAAY,GAEd11B,CAGnB,CAeA,SAAS21B,GAAcC,EAAe5vB,GAClC,OAAOvI,OAAOP,OAAOO,OAAOC,OAAOk4B,GAAgB5vB,EACvD,CAWI,SAAS6vB,GAAgBC,EAAQC,EAAW,CAC5C,IACDC,EAAYZ,EAAUa,EAAY,KAAIH,EAAO,KAC5C,MAAMI,EAAkBF,GAAcF,OACd,IAAbV,IACPA,EAAWe,GAAS,YAAaL,IAErC,MAAMlH,EAAQ,CACV,CAACwH,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAAST,EACTU,YAAaN,EACbjL,UAAWmK,EACXqB,WAAYR,EACZ/L,SAAWpC,GAAQ+N,GAAgB,CAC3B/N,KACGgO,GACJC,EAAUG,EAAiBd,IAEtC,OAAO,IAAIsB,MAAM9H,EAAO,CAGpB+H,eAAe,CAACp4B,EAAQw2B,YACbx2B,EAAOw2B,UACPx2B,EAAOq4B,aACPd,EAAO,GAAGf,IACV,GAIX3O,IAAI,CAAC7nB,EAAQw2B,IACF8B,GAAQt4B,EAAQw2B,GAAM,IAyOzC,SAA8BA,EAAMgB,EAAUD,EAAQgB,GAClD,IAAI92B,EACJ,IAAK,MAAM+2B,KAAUhB,EAEjB,GADA/1B,EAAQm2B,GAASa,GAAQD,EAAQhC,GAAOe,QACnB,IAAV91B,EACP,OAAOi3B,GAAiBlC,EAAM/0B,GAASk3B,GAAkBpB,EAAQgB,EAAO/B,EAAM/0B,GAASA,CAGnG,CAjP6Cm3B,CAAqBpC,EAAMgB,EAAUD,EAAQv3B,KAKlF64B,yBAAyB,CAAC74B,EAAQw2B,IACvBsC,QAAQD,yBAAyB74B,EAAOg4B,QAAQ,GAAIxB,GAI/DuC,eAAe,IACJD,QAAQC,eAAexB,EAAO,IAIzChzB,IAAI,CAACvE,EAAQw2B,IACFwC,GAAqBh5B,GAAQmpB,SAASqN,GAIjDyC,QAASj5B,GACEg5B,GAAqBh5B,GAIhC,GAAAsC,CAAKtC,EAAQw2B,EAAM/0B,GACf,MAAMy3B,EAAUl5B,EAAOm5B,WAAan5B,EAAOm5B,SAAWzB,KAGtD,OAFA13B,EAAOw2B,GAAQ0C,EAAQ1C,GAAQ/0B,SACxBzB,EAAOq4B,OACP,CACV,GAET,CAQI,SAASe,GAAeb,EAAO9wB,EAAS4xB,EAAUC,GAClD,MAAMjJ,EAAQ,CACV0H,YAAY,EACZwB,OAAQhB,EACRiB,SAAU/xB,EACVgyB,UAAWJ,EACXK,OAAQ,IAAI71B,IACZ4lB,aAAcA,GAAa8O,EAAOe,GAClCK,WAAa70B,GAAMs0B,GAAeb,EAAOzzB,EAAKu0B,EAAUC,GACxD3N,SAAWpC,GAAQ6P,GAAeb,EAAM5M,SAASpC,GAAQ9hB,EAAS4xB,EAAUC,IAEhF,OAAO,IAAInB,MAAM9H,EAAO,CAGpB+H,eAAe,CAACp4B,EAAQw2B,YACbx2B,EAAOw2B,UACP+B,EAAM/B,IACN,GAIX3O,IAAI,CAAC7nB,EAAQw2B,EAAMoD,IACRtB,GAAQt4B,EAAQw2B,GAAM,IA6DzC,SAA6Bx2B,EAAQw2B,EAAMoD,GACvC,MAAML,OAAEA,EAAMC,SAAGA,EAAWC,UAAAA,EAAYhQ,aAAcznB,GAAiBhC,EACvE,IAAIyB,EAAQ83B,EAAO/C,GAEf1Y,GAAWrc,IAAUO,EAAY63B,aAAarD,KAC9C/0B,EAWR,SAA4B+0B,EAAMsD,EAAU95B,EAAQ45B,GAChD,MAAML,OAAEA,EAAMC,SAAGA,EAAQC,UAAGA,EAASC,OAAGA,GAAY15B,EACpD,GAAI05B,EAAOn1B,IAAIiyB,GACX,MAAM,IAAI5zB,MAAM,uBAAyBuF,MAAMC,KAAKsxB,GAAQK,KAAK,MAAQ,KAAOvD,GAEpFkD,EAAOl1B,IAAIgyB,GACX,IAAI/0B,EAAQq4B,EAASN,EAAUC,GAAaG,GAC5CF,EAAOr0B,OAAOmxB,GACVkC,GAAiBlC,EAAM/0B,KAEvBA,EAAQk3B,GAAkBY,EAAOvB,QAASuB,EAAQ/C,EAAM/0B,IAE5D,OAAOA,CACX,CAxBgBu4B,CAAmBxD,EAAM/0B,EAAOzB,EAAQ45B,IAEhDjuB,GAAQlK,IAAUA,EAAMwC,SACxBxC,EAsBR,SAAuB+0B,EAAM/0B,EAAOzB,EAAQi6B,GACxC,MAAMV,OAAEA,EAAMC,SAAGA,EAAWC,UAAAA,EAAYhQ,aAAcznB,GAAiBhC,EACvE,QAA8B,IAAnBw5B,EAAS1wB,OAAyBmxB,EAAYzD,GACrD,OAAO/0B,EAAM+3B,EAAS1wB,MAAQrH,EAAMwC,QACjC,GAAI4W,GAASpZ,EAAM,IAAK,CAE3B,MAAMy4B,EAAMz4B,EACN81B,EAASgC,EAAOvB,QAAQxxB,QAAQ2E,GAAIA,IAAM+uB,IAChDz4B,EAAQ,GACR,IAAK,MAAMwc,KAAQic,EAAI,CACnB,MAAM7c,EAAWsb,GAAkBpB,EAAQgC,EAAQ/C,EAAMvY,GACzDxc,EAAMuB,KAAKo2B,GAAe/b,EAAUmc,EAAUC,GAAaA,EAAUjD,GAAOx0B,GAC/E,CACJ,CACD,OAAOP,CACX,CArCgB04B,CAAc3D,EAAM/0B,EAAOzB,EAAQgC,EAAYi4B,cAEvDvB,GAAiBlC,EAAM/0B,KAEvBA,EAAQ23B,GAAe33B,EAAO+3B,EAAUC,GAAaA,EAAUjD,GAAOx0B,IAE1E,OAAOP,CACX,CA5E6C24B,CAAoBp6B,EAAQw2B,EAAMoD,KAKvEf,yBAAyB,CAAC74B,EAAQw2B,IACvBx2B,EAAOypB,aAAa4Q,QAAUvB,QAAQv0B,IAAIg0B,EAAO/B,GAAQ,CAC5DpK,YAAY,EACZkO,cAAc,QACdr0B,EAAY6yB,QAAQD,yBAAyBN,EAAO/B,GAI5DuC,eAAe,IACJD,QAAQC,eAAeR,GAIlCh0B,IAAI,CAACvE,EAAQw2B,IACFsC,QAAQv0B,IAAIg0B,EAAO/B,GAI9ByC,QAAQ,IACGH,QAAQG,QAAQV,GAI3Bj2B,IAAI,CAACtC,EAAQw2B,EAAM/0B,KACf82B,EAAM/B,GAAQ/0B,SACPzB,EAAOw2B,IACP,IAGnB,CAGI,SAAS/M,GAAa8O,EAAOjM,EAAW,CACxCiO,YAAY,EACZC,WAAW,IAEX,MAAMjO,YAAEA,EAAaD,EAASiO,WAAa9N,WAAAA,EAAYH,EAASkO,UAASC,SAAGA,EAAUnO,EAAS+N,SAAa9B,EAC5G,MAAO,CACH8B,QAASI,EACTF,WAAYhO,EACZiO,UAAW/N,EACXoN,aAAc/b,GAAWyO,GAAeA,EAAc,IAAIA,EAC1D0N,YAAanc,GAAW2O,GAAcA,EAAa,IAAIA,EAE/D,CACA,MAAMgM,GAAU,CAACD,EAAQ93B,IAAO83B,EAASA,EAAS7a,GAAYjd,GAAQA,EAChEg4B,GAAmB,CAAClC,EAAM/0B,IAAQoZ,GAASpZ,IAAmB,aAAT+0B,IAAyD,OAAjCt3B,OAAO65B,eAAet3B,IAAmBA,EAAMgX,cAAgBvZ,QAClJ,SAASo5B,GAAQt4B,EAAQw2B,EAAM/yB,GAC3B,GAAIvE,OAAOub,UAAUwC,eAAetC,KAAK3a,EAAQw2B,IAAkB,gBAATA,EACtD,OAAOx2B,EAAOw2B,GAElB,MAAM/0B,EAAQgC,IAGd,OADAzD,EAAOw2B,GAAQ/0B,EACRA,CACX,CA+CA,SAASi5B,GAAgB7D,EAAUL,EAAM/0B,GACrC,OAAOqc,GAAW+Y,GAAYA,EAASL,EAAM/0B,GAASo1B,CAC1D,CACA,MAAM8D,GAAW,CAACx4B,EAAKy4B,KAAiB,IAARz4B,EAAey4B,EAAwB,iBAARz4B,EAAmBib,GAAiBwd,EAAQz4B,QAAO8D,EAClH,SAAS40B,GAAUv4B,EAAKw4B,EAAc34B,EAAK44B,EAAgBt5B,GACvD,IAAK,MAAMm5B,KAAUE,EAAa,CAC9B,MAAMvR,EAAQoR,GAASx4B,EAAKy4B,GAC5B,GAAIrR,EAAO,CACPjnB,EAAIkC,IAAI+kB,GACR,MAAMsN,EAAW6D,GAAgBnR,EAAMmD,UAAWvqB,EAAKV,GACvD,QAAwB,IAAbo1B,GAA4BA,IAAa10B,GAAO00B,IAAakE,EAGpE,OAAOlE,CAEvB,MAAe,IAAc,IAAVtN,QAA6C,IAAnBwR,GAAkC54B,IAAQ44B,EAG3E,OAAO,IAEd,CACD,OAAO,CACX,CACA,SAASpC,GAAkBmC,EAAczd,EAAUmZ,EAAM/0B,GACrD,MAAMg2B,EAAapa,EAAS4a,YACtBpB,EAAW6D,GAAgBrd,EAASqP,UAAW8J,EAAM/0B,GACrDu5B,EAAY,IACXF,KACArD,GAEDn1B,EAAM,IAAIuB,IAChBvB,EAAIkC,IAAI/C,GACR,IAAIU,EAAM84B,GAAiB34B,EAAK04B,EAAWxE,EAAMK,GAAYL,EAAM/0B,GACnE,OAAY,OAARU,UAGoB,IAAb00B,GAA4BA,IAAaL,IAChDr0B,EAAM84B,GAAiB34B,EAAK04B,EAAWnE,EAAU10B,EAAKV,GAC1C,OAARU,KAIDm1B,GAAgBnvB,MAAMC,KAAK9F,GAAM,CACpC,IACDm1B,EAAYZ,GAAU,IAQ7B,SAAsBxZ,EAAUmZ,EAAM/0B,GAClC,MAAMm5B,EAASvd,EAAS6a,aAClB1B,KAAQoE,IACVA,EAAOpE,GAAQ,IAEnB,MAAMx2B,EAAS46B,EAAOpE,GACtB,GAAI7qB,GAAQ3L,IAAW6a,GAASpZ,GAE5B,OAAOA,EAEX,OAAOzB,GAAU,CAAA,CACrB,CAnBiCk7B,CAAa7d,EAAUmZ,EAAM/0B,KAC9D,CACA,SAASw5B,GAAiB34B,EAAK04B,EAAW74B,EAAK00B,EAAU5Y,GACrD,KAAM9b,GACFA,EAAM04B,GAAUv4B,EAAK04B,EAAW74B,EAAK00B,EAAU5Y,GAEnD,OAAO9b,CACX,CAsBA,SAASy1B,GAASz1B,EAAKo1B,GACnB,IAAK,MAAMhO,KAASgO,EAAO,CACvB,IAAKhO,EACD,SAEJ,MAAM9nB,EAAQ8nB,EAAMpnB,GACpB,QAAqB,IAAVV,EACP,OAAOA,CAEd,CACL,CACA,SAASu3B,GAAqBh5B,GAC1B,IAAIoJ,EAAOpJ,EAAOq4B,MAIlB,OAHKjvB,IACDA,EAAOpJ,EAAOq4B,MAItB,SAAkCd,GAC9B,MAAMj1B,EAAM,IAAIuB,IAChB,IAAK,MAAM0lB,KAASgO,EAChB,IAAK,MAAMp1B,KAAOjD,OAAOkK,KAAKmgB,GAAO/iB,QAAQ1H,IAAKA,EAAE0tB,WAAW,OAC3DlqB,EAAIkC,IAAIrC,GAGhB,OAAOgG,MAAMC,KAAK9F,EACtB,CAZ8B64B,CAAyBn7B,EAAOg4B,UAEnD5uB,CACX,CAUA,SAASgyB,GAA4B/X,EAAMviB,EAAMkgB,EAAOyC,GACpD,MAAME,OAAEA,GAAYN,GACdlhB,IAAEA,EAAK,KAASwG,KAAK0yB,SACrBC,EAAS,IAAInzB,MAAMsb,GACzB,IAAIpf,EAAG4X,EAAMnT,EAAOmV,EACpB,IAAI5Z,EAAI,EAAG4X,EAAOwH,EAAOpf,EAAI4X,IAAQ5X,EACjCyE,EAAQzE,EAAI2c,EACZ/C,EAAOnd,EAAKgI,GACZwyB,EAAOj3B,GAAK,CACRwG,EAAG8Y,EAAO4X,MAAMne,GAAiBa,EAAM9b,GAAM2G,IAGrD,OAAOwyB,CACX,CAEA,MAAME,GAAUzgB,OAAOygB,SAAW,MAC5BC,GAAW,CAACnY,EAAQjf,IAAIA,EAAIif,EAAOrf,SAAWqf,EAAOjf,GAAGq3B,MAAQpY,EAAOjf,GACvEs3B,GAAgBhR,GAA0B,MAAdA,EAAoB,IAAM,IAC5D,SAASiR,GAAYC,EAAYC,EAAaC,EAAYviB,GAItD,MAAM4Z,EAAWyI,EAAWH,KAAOI,EAAcD,EAC3C/e,EAAUgf,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAMvb,GAAsB5D,EAASsW,GACrC8I,EAAMxb,GAAsBsb,EAAMlf,GACxC,IAAIqf,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAEvBC,EAAM5c,MAAM4c,GAAO,EAAIA,EACvBC,EAAM7c,MAAM6c,GAAO,EAAIA,EACvB,MAAMC,EAAK7iB,EAAI2iB,EACTG,EAAK9iB,EAAI4iB,EACf,MAAO,CACHhJ,SAAU,CACN/mB,EAAGyQ,EAAQzQ,EAAIgwB,GAAML,EAAK3vB,EAAI+mB,EAAS/mB,GACvC8Q,EAAGL,EAAQK,EAAIkf,GAAML,EAAK7e,EAAIiW,EAASjW,IAE3C6e,KAAM,CACF3vB,EAAGyQ,EAAQzQ,EAAIiwB,GAAMN,EAAK3vB,EAAI+mB,EAAS/mB,GACvC8Q,EAAGL,EAAQK,EAAImf,GAAMN,EAAK7e,EAAIiW,EAASjW,IAGnD,CA2DI,SAASof,GAAoBjZ,EAAQqH,EAAY,KACjD,MAAM6R,EAAYb,GAAahR,GACzB8R,EAAYnZ,EAAOrf,OACnBy4B,EAASv0B,MAAMs0B,GAAWz1B,KAAK,GAC/B21B,EAAKx0B,MAAMs0B,GAEjB,IAAIp4B,EAAGu4B,EAAaC,EAChBC,EAAarB,GAASnY,EAAQ,GAClC,IAAIjf,EAAI,EAAGA,EAAIo4B,IAAap4B,EAIxB,GAHAu4B,EAAcC,EACdA,EAAeC,EACfA,EAAarB,GAASnY,EAAQjf,EAAI,GAC7Bw4B,EAAL,CAGA,GAAIC,EAAY,CACZ,MAAMC,EAAaD,EAAWnS,GAAakS,EAAalS,GAExD+R,EAAOr4B,GAAoB,IAAf04B,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CACnG,CACDJ,EAAGt4B,GAAMu4B,EAA2BE,EAA6Ble,GAAK8d,EAAOr4B,EAAI,MAAQua,GAAK8d,EAAOr4B,IAAM,GAAKq4B,EAAOr4B,EAAI,GAAKq4B,EAAOr4B,IAAM,EAA5Fq4B,EAAOr4B,EAAI,GAArCq4B,EAAOr4B,EAN7B,EAtEL,SAAwBif,EAAQoZ,EAAQC,GACxC,MAAMF,EAAYnZ,EAAOrf,OACzB,IAAI+4B,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAarB,GAASnY,EAAQ,GAClC,IAAI,IAAIjf,EAAI,EAAGA,EAAIo4B,EAAY,IAAKp4B,EAChCw4B,EAAeC,EACfA,EAAarB,GAASnY,EAAQjf,EAAI,GAC7Bw4B,GAAiBC,IAGlBje,GAAa6d,EAAOr4B,GAAI,EAAGm3B,IAC3BmB,EAAGt4B,GAAKs4B,EAAGt4B,EAAI,GAAK,GAGxB24B,EAASL,EAAGt4B,GAAKq4B,EAAOr4B,GACxB44B,EAAQN,EAAGt4B,EAAI,GAAKq4B,EAAOr4B,GAC3B84B,EAAmB1zB,KAAKoO,IAAImlB,EAAQ,GAAKvzB,KAAKoO,IAAIolB,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAIzzB,KAAK6W,KAAK6c,GACrBR,EAAGt4B,GAAK24B,EAASE,EAAOR,EAAOr4B,GAC/Bs4B,EAAGt4B,EAAI,GAAK44B,EAAQC,EAAOR,EAAOr4B,KAE1C,CAsDI+4B,CAAe9Z,EAAQoZ,EAAQC,GArDnC,SAAyBrZ,EAAQqZ,EAAIhS,EAAY,KAC7C,MAAM6R,EAAYb,GAAahR,GACzB8R,EAAYnZ,EAAOrf,OACzB,IAAIwkB,EAAOmU,EAAaC,EACpBC,EAAarB,GAASnY,EAAQ,GAClC,IAAI,IAAIjf,EAAI,EAAGA,EAAIo4B,IAAap4B,EAAE,CAI9B,GAHAu4B,EAAcC,EACdA,EAAeC,EACfA,EAAarB,GAASnY,EAAQjf,EAAI,IAC7Bw4B,EACD,SAEJ,MAAMQ,EAASR,EAAalS,GACtB2S,EAAST,EAAaL,GACxBI,IACAnU,GAAS4U,EAAST,EAAYjS,IAAc,EAC5CkS,EAAa,MAAMlS,KAAe0S,EAAS5U,EAC3CoU,EAAa,MAAML,KAAec,EAAS7U,EAAQkU,EAAGt4B,IAEtDy4B,IACArU,GAASqU,EAAWnS,GAAa0S,GAAU,EAC3CR,EAAa,MAAMlS,KAAe0S,EAAS5U,EAC3CoU,EAAa,MAAML,KAAec,EAAS7U,EAAQkU,EAAGt4B,GAE7D,CACL,CA6BIk5B,CAAgBja,EAAQqZ,EAAIhS,EAChC,CACA,SAAS6S,GAAgBC,EAAI9zB,EAAKD,GAC9B,OAAOD,KAAKC,IAAID,KAAKE,IAAI8zB,EAAI/zB,GAAMC,EACvC,CAwBI,SAAS+zB,GAA2Bpa,EAAQliB,EAAS2xB,EAAMjG,EAAMnC,GACjE,IAAItmB,EAAG4X,EAAM6W,EAAO6K,EAKpB,GAHIv8B,EAAQw8B,WACRta,EAASA,EAAO9c,QAAQi3B,IAAMA,EAAG/B,QAEE,aAAnCt6B,EAAQy8B,uBACRtB,GAAoBjZ,EAAQqH,OACzB,CACH,IAAImT,EAAOhR,EAAOxJ,EAAOA,EAAOrf,OAAS,GAAKqf,EAAO,GACrD,IAAIjf,EAAI,EAAG4X,EAAOqH,EAAOrf,OAAQI,EAAI4X,IAAQ5X,EACzCyuB,EAAQxP,EAAOjf,GACfs5B,EAAgB/B,GAAYkC,EAAMhL,EAAOxP,EAAO7Z,KAAKE,IAAItF,EAAI,EAAG4X,GAAQ6Q,EAAO,EAAI,IAAM7Q,GAAO7a,EAAQ28B,SACxGjL,EAAMW,KAAOkK,EAAcvK,SAAS/mB,EACpCymB,EAAMa,KAAOgK,EAAcvK,SAASjW,EACpC2V,EAAMY,KAAOiK,EAAc3B,KAAK3vB,EAChCymB,EAAMc,KAAO+J,EAAc3B,KAAK7e,EAChC2gB,EAAOhL,CAEd,CACG1xB,EAAQ48B,iBA3ChB,SAAyB1a,EAAQyP,GAC7B,IAAI1uB,EAAG4X,EAAM6W,EAAOmL,EAAQC,EACxBC,EAAatL,GAAevP,EAAO,GAAIyP,GAC3C,IAAI1uB,EAAI,EAAG4X,EAAOqH,EAAOrf,OAAQI,EAAI4X,IAAQ5X,EACzC65B,EAAaD,EACbA,EAASE,EACTA,EAAa95B,EAAI4X,EAAO,GAAK4W,GAAevP,EAAOjf,EAAI,GAAI0uB,GACtDkL,IAGLnL,EAAQxP,EAAOjf,GACX65B,IACApL,EAAMW,KAAO+J,GAAgB1K,EAAMW,KAAMV,EAAKpF,KAAMoF,EAAKtF,OACzDqF,EAAMa,KAAO6J,GAAgB1K,EAAMa,KAAMZ,EAAKvF,IAAKuF,EAAKrF,SAExDyQ,IACArL,EAAMY,KAAO8J,GAAgB1K,EAAMY,KAAMX,EAAKpF,KAAMoF,EAAKtF,OACzDqF,EAAMc,KAAO4J,GAAgB1K,EAAMc,KAAMb,EAAKvF,IAAKuF,EAAKrF,SAGpE,CAwBQsQ,CAAgB1a,EAAQyP,EAEhC,CAUI,SAASqL,KACT,MAAyB,oBAAXxb,QAA8C,oBAAbjiB,QACnD,CAGI,SAAS09B,GAAeC,GACxB,IAAI1D,EAAS0D,EAAQ/9B,WAIrB,OAHIq6B,GAAgC,wBAAtBA,EAAOlgB,aACjBkgB,EAASA,EAAO2D,MAEb3D,CACX,CAII,SAAS4D,GAAcC,EAAYx+B,EAAMy+B,GACzC,IAAIC,EAUJ,MAT0B,iBAAfF,GACPE,EAAgBpnB,SAASknB,EAAY,KACJ,IAA7BA,EAAWl8B,QAAQ,OAEnBo8B,EAAgBA,EAAgB,IAAM1+B,EAAKM,WAAWm+B,KAG1DC,EAAgBF,EAEbE,CACX,CACA,MAAMC,GAAoBn+B,GAAUA,EAAQo+B,cAAcC,YAAYF,iBAAiBn+B,EAAS,MAIhG,MAAMs+B,GAAY,CACd,MACA,QACA,SACA,QAEJ,SAASC,GAAmBC,EAAQ78B,EAAO88B,GACvC,MAAMp/B,EAAS,CAAA,EACfo/B,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAI,IAAI76B,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,MAAM86B,EAAMJ,GAAU16B,GACtBvE,EAAOq/B,GAAO5jB,WAAW0jB,EAAO78B,EAAQ,IAAM+8B,EAAMD,KAAY,CACnE,CAGD,OAFAp/B,EAAO+uB,MAAQ/uB,EAAO6tB,KAAO7tB,EAAO2tB,MACpC3tB,EAAOuxB,OAASvxB,EAAO0tB,IAAM1tB,EAAO4tB,OAC7B5tB,CACX,CACA,MAAMs/B,GAAe,CAAC/yB,EAAG8Q,EAAGnd,KAAUqM,EAAI,GAAK8Q,EAAI,MAAQnd,IAAWA,EAAOq/B,YA+BzE,SAASC,GAAoBp+B,EAAOqnB,GACpC,GAAI,WAAYrnB,EACZ,OAAOA,EAEX,MAAM+vB,OAAEA,EAAMH,wBAAGA,GAA6BvI,EACxCnmB,EAAQw8B,GAAiB3N,GACzBsO,EAAgC,eAApBn9B,EAAMo9B,UAClBC,EAAWT,GAAmB58B,EAAO,WACrCs9B,EAAUV,GAAmB58B,EAAO,SAAU,UAC9CiK,EAAEA,EAAC8Q,EAAGA,EAAIwiB,IAAAA,GAnChB,SAA2Bx7B,EAAG8sB,GAC9B,MAAM2O,EAAUz7B,EAAEy7B,QACZvjB,EAASujB,GAAWA,EAAQ37B,OAAS27B,EAAQ,GAAKz7B,GAClD07B,QAAEA,EAAOC,QAAGA,GAAazjB,EAC/B,IACIhQ,EAAG8Q,EADHwiB,GAAM,EAEV,GAAIP,GAAaS,EAASC,EAAS37B,EAAEnE,QACjCqM,EAAIwzB,EACJ1iB,EAAI2iB,MACD,CACH,MAAMpN,EAAOzB,EAAO8O,wBACpB1zB,EAAIgQ,EAAO2jB,QAAUtN,EAAK/E,KAC1BxQ,EAAId,EAAO4jB,QAAUvN,EAAKlF,IAC1BmS,GAAM,CACT,CACD,MAAO,CACHtzB,IACA8Q,IACAwiB,MAER,CAe6BO,CAAkBh/B,EAAO+vB,GAC5CO,EAAUiO,EAAS9R,MAAQgS,GAAOD,EAAQ/R,MAC1C8D,EAAUgO,EAASjS,KAAOmS,GAAOD,EAAQlS,KAC/C,IAAIqB,MAAEA,EAAKwC,OAAGA,GAAY9I,EAK1B,OAJIgX,IACA1Q,GAAS4Q,EAAS5Q,MAAQ6Q,EAAQ7Q,MAClCwC,GAAUoO,EAASpO,OAASqO,EAAQrO,QAEjC,CACHhlB,EAAG5C,KAAKJ,OAAOgD,EAAImlB,GAAW3C,EAAQoC,EAAOpC,MAAQiC,GACrD3T,EAAG1T,KAAKJ,OAAO8T,EAAIsU,GAAWJ,EAASJ,EAAOI,OAASP,GAE/D,CA0BA,MAAMqP,GAAU72B,GAAIG,KAAKJ,MAAU,GAAJC,GAAU,GAEzC,SAAS82B,GAAenP,EAAQoP,EAASC,EAAUC,GAC/C,MAAMn+B,EAAQw8B,GAAiB3N,GACzBuP,EAAUxB,GAAmB58B,EAAO,UACpCozB,EAAWgJ,GAAcp8B,EAAMozB,SAAUvE,EAAQ,gBAAkB5S,GACnEoiB,EAAYjC,GAAcp8B,EAAMq+B,UAAWxP,EAAQ,iBAAmB5S,GACtEqiB,EAhCV,SAA0BzP,EAAQpC,EAAOwC,GACrC,IAAImE,EAAUiL,EACd,QAAcx6B,IAAV4oB,QAAkC5oB,IAAXorB,EAAsB,CAC7C,MAAMsP,EAAY1P,GAAUoN,GAAepN,GAC3C,GAAK0P,EAGE,CACH,MAAMjO,EAAOiO,EAAUZ,wBACjBa,EAAiBhC,GAAiB+B,GAClCE,EAAkB7B,GAAmB4B,EAAgB,SAAU,SAC/DE,EAAmB9B,GAAmB4B,EAAgB,WAC5D/R,EAAQ6D,EAAK7D,MAAQiS,EAAiBjS,MAAQgS,EAAgBhS,MAC9DwC,EAASqB,EAAKrB,OAASyP,EAAiBzP,OAASwP,EAAgBxP,OACjEmE,EAAWgJ,GAAcoC,EAAepL,SAAUmL,EAAW,eAC7DF,EAAYjC,GAAcoC,EAAeH,UAAWE,EAAW,eAClE,MAXG9R,EAAQoC,EAAO8P,YACf1P,EAASJ,EAAO+P,YAWvB,CACD,MAAO,CACHnS,QACAwC,SACAmE,SAAUA,GAAYnX,GACtBoiB,UAAWA,GAAapiB,GAEhC,CAQ0B4iB,CAAiBhQ,EAAQoP,EAASC,GACxD,IAAIzR,MAAEA,EAAKwC,OAAGA,GAAYqP,EAC1B,GAAwB,gBAApBt+B,EAAMo9B,UAA6B,CACnC,MAAME,EAAUV,GAAmB58B,EAAO,SAAU,SAC9Cq9B,EAAWT,GAAmB58B,EAAO,WAC3CysB,GAAS4Q,EAAS5Q,MAAQ6Q,EAAQ7Q,MAClCwC,GAAUoO,EAASpO,OAASqO,EAAQrO,MACvC,CACDxC,EAAQplB,KAAKC,IAAI,EAAGmlB,EAAQ2R,EAAQ3R,OACpCwC,EAAS5nB,KAAKC,IAAI,EAAG62B,EAAc1R,EAAQ0R,EAAclP,EAASmP,EAAQnP,QAC1ExC,EAAQsR,GAAO12B,KAAKE,IAAIklB,EAAO2G,EAAUkL,EAAclL,WACvDnE,EAAS8O,GAAO12B,KAAKE,IAAI0nB,EAAQoP,EAAWC,EAAcD,YACtD5R,IAAUwC,IAGVA,EAAS8O,GAAOtR,EAAQ,IAO5B,YALmC5oB,IAAZo6B,QAAsCp6B,IAAbq6B,IAC1BC,GAAeG,EAAcrP,QAAUA,EAASqP,EAAcrP,SAChFA,EAASqP,EAAcrP,OACvBxC,EAAQsR,GAAO12B,KAAK2V,MAAMiS,EAASkP,KAEhC,CACH1R,QACAwC,SAER,CAMI,SAAS6P,GAAY3Y,EAAO4Y,EAAYC,GACxC,MAAMC,EAAaF,GAAc,EAC3BG,EAAe73B,KAAK2V,MAAMmJ,EAAM8I,OAASgQ,GACzCE,EAAc93B,KAAK2V,MAAMmJ,EAAMsG,MAAQwS,GAC7C9Y,EAAM8I,OAAS5nB,KAAK2V,MAAMmJ,EAAM8I,QAChC9I,EAAMsG,MAAQplB,KAAK2V,MAAMmJ,EAAMsG,OAC/B,MAAMoC,EAAS1I,EAAM0I,OAQrB,OAJIA,EAAO7uB,QAAUg/B,IAAenQ,EAAO7uB,MAAMivB,SAAWJ,EAAO7uB,MAAMysB,SACrEoC,EAAO7uB,MAAMivB,OAAS,GAAG9I,EAAM8I,WAC/BJ,EAAO7uB,MAAMysB,MAAQ,GAAGtG,EAAMsG,YAE9BtG,EAAMuI,0BAA4BuQ,GAAcpQ,EAAOI,SAAWiQ,GAAgBrQ,EAAOpC,QAAU0S,KACnGhZ,EAAMuI,wBAA0BuQ,EAChCpQ,EAAOI,OAASiQ,EAChBrQ,EAAOpC,MAAQ0S,EACfhZ,EAAMzjB,IAAI08B,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGf,CAKI,MAAMI,GAA+B,WACrC,IAAIC,GAAmB,EACvB,IACI,MAAMtgC,EAAU,CACZ,WAAIugC,GAEA,OADAD,GAAmB,GACZ,CACV,GAEDtD,OACAxb,OAAOvhB,iBAAiB,OAAQ,KAAMD,GACtCwhB,OAAOthB,oBAAoB,OAAQ,KAAMF,GAEhD,CAAC,MAAO+C,GAER,CACD,OAAOu9B,CACX,CAjByC,GA0BrC,SAASE,GAAanhC,EAASif,GAC/B,MAAMje,EA/LV,SAAkBogC,EAAIniB,GAClB,OAAOkf,GAAiBiD,GAAIC,iBAAiBpiB,EACjD,CA6LkBqiB,CAASthC,EAASif,GAC1BwW,EAAUz0B,GAASA,EAAM00B,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKjwB,CACnC,CAII,SAAS+7B,GAAa/1B,EAAIC,EAAIsN,EAAGqR,GACjC,MAAO,CACHxe,EAAGJ,EAAGI,EAAImN,GAAKtN,EAAGG,EAAIJ,EAAGI,GACzB8Q,EAAGlR,EAAGkR,EAAI3D,GAAKtN,EAAGiR,EAAIlR,EAAGkR,GAEjC,CAGI,SAAS8kB,GAAsBh2B,EAAIC,EAAIsN,EAAGqR,GAC1C,MAAO,CACHxe,EAAGJ,EAAGI,EAAImN,GAAKtN,EAAGG,EAAIJ,EAAGI,GACzB8Q,EAAY,WAAT0N,EAAoBrR,EAAI,GAAMvN,EAAGkR,EAAIjR,EAAGiR,EAAa,UAAT0N,EAAmBrR,EAAI,EAAIvN,EAAGkR,EAAIjR,EAAGiR,EAAI3D,EAAI,EAAItN,EAAGiR,EAAIlR,EAAGkR,EAElH,CAGI,SAAS+kB,GAAqBj2B,EAAIC,EAAIsN,EAAGqR,GACzC,MAAMsX,EAAM,CACR91B,EAAGJ,EAAGynB,KACNvW,EAAGlR,EAAG2nB,MAEJwO,EAAM,CACR/1B,EAAGH,EAAGunB,KACNtW,EAAGjR,EAAGynB,MAEJj0B,EAAIsiC,GAAa/1B,EAAIk2B,EAAK3oB,GAC1B7Z,EAAIqiC,GAAaG,EAAKC,EAAK5oB,GAC3BhU,EAAIw8B,GAAaI,EAAKl2B,EAAIsN,GAC1B/T,EAAIu8B,GAAatiC,EAAGC,EAAG6Z,GACvBrV,EAAI69B,GAAariC,EAAG6F,EAAGgU,GAC7B,OAAOwoB,GAAav8B,EAAGtB,EAAGqV,EAC9B,CAyCA,SAAS6oB,GAAcC,EAAKC,EAAO1T,GAC/B,OAAOyT,EAxCmB,SAASC,EAAO1T,GAC1C,MAAO,CACHxiB,EAAGA,GACQk2B,EAAQA,EAAQ1T,EAAQxiB,EAEnC,QAAAm2B,CAAUl3B,GACNujB,EAAQvjB,CACX,EACD6pB,UAAWjS,GACO,WAAVA,EACOA,EAEM,UAAVA,EAAoB,OAAS,QAExCuf,MAAM,CAACp2B,EAAG5K,IACC4K,EAAI5K,EAEfihC,WAAW,CAACr2B,EAAGs2B,IACJt2B,EAAIs2B,EAGvB,CAmBiBC,CAAsBL,EAAO1T,GAjBnC,CACHxiB,EAAGA,GACQA,EAEX,QAAAm2B,CAAUl3B,GAAK,EACf6pB,UAAWjS,GACAA,EAEXuf,MAAM,CAACp2B,EAAG5K,IACC4K,EAAI5K,EAEfihC,WAAW,CAACr2B,EAAGw2B,IACJx2B,EAMnB,CACA,SAASy2B,GAAsBh+B,EAAKi+B,GAChC,IAAI3gC,EAAO4gC,EACO,QAAdD,GAAqC,QAAdA,IACvB3gC,EAAQ0C,EAAImsB,OAAO7uB,MACnB4gC,EAAW,CACP5gC,EAAM0/B,iBAAiB,aACvB1/B,EAAM6gC,oBAAoB,cAE9B7gC,EAAM8gC,YAAY,YAAaH,EAAW,aAC1Cj+B,EAAIq+B,kBAAoBH,EAEhC,CACA,SAASI,GAAqBt+B,EAAKk+B,QACd/8B,IAAb+8B,WACOl+B,EAAIq+B,kBACXr+B,EAAImsB,OAAO7uB,MAAM8gC,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAExE,CAEA,SAASK,GAAW3jB,GAChB,MAAiB,UAAbA,EACO,CACH4jB,QAASviB,GACTwiB,QAAS1iB,GACT2iB,UAAW1iB,IAGZ,CACHwiB,QAAS9hB,GACT+hB,QAAS,CAAC7jC,EAAGC,IAAID,EAAIC,EACrB6jC,UAAYn3B,GAAIA,EAExB,CACA,SAASo3B,IAAiBziB,MAAEA,EAAQC,IAAAA,EAAMwC,MAAAA,EAAQqJ,KAAAA,EAAO1qB,MAAAA,IACrD,MAAO,CACH4e,MAAOA,EAAQyC,EACfxC,IAAKA,EAAMwC,EACXqJ,KAAMA,IAAS7L,EAAMD,EAAQ,GAAKyC,GAAU,EAC5CrhB,QAER,CA8BC,SAASshC,GAAcC,EAASrgB,EAAQyK,GACrC,IAAKA,EACD,MAAO,CACH4V,GAGR,MAAMjkB,SAAEA,EAAWsB,MAAO4iB,EAAa3iB,IAAK4iB,GAAc9V,EACpDtK,EAAQH,EAAOrf,QACfs/B,QAAEA,EAAOD,QAAGA,EAAOE,UAAGA,GAAeH,GAAW3jB,IAChDsB,MAAEA,MAAQC,EAAG6L,KAAGA,EAAO1qB,MAAAA,GAtCjC,SAAoBuhC,EAASrgB,EAAQyK,GACjC,MAAMrO,SAAEA,EAAWsB,MAAO4iB,EAAa3iB,IAAK4iB,GAAc9V,GACpDuV,QAAEA,EAAUE,UAAAA,GAAeH,GAAW3jB,GACtC+D,EAAQH,EAAOrf,OACrB,IACII,EAAG4X,GADH+E,MAAEA,EAAQC,IAAAA,OAAM6L,GAAU6W,EAE9B,GAAI7W,EAAM,CAGN,IAFA9L,GAASyC,EACTxC,GAAOwC,EACHpf,EAAI,EAAG4X,EAAOwH,EAAOpf,EAAI4X,GACpBqnB,EAAQE,EAAUlgB,EAAOtC,EAAQyC,GAAO/D,IAAYkkB,EAAYC,KADpCx/B,EAIjC2c,IACAC,IAEJD,GAASyC,EACTxC,GAAOwC,CACV,CAID,OAHIxC,EAAMD,IACNC,GAAOwC,GAEJ,CACHzC,QACAC,MACA6L,OACA1qB,MAAOuhC,EAAQvhC,MAEvB,CAU4C0hC,CAAWH,EAASrgB,EAAQyK,GAC9DjuB,EAAS,GACf,IAEI2B,EAAOqxB,EAAOiR,EAFdC,GAAS,EACTC,EAAW,KAEf,MAEMC,EAAc,IAAIF,GAFEV,EAAQM,EAAYG,EAAWtiC,IAA6C,IAAnC8hC,EAAQK,EAAYG,GAGjFI,EAAa,KAAKH,GAF6B,IAA7BT,EAAQM,EAAUpiC,IAAgB6hC,EAAQO,EAAUE,EAAWtiC,GAGvF,IAAI,IAAI4C,EAAI2c,EAAO8c,EAAO9c,EAAO3c,GAAK4c,IAAO5c,EACzCyuB,EAAQxP,EAAOjf,EAAIof,GACfqP,EAAM4I,OAGVj6B,EAAQ+hC,EAAU1Q,EAAMpT,IACpBje,IAAUsiC,IAGdC,EAASV,EAAQ7hC,EAAOmiC,EAAYC,GACnB,OAAbI,GAAqBC,MACrBD,EAA0C,IAA/BV,EAAQ9hC,EAAOmiC,GAAoBv/B,EAAIy5B,GAErC,OAAbmG,GAAqBE,MACrBrkC,EAAOkD,KAAKygC,GAAiB,CACzBziB,MAAOijB,EACPhjB,IAAK5c,EACLyoB,OACArJ,QACArhB,WAEJ6hC,EAAW,MAEfnG,EAAOz5B,EACP0/B,EAAYtiC,IAWhB,OATiB,OAAbwiC,GACAnkC,EAAOkD,KAAKygC,GAAiB,CACzBziB,MAAOijB,EACPhjB,MACA6L,OACArJ,QACArhB,WAGDtC,CACX,CACC,SAASskC,GAAetQ,EAAM/F,GAC3B,MAAMjuB,EAAS,GACTukC,EAAWvQ,EAAKuQ,SACtB,IAAI,IAAIhgC,EAAI,EAAGA,EAAIggC,EAASpgC,OAAQI,IAAI,CACpC,MAAMigC,EAAMZ,GAAcW,EAAShgC,GAAIyvB,EAAKxQ,OAAQyK,GAChDuW,EAAIrgC,QACJnE,EAAOkD,QAAQshC,EAEtB,CACD,OAAOxkC,CACX,CAkFC,SAASykC,GAAczQ,EAAMuQ,EAAU/gB,EAAQkhB,GAC5C,OAAKA,GAAmBA,EAAe7K,YAAerW,EAKzD,SAAyBwQ,EAAMuQ,EAAU/gB,EAAQkhB,GAC9C,MAAMC,EAAe3Q,EAAK4Q,OAAOxT,aAC3ByT,EAAYC,GAAU9Q,EAAK1yB,UACzByjC,cAAezoB,EAAehb,SAASw8B,SAAEA,IAAiB9J,EAC5DrQ,EAAQH,EAAOrf,OACfnE,EAAS,GACf,IAAIglC,EAAYH,EACZ3jB,EAAQqjB,EAAS,GAAGrjB,MACpB3c,EAAI2c,EACR,SAAS+jB,EAAS55B,EAAGhH,EAAGoE,EAAGy8B,GACvB,MAAMC,EAAMrH,GAAY,EAAI,EAC5B,GAAIzyB,IAAMhH,EAAV,CAIA,IADAgH,GAAKsY,EACCH,EAAOnY,EAAIsY,GAAOiY,MACpBvwB,GAAK85B,EAET,KAAM3hB,EAAOnf,EAAIsf,GAAOiY,MACpBv3B,GAAK8gC,EAEL95B,EAAIsY,GAAUtf,EAAIsf,IAClB3jB,EAAOkD,KAAK,CACRge,MAAO7V,EAAIsY,EACXxC,IAAK9c,EAAIsf,EACTqJ,KAAMvkB,EACNnG,MAAO4iC,IAEXF,EAAYE,EACZhkB,EAAQ7c,EAAIsf,EAhBf,CAkBJ,CACD,IAAK,MAAMkgB,KAAWU,EAAS,CAC3BrjB,EAAQ4c,EAAW5c,EAAQ2iB,EAAQ3iB,MACnC,IACI5e,EADA07B,EAAOxa,EAAOtC,EAAQyC,GAE1B,IAAIpf,EAAI2c,EAAQ,EAAG3c,GAAKs/B,EAAQ1iB,IAAK5c,IAAI,CACrC,MAAMo5B,EAAKna,EAAOjf,EAAIof,GACtBrhB,EAAQwiC,GAAUJ,EAAe7K,WAAWvC,GAAcqN,EAAc,CACpE57B,KAAM,UACNq8B,GAAIpH,EACJ7xB,GAAIwxB,EACJ0H,aAAc9gC,EAAI,GAAKof,EACvB2hB,YAAa/gC,EAAIof,EACjBrH,mBAEAipB,GAAajjC,EAAO0iC,IACpBC,EAAS/jB,EAAO3c,EAAI,EAAGs/B,EAAQ7W,KAAMgY,GAEzChH,EAAOL,EACPqH,EAAY1iC,CACf,CACG4e,EAAQ3c,EAAI,GACZ0gC,EAAS/jB,EAAO3c,EAAI,EAAGs/B,EAAQ7W,KAAMgY,EAE5C,CACD,OAAOhlC,CACX,CA3DWwlC,CAAgBxR,EAAMuQ,EAAU/gB,EAAQkhB,GAFpCH,CAGf,CA2DA,SAASO,GAAUxjC,GACf,MAAO,CACHwoB,gBAAiBxoB,EAAQwoB,gBACzB2b,eAAgBnkC,EAAQmkC,eACxBC,WAAYpkC,EAAQokC,WACpBC,iBAAkBrkC,EAAQqkC,iBAC1BC,gBAAiBtkC,EAAQskC,gBACzB/S,YAAavxB,EAAQuxB,YACrB9I,YAAazoB,EAAQyoB,YAE7B,CACA,SAASwb,GAAajjC,EAAO0iC,GACzB,IAAKA,EACD,OAAO,EAEX,MAAMzU,EAAQ,GACRsV,EAAW,SAASxjC,EAAKV,GAC3B,OAAKwlB,GAAoBxlB,IAGpB4uB,EAAMlH,SAAS1nB,IAChB4uB,EAAMrtB,KAAKvB,GAER4uB,EAAM9tB,QAAQd,IALVA,CAMnB,EACI,OAAOimB,KAAKC,UAAUvlB,EAAOujC,KAAcje,KAAKC,UAAUmd,EAAWa,EACzE;;;;;;OChrFA,MAAMC,GACF,WAAAntB,GACI9P,KAAKk9B,SAAW,KAChBl9B,KAAKm9B,QAAU,IAAIp+B,IACnBiB,KAAKo9B,UAAW,EAChBp9B,KAAKq9B,eAAY//B,CACpB,CACJ,OAAAggC,CAAQ1d,EAAO2d,EAAOC,EAAMt9B,GACrB,MAAMlB,EAAYu+B,EAAM1jB,UAAU3Z,GAC5Bu9B,EAAWF,EAAMtZ,SACvBjlB,EAAUrI,SAASN,GAAKA,EAAG,CACnBupB,QACA8d,QAASH,EAAMG,QACfD,WACAE,YAAa78B,KAAKE,IAAIw8B,EAAOD,EAAMllB,MAAOolB,MAErD,CACJ,QAAAG,GACW59B,KAAKk9B,WAGTl9B,KAAKo9B,UAAW,EAChBp9B,KAAKk9B,SAAWljB,GAAiBhI,KAAKiI,QAAQ,KAC1Cja,KAAK69B,UACL79B,KAAKk9B,SAAW,KACZl9B,KAAKo9B,UACLp9B,KAAK49B,UACR,IAER,CACJ,OAAAC,CAAQL,EAAOM,KAAKC,OACb,IAAIC,EAAY,EAChBh+B,KAAKm9B,QAAQxmC,SAAQ,CAAC4mC,EAAO3d,KACzB,IAAK2d,EAAMU,UAAYV,EAAMxjB,MAAMze,OAC/B,OAEJ,MAAMye,EAAQwjB,EAAMxjB,MACpB,IAEIzE,EAFA5Z,EAAIqe,EAAMze,OAAS,EACnB4iC,GAAO,EAEX,KAAMxiC,GAAK,IAAKA,EACZ4Z,EAAOyE,EAAMre,GACT4Z,EAAK6oB,SACD7oB,EAAK8oB,OAASb,EAAMtZ,WACpBsZ,EAAMtZ,SAAW3O,EAAK8oB,QAE1B9oB,EAAK+oB,KAAKb,GACVU,GAAO,IAEPnkB,EAAMre,GAAKqe,EAAMA,EAAMze,OAAS,GAChCye,EAAMte,OAGVyiC,IACAte,EAAMse,OACNl+B,KAAKs9B,QAAQ1d,EAAO2d,EAAOC,EAAM,aAEhCzjB,EAAMze,SACPiiC,EAAMU,SAAU,EAChBj+B,KAAKs9B,QAAQ1d,EAAO2d,EAAOC,EAAM,YACjCD,EAAMG,SAAU,GAEpBM,GAAajkB,EAAMze,MAAM,IAE7B0E,KAAKq9B,UAAYG,EACC,IAAdQ,IACAh+B,KAAKo9B,UAAW,EAEvB,CACJ,SAAAkB,CAAU1e,GACH,MAAM2e,EAASv+B,KAAKm9B,QACpB,IAAII,EAAQgB,EAAOrf,IAAIU,GAavB,OAZK2d,IACDA,EAAQ,CACJU,SAAS,EACTP,SAAS,EACT3jB,MAAO,GACPF,UAAW,CACP2kB,SAAU,GACVC,SAAU,KAGlBF,EAAO5kC,IAAIimB,EAAO2d,IAEfA,CACV,CACJ,MAAAjlC,CAAOsnB,EAAOrnB,EAAOmmC,GACd1+B,KAAKs+B,UAAU1e,GAAO/F,UAAUthB,GAAO8B,KAAKqkC,EAC/C,CACJ,GAAA7iC,CAAI+jB,EAAO7F,GACCA,GAAUA,EAAMze,QAGrB0E,KAAKs+B,UAAU1e,GAAO7F,MAAM1f,QAAQ0f,EACvC,CACJ,GAAAne,CAAIgkB,GACG,OAAO5f,KAAKs+B,UAAU1e,GAAO7F,MAAMze,OAAS,CAC/C,CACJ,KAAA+c,CAAMuH,GACC,MAAM2d,EAAQv9B,KAAKm9B,QAAQje,IAAIU,GAC1B2d,IAGLA,EAAMU,SAAU,EAChBV,EAAMllB,MAAQylB,KAAKC,MACnBR,EAAMtZ,SAAWsZ,EAAMxjB,MAAM4kB,QAAO,CAACC,EAAKC,IAAM/9B,KAAKC,IAAI69B,EAAKC,EAAIC,YAAY,GAC9E9+B,KAAK49B,WACR,CACD,OAAAK,CAAQre,GACJ,IAAK5f,KAAKo9B,SACN,OAAO,EAEX,MAAMG,EAAQv9B,KAAKm9B,QAAQje,IAAIU,GAC/B,SAAK2d,GAAUA,EAAMU,SAAYV,EAAMxjB,MAAMze,OAIhD,CACJ,IAAAyjC,CAAKnf,GACE,MAAM2d,EAAQv9B,KAAKm9B,QAAQje,IAAIU,GAC/B,IAAK2d,IAAUA,EAAMxjB,MAAMze,OACvB,OAEJ,MAAMye,EAAQwjB,EAAMxjB,MACpB,IAAIre,EAAIqe,EAAMze,OAAS,EACvB,KAAMI,GAAK,IAAKA,EACZqe,EAAMre,GAAGsjC,SAEbzB,EAAMxjB,MAAQ,GACd/Z,KAAKs9B,QAAQ1d,EAAO2d,EAAOO,KAAKC,MAAO,WAC1C,CACJ,MAAAkB,CAAOrf,GACA,OAAO5f,KAAKm9B,QAAQzgC,OAAOkjB,EAC9B,EAEL,IAAIsf,GAA2B,IAAIjC,GAEnC,MAAMnuB,GAAc,cACdqwB,GAAgB,CAClBC,QAAQ,CAAC3/B,EAAMwP,EAAIowB,IACRA,EAAS,GAAMpwB,EAAKxP,EAElC,KAAA6Q,CAAO7Q,EAAMwP,EAAIowB,GACV,MAAMC,EAAKhvB,GAAM7Q,GAAQqP,IACnB0B,EAAK8uB,EAAGpvB,OAASI,GAAMrB,GAAMH,IACnC,OAAO0B,GAAMA,EAAGN,MAAQM,EAAGH,IAAIivB,EAAID,GAAQp9B,YAAcgN,CAC5D,EACDswB,OAAO,CAAC9/B,EAAMwP,EAAIowB,IACP5/B,GAAQwP,EAAKxP,GAAQ4/B,GAGpC,MAAMG,GACF,WAAA1vB,CAAY2vB,EAAKpoC,EAAQw2B,EAAM5e,GAC3B,MAAMywB,EAAeroC,EAAOw2B,GAC5B5e,EAAKnU,GAAQ,CACT2kC,EAAIxwB,GACJA,EACAywB,EACAD,EAAIhgC,OAER,MAAMA,EAAO3E,GAAQ,CACjB2kC,EAAIhgC,KACJigC,EACAzwB,IAEJjP,KAAKm+B,SAAU,EACfn+B,KAAK2/B,IAAMF,EAAIppC,IAAM8oC,GAAcM,EAAIv/B,aAAeT,GACtDO,KAAK4/B,QAAUvjB,GAAQojB,EAAIvb,SAAW7H,GAAQC,OAC9Ctc,KAAK6/B,OAAS/+B,KAAK2V,MAAMqnB,KAAKC,OAAS0B,EAAIzb,OAAS,IACpDhkB,KAAK8+B,UAAY9+B,KAAKo+B,OAASt9B,KAAK2V,MAAMgpB,EAAIxb,UAC9CjkB,KAAK8/B,QAAUL,EAAItb,KACnBnkB,KAAK+/B,QAAU1oC,EACf2I,KAAKggC,MAAQnS,EACb7tB,KAAKigC,MAAQxgC,EACbO,KAAKkgC,IAAMjxB,EACXjP,KAAKmgC,eAAY7iC,CACpB,CACD,MAAA+mB,GACI,OAAOrkB,KAAKm+B,OACf,CACD,MAAA5iC,CAAOkkC,EAAKxwB,EAAIuuB,GACZ,GAAIx9B,KAAKm+B,QAAS,CACdn+B,KAAKs9B,SAAQ,GACb,MAAMoC,EAAe1/B,KAAK+/B,QAAQ//B,KAAKggC,OACjCI,EAAU5C,EAAOx9B,KAAK6/B,OACtBvf,EAAStgB,KAAK8+B,UAAYsB,EAChCpgC,KAAK6/B,OAASrC,EACdx9B,KAAK8+B,UAAYh+B,KAAK2V,MAAM3V,KAAKC,IAAIuf,EAAQmf,EAAIxb,WACjDjkB,KAAKo+B,QAAUgC,EACfpgC,KAAK8/B,QAAUL,EAAItb,KACnBnkB,KAAKkgC,IAAMplC,GAAQ,CACf2kC,EAAIxwB,GACJA,EACAywB,EACAD,EAAIhgC,OAERO,KAAKigC,MAAQnlC,GAAQ,CACjB2kC,EAAIhgC,KACJigC,EACAzwB,GAEP,CACJ,CACD,MAAA+vB,GACQh/B,KAAKm+B,UACLn+B,KAAKq+B,KAAKP,KAAKC,OACf/9B,KAAKm+B,SAAU,EACfn+B,KAAKs9B,SAAQ,GAEpB,CACD,IAAAe,CAAKb,GACD,MAAM4C,EAAU5C,EAAOx9B,KAAK6/B,OACtB5b,EAAWjkB,KAAK8+B,UAChBjR,EAAO7tB,KAAKggC,MACZvgC,EAAOO,KAAKigC,MACZ9b,EAAOnkB,KAAK8/B,MACZ7wB,EAAKjP,KAAKkgC,IAChB,IAAIb,EAEJ,GADAr/B,KAAKm+B,QAAU1+B,IAASwP,IAAOkV,GAAQic,EAAUnc,IAC5CjkB,KAAKm+B,QAGN,OAFAn+B,KAAK+/B,QAAQlS,GAAQ5e,OACrBjP,KAAKs9B,SAAQ,GAGb8C,EAAU,EACVpgC,KAAK+/B,QAAQlS,GAAQpuB,GAGzB4/B,EAASe,EAAUnc,EAAW,EAC9Bob,EAASlb,GAAQkb,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASr/B,KAAK4/B,QAAQ9+B,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAGs+B,KAC9Cr/B,KAAK+/B,QAAQlS,GAAQ7tB,KAAK2/B,IAAIlgC,EAAMwP,EAAIowB,GAC3C,CACD,IAAAgB,GACI,MAAMC,EAAWtgC,KAAKmgC,YAAcngC,KAAKmgC,UAAY,IACrD,OAAO,IAAItlC,SAAQ,CAAC0lC,EAAKC,KACrBF,EAASjmC,KAAK,CACVkmC,MACAC,OACF,GAET,CACD,OAAAlD,CAAQmD,GACJ,MAAMC,EAASD,EAAW,MAAQ,MAC5BH,EAAWtgC,KAAKmgC,WAAa,GACnC,IAAI,IAAIzkC,EAAI,EAAGA,EAAI4kC,EAAShlC,OAAQI,IAChC4kC,EAAS5kC,GAAGglC,IAEnB,EAGL,MAAMC,GACF,WAAA7wB,CAAY8P,EAAOghB,GACf5gC,KAAK+7B,OAASnc,EACd5f,KAAK6gC,YAAc,IAAI9hC,IACvBiB,KAAK8gC,UAAUF,EAClB,CACD,SAAAE,CAAUF,GACN,IAAK1uB,GAAS0uB,GACV,OAEJ,MAAMG,EAAmBxqC,OAAOkK,KAAKkjB,GAAS3C,WACxCggB,EAAgBhhC,KAAK6gC,YAC3BtqC,OAAO0qC,oBAAoBL,GAAQjqC,SAAS6C,IACxC,MAAMimC,EAAMmB,EAAOpnC,GACnB,IAAK0Y,GAASutB,GACV,OAEJ,MAAMgB,EAAW,CAAA,EACjB,IAAK,MAAMS,KAAUH,EACjBN,EAASS,GAAUzB,EAAIyB,IAE1Bl+B,GAAQy8B,EAAIrb,aAAeqb,EAAIrb,YAAc,CAC1C5qB,IACD7C,SAASk3B,IACJA,IAASr0B,GAAQwnC,EAAcplC,IAAIiyB,IACnCmT,EAAcrnC,IAAIk0B,EAAM4S,EAC3B,GACH,GAET,CACJ,eAAAU,CAAgB9pC,EAAQmoB,GACjB,MAAM4hB,EAAa5hB,EAAO/mB,QACpBA,EAwEd,SAA8BpB,EAAQ+pC,GAClC,IAAKA,EACD,OAEJ,IAAI3oC,EAAUpB,EAAOoB,QACrB,IAAKA,EAED,YADApB,EAAOoB,QAAU2oC,GAGjB3oC,EAAQ4oC,UACRhqC,EAAOoB,QAAUA,EAAUlC,OAAOP,OAAO,CAAE,EAAEyC,EAAS,CAClD4oC,SAAS,EACTC,YAAa,CAAE,KAGvB,OAAO7oC,CACX,CAxFwB8oC,CAAqBlqC,EAAQ+pC,GAC7C,IAAK3oC,EACD,MAAO,GAEX,MAAM+rB,EAAaxkB,KAAKwhC,kBAAkB/oC,EAAS2oC,GAOnD,OANIA,EAAWC,SAwDvB,SAAkB7c,EAAYJ,GAC1B,MAAM6Z,EAAU,GACVx9B,EAAOlK,OAAOkK,KAAK2jB,GACzB,IAAI,IAAI1oB,EAAI,EAAGA,EAAI+E,EAAKnF,OAAQI,IAAI,CAChC,MAAM+lC,EAAOjd,EAAW/jB,EAAK/E,IACzB+lC,GAAQA,EAAKpd,UACb4Z,EAAQ5jC,KAAKonC,EAAKpB,OAEzB,CACD,OAAOxlC,QAAQ6mC,IAAIzD,EACvB,CAjEY0D,CAAStqC,EAAOoB,QAAQ6oC,YAAaF,GAAYhjC,MAAK,KAClD/G,EAAOoB,QAAU2oC,CAAU,IAC5B,SAGA5c,CACV,CACJ,iBAAAgd,CAAkBnqC,EAAQmoB,GACnB,MAAMwhB,EAAgBhhC,KAAK6gC,YACrBrc,EAAa,GACbyZ,EAAU5mC,EAAOiqC,cAAgBjqC,EAAOiqC,YAAc,CAAA,GACtDpqC,EAAQX,OAAOkK,KAAK+e,GACpBge,EAAOM,KAAKC,MAClB,IAAIriC,EACJ,IAAIA,EAAIxE,EAAMoE,OAAS,EAAGI,GAAK,IAAKA,EAAE,CAClC,MAAMmyB,EAAO32B,EAAMwE,GACnB,GAAuB,MAAnBmyB,EAAKle,OAAO,GACZ,SAEJ,GAAa,YAATke,EAAoB,CACpBrJ,EAAWnqB,QAAQ2F,KAAKmhC,gBAAgB9pC,EAAQmoB,IAChD,QACH,CACD,MAAM1mB,EAAQ0mB,EAAOqO,GACrB,IAAI7M,EAAYid,EAAQpQ,GACxB,MAAM4R,EAAMuB,EAAc9hB,IAAI2O,GAC9B,GAAI7M,EAAW,CACX,GAAIye,GAAOze,EAAUqD,SAAU,CAC3BrD,EAAUzlB,OAAOkkC,EAAK3mC,EAAO0kC,GAC7B,QACpB,CACoBxc,EAAUge,QAEjB,CACIS,GAAQA,EAAIxb,UAIjBga,EAAQpQ,GAAQ7M,EAAY,IAAIwe,GAAUC,EAAKpoC,EAAQw2B,EAAM/0B,GAC7D0rB,EAAWnqB,KAAK2mB,IAJZ3pB,EAAOw2B,GAAQ/0B,CAKtB,CACD,OAAO0rB,CACV,CACJ,MAAAjpB,CAAOlE,EAAQmoB,GACR,GAA8B,IAA1Bxf,KAAK6gC,YAAYxrB,KAEjB,YADA9e,OAAOP,OAAOqB,EAAQmoB,GAG1B,MAAMgF,EAAaxkB,KAAKwhC,kBAAkBnqC,EAAQmoB,GAClD,OAAIgF,EAAWlpB,QACX4jC,GAASrjC,IAAImE,KAAK+7B,OAAQvX,IACnB,QAFX,CAIH,EA+BL,SAASod,GAAUjf,EAAOkf,GACtB,MAAMzW,EAAOzI,GAASA,EAAMlqB,SAAW,CAAA,EACjCya,EAAUkY,EAAKlY,QACflS,OAAmB1D,IAAb8tB,EAAKpqB,IAAoB6gC,EAAkB,EACjD9gC,OAAmBzD,IAAb8tB,EAAKrqB,IAAoB8gC,EAAkB,EACvD,MAAO,CACHxpB,MAAOnF,EAAUnS,EAAMC,EACvBsX,IAAKpF,EAAUlS,EAAMD,EAE7B,CAgCA,SAAS+gC,GAAwBliB,EAAOmiB,GACpC,MAAMthC,EAAO,GACPuhC,EAAWpiB,EAAMqiB,uBAAuBF,GAC9C,IAAIrmC,EAAG4X,EACP,IAAI5X,EAAI,EAAG4X,EAAO0uB,EAAS1mC,OAAQI,EAAI4X,IAAQ5X,EAC3C+E,EAAKpG,KAAK2nC,EAAStmC,GAAGyE,OAE1B,OAAOM,CACX,CACA,SAASyhC,GAAWC,EAAOrpC,EAAOspC,EAAS3pC,EAAU,CAAA,GACjD,MAAMgI,EAAO0hC,EAAM1hC,KACb4hC,EAA8B,WAAjB5pC,EAAQypB,KAC3B,IAAIxmB,EAAG4X,EAAMG,EAAc6uB,EAC3B,GAAc,OAAVxpC,EAAJ,CAGA,IAAI4C,EAAI,EAAG4X,EAAO7S,EAAKnF,OAAQI,EAAI4X,IAAQ5X,EAAE,CAEzC,GADA+X,GAAgBhT,EAAK/E,GACjB+X,IAAiB2uB,EAAS,CAC1B,GAAI3pC,EAAQipC,IACR,SAEJ,KACH,CACDY,EAAaH,EAAM3iB,OAAO/L,GACtBtB,GAAemwB,KAAgBD,GAAwB,IAAVvpC,GAAemd,GAAKnd,KAAWmd,GAAKqsB,MACjFxpC,GAASwpC,EAEhB,CACD,OAAOxpC,CAdN,CAeL,CAiBA,SAASypC,GAAU5f,EAAOjI,GACtB,MAAM8nB,EAAU7f,GAASA,EAAMlqB,QAAQ+pC,QACvC,OAAOA,QAAuBllC,IAAZklC,QAAwCllC,IAAfod,EAAKynB,KACpD,CAWA,SAASM,GAAiBC,EAAQC,EAAUC,GACxC,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAA,GACzD,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAA,EAC3D,CACA,SAASE,GAAoBX,EAAOY,EAAQC,EAAU9iC,GAClD,IAAK,MAAMwa,KAAQqoB,EAAOE,wBAAwB/iC,GAAMgT,UAAU,CAC9D,MAAMpa,EAAQqpC,EAAMznB,EAAKva,OACzB,GAAI6iC,GAAYlqC,EAAQ,IAAMkqC,GAAYlqC,EAAQ,EAC9C,OAAO4hB,EAAKva,KAEnB,CACD,OAAO,IACX,CACA,SAAS+iC,GAAaC,EAAYxQ,GAC9B,MAAM/S,MAAEA,EAAQwjB,YAAa1oB,GAAUyoB,EACjCT,EAAS9iB,EAAMyjB,UAAYzjB,EAAMyjB,QAAU,CAAA,IAC3CroB,OAAEA,EAAM+nB,OAAGA,EAAS5iC,MAAOsT,GAAkBiH,EAC7C4oB,EAAQtoB,EAAOE,KACfqoB,EAAQR,EAAO7nB,KACf1hB,EA7BV,SAAqBgqC,EAAYC,EAAY/oB,GACzC,MAAO,GAAG8oB,EAAW5xB,MAAM6xB,EAAW7xB,MAAM8I,EAAKynB,OAASznB,EAAKxa,MACnE,CA2BgBwjC,CAAY1oB,EAAQ+nB,EAAQroB,GAClCpH,EAAOqf,EAAOr3B,OACpB,IAAI6mC,EACJ,IAAI,IAAIzmC,EAAI,EAAGA,EAAI4X,IAAQ5X,EAAE,CACzB,MAAM4Z,EAAOqd,EAAOj3B,IACZ4nC,CAACA,GAAQnjC,EAAQojC,CAACA,GAAQzqC,GAAWwc,EAE7C6sB,GADmB7sB,EAAK+tB,UAAY/tB,EAAK+tB,QAAU,CAAA,IAChCE,GAASd,GAAiBC,EAAQlpC,EAAK2G,GAC1DgiC,EAAM1uB,GAAgB3a,EACtBqpC,EAAMwB,KAAOb,GAAoBX,EAAOY,GAAQ,EAAMroB,EAAKxa,MAC3DiiC,EAAMyB,QAAUd,GAAoBX,EAAOY,GAAQ,EAAOroB,EAAKxa,OAC1CiiC,EAAM0B,gBAAkB1B,EAAM0B,cAAgB,CAAA,IACtDpwB,GAAgB3a,CAChC,CACL,CACA,SAASgrC,GAAgBlkB,EAAO1E,GAC5B,MAAM0H,EAAShD,EAAMgD,OACrB,OAAOrsB,OAAOkK,KAAKmiB,GAAQ/kB,QAAQrE,GAAMopB,EAAOppB,GAAK0hB,OAASA,IAAM6oB,OACxE,CAuBA,SAASC,GAAYtpB,EAAMX,GACvB,MAAMtG,EAAeiH,EAAKyoB,WAAWhjC,MAC/B+a,EAAOR,EAAKqoB,QAAUroB,EAAKqoB,OAAO7nB,KACxC,GAAKA,EAAL,CAGAnB,EAAQA,GAASW,EAAKO,QACtB,IAAK,MAAM0X,KAAU5Y,EAAM,CACvB,MAAM2oB,EAAS/P,EAAO0Q,QACtB,IAAKX,QAA2BplC,IAAjBolC,EAAOxnB,SAAsD5d,IAA/BolC,EAAOxnB,GAAMzH,GACtD,cAEGivB,EAAOxnB,GAAMzH,QACenW,IAA/BolC,EAAOxnB,GAAM2oB,oBAA4EvmC,IAA7ColC,EAAOxnB,GAAM2oB,cAAcpwB,WAChEivB,EAAOxnB,GAAM2oB,cAAcpwB,EAEzC,CAXA,CAYL,CACA,MAAMwwB,GAAsB/hB,GAAgB,UAATA,GAA6B,SAATA,EACjDgiB,GAAmB,CAACC,EAAQC,IAASA,EAASD,EAAS5tC,OAAOP,OAAO,GAAImuC,GAK/E,MAAME,GACLC,gBAAkB,CAAA,EAClBA,0BAA4B,KAC5BA,uBAAyB,KACzB,WAAAx0B,CAAY8P,EAAOnM,GACZzT,KAAK4f,MAAQA,EACb5f,KAAK6lB,KAAOjG,EAAMzjB,IAClB6D,KAAKG,MAAQsT,EACbzT,KAAKukC,gBAAkB,GACvBvkC,KAAKojC,YAAcpjC,KAAKwkC,UACxBxkC,KAAKykC,MAAQzkC,KAAKojC,YAAYljC,KAC9BF,KAAKvH,aAAU6E,EACd0C,KAAK0yB,UAAW,EACjB1yB,KAAK0kC,WAAQpnC,EACb0C,KAAK2kC,iBAAcrnC,EACnB0C,KAAK4kC,oBAAiBtnC,EACtB0C,KAAK6kC,gBAAavnC,EAClB0C,KAAK8kC,gBAAaxnC,EAClB0C,KAAK+kC,qBAAsB,EAC3B/kC,KAAKglC,oBAAqB,EAC1BhlC,KAAKilC,cAAW3nC,EAChB0C,KAAKklC,UAAY,GACjBllC,KAAKmlC,8BAAgCA,mBACrCnlC,KAAKolC,2BAA6BA,gBAClCplC,KAAKqlC,YACR,CACD,UAAAA,GACI,MAAM3qB,EAAO1a,KAAKojC,YAClBpjC,KAAK8gC,YACL9gC,KAAKslC,aACL5qB,EAAK6qB,SAAWhD,GAAU7nB,EAAKqoB,OAAQroB,GACvC1a,KAAKwlC,cACDxlC,KAAKvH,QAAQ4F,OAAS2B,KAAK4f,MAAM6lB,gBAAgB,WACjDtX,QAAQC,KAAK,qKAEpB,CACD,WAAAsX,CAAYjyB,GACJzT,KAAKG,QAAUsT,GACfuwB,GAAYhkC,KAAKojC,aAErBpjC,KAAKG,MAAQsT,CAChB,CACD,UAAA6xB,GACI,MAAM1lB,EAAQ5f,KAAK4f,MACblF,EAAO1a,KAAKojC,YACZuC,EAAU3lC,KAAK4lC,aACfC,EAAW,CAAC3qB,EAAMxX,EAAG8Q,EAAGtS,IAAa,MAATgZ,EAAexX,EAAa,MAATwX,EAAehZ,EAAIsS,EAClEsxB,EAAMprB,EAAKqrB,QAAUvzB,GAAemzB,EAAQI,QAASjC,GAAgBlkB,EAAO,MAC5EomB,EAAMtrB,EAAKurB,QAAUzzB,GAAemzB,EAAQM,QAASnC,GAAgBlkB,EAAO,MAC5EsmB,EAAMxrB,EAAKyrB,QAAU3zB,GAAemzB,EAAQQ,QAASrC,GAAgBlkB,EAAO,MAC5EoC,EAAYtH,EAAKsH,UACjBokB,EAAM1rB,EAAK2rB,QAAUR,EAAS7jB,EAAW8jB,EAAKE,EAAKE,GACnDI,EAAM5rB,EAAK6rB,QAAUV,EAAS7jB,EAAWgkB,EAAKF,EAAKI,GACzDxrB,EAAKc,OAASxb,KAAKwmC,cAAcV,GACjCprB,EAAKe,OAASzb,KAAKwmC,cAAcR,GACjCtrB,EAAK+rB,OAASzmC,KAAKwmC,cAAcN,GACjCxrB,EAAKM,OAAShb,KAAKwmC,cAAcJ,GACjC1rB,EAAKqoB,OAAS/iC,KAAKwmC,cAAcF,EACpC,CACD,UAAAV,GACI,OAAO5lC,KAAK4f,MAAMznB,KAAKgpB,SAASnhB,KAAKG,MACxC,CACD,OAAAqkC,GACI,OAAOxkC,KAAK4f,MAAM8mB,eAAe1mC,KAAKG,MACzC,CACJ,aAAAqmC,CAAcG,GACP,OAAO3mC,KAAK4f,MAAMgD,OAAO+jB,EAC5B,CACJ,cAAAC,CAAejkB,GACR,MAAMjI,EAAO1a,KAAKojC,YAClB,OAAOzgB,IAAUjI,EAAKM,OAASN,EAAKqoB,OAASroB,EAAKM,MACrD,CACD,KAAA6rB,GACI7mC,KAAK69B,QAAQ,QAChB,CACJ,QAAAiJ,GACO,MAAMpsB,EAAO1a,KAAKojC,YACdpjC,KAAK0kC,OACLjrB,GAAoBzZ,KAAK0kC,MAAO1kC,MAEhC0a,EAAK6qB,UACLvB,GAAYtpB,EAEnB,CACJ,UAAAqsB,GACO,MAAMpB,EAAU3lC,KAAK4lC,aACfztC,EAAOwtC,EAAQxtC,OAASwtC,EAAQxtC,KAAO,IACvCusC,EAAQ1kC,KAAK0kC,MACnB,GAAIxyB,GAAS/Z,GAAO,CAChB,MAAMuiB,EAAO1a,KAAKojC,YAClBpjC,KAAK0kC,MA5MjB,SAAkCvsC,EAAMuiB,GACpC,MAAMM,OAAEA,EAAM+nB,OAAGA,GAAYroB,EACvBssB,EAA2B,MAAhBhsB,EAAOE,KAAe,IAAM,IACvC+rB,EAA2B,MAAhBlE,EAAO7nB,KAAe,IAAM,IACvCza,EAAOlK,OAAOkK,KAAKtI,GACnB+uC,EAAQ,IAAI1nC,MAAMiB,EAAKnF,QAC7B,IAAII,EAAG4X,EAAM9Z,EACb,IAAIkC,EAAI,EAAG4X,EAAO7S,EAAKnF,OAAQI,EAAI4X,IAAQ5X,EACvClC,EAAMiH,EAAK/E,GACXwrC,EAAMxrC,GAAK,CACPsrC,CAACA,GAAWxtC,EACZytC,CAACA,GAAW9uC,EAAKqB,IAGzB,OAAO0tC,CACX,CA6LyBC,CAAyBhvC,EAAMuiB,EACxD,MAAe,GAAIgqB,IAAUvsC,EAAM,CACvB,GAAIusC,EAAO,CACPjrB,GAAoBirB,EAAO1kC,MAC3B,MAAM0a,EAAO1a,KAAKojC,YAClBY,GAAYtpB,GACZA,EAAKO,QAAU,EAClB,CACG9iB,GAAQ5B,OAAO6wC,aAAajvC,KD1KVuhB,EC2KM1Z,MD3Kb8W,EC2KO3e,GD1KpByhB,SACN9C,EAAM8C,SAASC,UAAUxf,KAAKqf,IAGlCnjB,OAAO8wC,eAAevwB,EAAO,WAAY,CACrC6a,cAAc,EACdlO,YAAY,EACZ3qB,MAAO,CACH+gB,UAAW,CACPH,MAIZF,GAAY7iB,SAAS6C,IACjB,MAAMknC,EAAS,UAAY1rB,GAAYxb,GACjC8tC,EAAOxwB,EAAMtd,GACnBjD,OAAO8wC,eAAevwB,EAAOtd,EAAK,CAC9Bm4B,cAAc,EACdlO,YAAY,EACZ,KAAA3qB,IAAU+Z,GACN,MAAM0tB,EAAM+G,EAAKv0B,MAAM/S,KAAM6S,GAM7B,OALAiE,EAAM8C,SAASC,UAAUljB,SAAS4wC,IACA,mBAAnBA,EAAO7G,IACd6G,EAAO7G,MAAW7tB,EACrB,IAEE0tB,CACV,GACH,MCgJEvgC,KAAKklC,UAAY,GACjBllC,KAAK0kC,MAAQvsC,CAChB,CD/KT,IAA2B2e,EAAO4C,CCgL7B,CACD,WAAA8rB,GACI,MAAM9qB,EAAO1a,KAAKojC,YAClBpjC,KAAK+mC,aACD/mC,KAAKmlC,qBACLzqB,EAAKirB,QAAU,IAAI3lC,KAAKmlC,mBAE/B,CACD,qBAAAqC,CAAsBC,GAClB,MAAM/sB,EAAO1a,KAAKojC,YACZuC,EAAU3lC,KAAK4lC,aACrB,IAAI8B,GAAe,EACnB1nC,KAAK+mC,aACL,MAAMY,EAAajtB,EAAK6qB,SACxB7qB,EAAK6qB,SAAWhD,GAAU7nB,EAAKqoB,OAAQroB,GACnCA,EAAKynB,QAAUwD,EAAQxD,QACvBuF,GAAe,EACf1D,GAAYtpB,GACZA,EAAKynB,MAAQwD,EAAQxD,OAEzBniC,KAAK4nC,gBAAgBH,IACjBC,GAAgBC,IAAejtB,EAAK6qB,WACpCrC,GAAaljC,KAAM0a,EAAKO,QAE/B,CACJ,SAAA6lB,GACO,MAAMF,EAAS5gC,KAAK4f,MAAMghB,OACpBiH,EAAYjH,EAAOkH,iBAAiB9nC,KAAKykC,OACzC7V,EAASgS,EAAOmH,gBAAgB/nC,KAAK4lC,aAAciC,GAAW,GACpE7nC,KAAKvH,QAAUmoC,EAAOoH,eAAepZ,EAAQ5uB,KAAKuoB,cAClDvoB,KAAK0yB,SAAW1yB,KAAKvH,QAAQ+pB,QAC7BxiB,KAAKukC,gBAAkB,EAC1B,CACJ,KAAA3R,CAAMva,EAAOyC,GACN,MAAQsoB,YAAa1oB,EAAOgqB,MAAOvsC,GAAU6H,MACvCgb,OAAEA,EAAMuqB,SAAGA,GAAc7qB,EACzB4oB,EAAQtoB,EAAOE,KACrB,IAEIxf,EAAGmjC,EAAKlM,EAFRsV,EAAmB,IAAV5vB,GAAeyC,IAAU3iB,EAAKmD,QAAgBof,EAAKK,QAC5Doa,EAAO9c,EAAQ,GAAKqC,EAAKO,QAAQ5C,EAAQ,GAE7C,IAAsB,IAAlBrY,KAAK0yB,SACLhY,EAAKO,QAAU9iB,EACfuiB,EAAKK,SAAU,EACf4X,EAASx6B,MACN,CAECw6B,EADA3vB,GAAQ7K,EAAKkgB,IACJrY,KAAKkoC,eAAextB,EAAMviB,EAAMkgB,EAAOyC,GACzC5I,GAAS/Z,EAAKkgB,IACZrY,KAAKmoC,gBAAgBztB,EAAMviB,EAAMkgB,EAAOyC,GAExC9a,KAAKooC,mBAAmB1tB,EAAMviB,EAAMkgB,EAAOyC,GAExD,MAAMutB,EAA6B,IAAmB,OAAfxJ,EAAIyE,IAAmBnO,GAAQ0J,EAAIyE,GAASnO,EAAKmO,GACxF,IAAI5nC,EAAI,EAAGA,EAAIof,IAASpf,EACpBgf,EAAKO,QAAQvf,EAAI2c,GAASwmB,EAAMlM,EAAOj3B,GACnCusC,IACII,MACAJ,GAAS,GAEb9S,EAAO0J,GAGfnkB,EAAKK,QAAUktB,CAClB,CACG1C,GACArC,GAAaljC,KAAM2yB,EAE1B,CACJ,kBAAAyV,CAAmB1tB,EAAMviB,EAAMkgB,EAAOyC,GAC/B,MAAME,OAAEA,EAAM+nB,OAAGA,GAAYroB,EACvB4oB,EAAQtoB,EAAOE,KACfqoB,EAAQR,EAAO7nB,KACfotB,EAASttB,EAAOutB,YAChBC,EAAcxtB,IAAW+nB,EACzBpQ,EAAS,IAAInzB,MAAMsb,GACzB,IAAIpf,EAAG4X,EAAMnT,EACb,IAAIzE,EAAI,EAAG4X,EAAOwH,EAAOpf,EAAI4X,IAAQ5X,EACjCyE,EAAQzE,EAAI2c,EACZsa,EAAOj3B,GAAK,CACR4nC,CAACA,GAAQkF,GAAextB,EAAO4X,MAAM0V,EAAOnoC,GAAQA,GACpDojC,CAACA,GAAQR,EAAOnQ,MAAMz6B,EAAKgI,GAAQA,IAG3C,OAAOwyB,CACV,CACJ,cAAAuV,CAAextB,EAAMviB,EAAMkgB,EAAOyC,GAC3B,MAAMU,OAAEA,EAAMC,OAAGA,GAAYf,EACvBiY,EAAS,IAAInzB,MAAMsb,GACzB,IAAIpf,EAAG4X,EAAMnT,EAAOmV,EACpB,IAAI5Z,EAAI,EAAG4X,EAAOwH,EAAOpf,EAAI4X,IAAQ5X,EACjCyE,EAAQzE,EAAI2c,EACZ/C,EAAOnd,EAAKgI,GACZwyB,EAAOj3B,GAAK,CACRgI,EAAG8X,EAAOoX,MAAMtd,EAAK,GAAInV,GACzBqU,EAAGiH,EAAOmX,MAAMtd,EAAK,GAAInV,IAGjC,OAAOwyB,CACV,CACJ,eAAAwV,CAAgBztB,EAAMviB,EAAMkgB,EAAOyC,GAC5B,MAAMU,OAAEA,EAAMC,OAAGA,GAAYf,GACvB+tB,SAAEA,EAAU,IAAMC,SAAAA,EAAU,KAAS1oC,KAAK0yB,SAC1CC,EAAS,IAAInzB,MAAMsb,GACzB,IAAIpf,EAAG4X,EAAMnT,EAAOmV,EACpB,IAAI5Z,EAAI,EAAG4X,EAAOwH,EAAOpf,EAAI4X,IAAQ5X,EACjCyE,EAAQzE,EAAI2c,EACZ/C,EAAOnd,EAAKgI,GACZwyB,EAAOj3B,GAAK,CACRgI,EAAG8X,EAAOoX,MAAMne,GAAiBa,EAAMmzB,GAAWtoC,GAClDqU,EAAGiH,EAAOmX,MAAMne,GAAiBa,EAAMozB,GAAWvoC,IAG1D,OAAOwyB,CACV,CACJ,SAAAgW,CAAUxoC,GACH,OAAOH,KAAKojC,YAAYnoB,QAAQ9a,EACnC,CACJ,cAAAyoC,CAAezoC,GACR,OAAOH,KAAKojC,YAAYjrC,KAAKgI,EAChC,CACJ,UAAA+hC,CAAWvf,EAAOgQ,EAAQzQ,GACnB,MAAMtC,EAAQ5f,KAAK4f,MACblF,EAAO1a,KAAKojC,YACZtqC,EAAQ65B,EAAOhQ,EAAMzH,MAK3B,OAAOgnB,GAJO,CACVzhC,KAAMqhC,GAAwBliB,GAAO,GACrCJ,OAAQmT,EAAO0Q,QAAQ1gB,EAAMzH,MAAM2oB,eAEd/qC,EAAO4hB,EAAKva,MAAO,CACxC+hB,QAEP,CACJ,qBAAA2mB,CAAsBvyB,EAAOqM,EAAOgQ,EAAQwP,GACrC,MAAM2G,EAAcnW,EAAOhQ,EAAMzH,MACjC,IAAIpiB,EAAwB,OAAhBgwC,EAAuBC,IAAMD,EACzC,MAAMtpB,EAAS2iB,GAASxP,EAAO0Q,QAAQ1gB,EAAMzH,MACzCinB,GAAS3iB,IACT2iB,EAAM3iB,OAASA,EACf1mB,EAAQopC,GAAWC,EAAO2G,EAAa9oC,KAAKojC,YAAYjjC,QAE5DmW,EAAMtV,IAAMF,KAAKE,IAAIsV,EAAMtV,IAAKlI,GAChCwd,EAAMvV,IAAMD,KAAKC,IAAIuV,EAAMvV,IAAKjI,EACnC,CACJ,SAAAkwC,CAAUrmB,EAAOsmB,GACV,MAAMvuB,EAAO1a,KAAKojC,YACZnoB,EAAUP,EAAKO,QACfgtB,EAASvtB,EAAKK,SAAW4H,IAAUjI,EAAKM,OACxC1H,EAAO2H,EAAQ3f,OACf4tC,EAAalpC,KAAK4mC,eAAejkB,GACjCwf,EAjQM,EAAC8G,EAAUvuB,EAAMkF,IAAQqpB,IAAavuB,EAAKyuB,QAAUzuB,EAAK6qB,UAAY,CAClF9kC,KAAMqhC,GAAwBliB,GAAO,GACrCJ,OAAQ,MA+PM4pB,CAAYH,EAAUvuB,EAAM1a,KAAK4f,OACzCtJ,EAAQ,CACVtV,IAAKoR,OAAOuD,kBACZ5U,IAAKqR,OAAOi3B,oBAERroC,IAAKsoC,EAAWvoC,IAAKwoC,GA7VrC,SAAuB5mB,GACnB,MAAM3hB,IAAEA,EAAGD,IAAGA,EAAMoa,WAAAA,EAAaC,WAAAA,GAAgBuH,EAAMtH,gBACvD,MAAO,CACHra,IAAKma,EAAana,EAAMoR,OAAOi3B,kBAC/BtoC,IAAKqa,EAAara,EAAMqR,OAAOuD,kBAEvC,CAuVmD0F,CAAc6tB,GACzD,IAAIxtC,EAAGi3B,EACP,SAAS6W,IACL7W,EAAS1X,EAAQvf,GACjB,MAAM4mC,EAAa3P,EAAOuW,EAAWhuB,MACrC,OAAQ/I,GAAewgB,EAAOhQ,EAAMzH,QAAUouB,EAAWhH,GAAciH,EAAWjH,CACrF,CACD,IAAI5mC,EAAI,EAAGA,EAAI4X,IACPk2B,MAGJxpC,KAAK6oC,sBAAsBvyB,EAAOqM,EAAOgQ,EAAQwP,IAC7C8F,MALevsC,GASvB,GAAIusC,EACA,IAAIvsC,EAAI4X,EAAO,EAAG5X,GAAK,IAAKA,EACxB,IAAI8tC,IAAJ,CAGAxpC,KAAK6oC,sBAAsBvyB,EAAOqM,EAAOgQ,EAAQwP,GACjD,KAFC,CAKT,OAAO7rB,CACV,CACD,kBAAAmzB,CAAmB9mB,GACf,MAAMgQ,EAAS3yB,KAAKojC,YAAYnoB,QAC1BuE,EAAS,GACf,IAAI9jB,EAAG4X,EAAMxa,EACb,IAAI4C,EAAI,EAAG4X,EAAOqf,EAAOr3B,OAAQI,EAAI4X,IAAQ5X,EACzC5C,EAAQ65B,EAAOj3B,GAAGinB,EAAMzH,MACpB/I,GAAerZ,IACf0mB,EAAOnlB,KAAKvB,GAGpB,OAAO0mB,CACV,CACJ,cAAAkqB,GACO,OAAO,CACV,CACJ,gBAAAC,CAAiBxpC,GACV,MAAMua,EAAO1a,KAAKojC,YACZpoB,EAASN,EAAKM,OACd+nB,EAASroB,EAAKqoB,OACdpQ,EAAS3yB,KAAK2oC,UAAUxoC,GAC9B,MAAO,CACHypC,MAAO5uB,EAAS,GAAKA,EAAO6uB,iBAAiBlX,EAAO3X,EAAOE,OAAS,GACpEpiB,MAAOiqC,EAAS,GAAKA,EAAO8G,iBAAiBlX,EAAOoQ,EAAO7nB,OAAS,GAE3E,CACJ,OAAA2iB,CAAQ3b,GACD,MAAMxH,EAAO1a,KAAKojC,YAClBpjC,KAAKzE,OAAO2mB,GAAQ,WACpBxH,EAAKovB,MA5db,SAAgBhxC,GACZ,IAAI+X,EAAG3O,EAAGlL,EAAG4I,EASb,OARIsS,GAASpZ,IACT+X,EAAI/X,EAAM+rB,IACV3iB,EAAIpJ,EAAMgsB,MACV9tB,EAAI8B,EAAMisB,OACVnlB,EAAI9G,EAAMksB,MAEVnU,EAAI3O,EAAIlL,EAAI4I,EAAI9G,EAEb,CACH+rB,IAAKhU,EACLiU,MAAO5iB,EACP6iB,OAAQ/tB,EACRguB,KAAMplB,EACNmqC,UAAoB,IAAVjxC,EAElB,CA2cqBkxC,CAAOx3B,GAAexS,KAAKvH,QAAQ4sB,KAzexD,SAAqB7J,EAAQC,EAAQomB,GACjC,IAAwB,IAApBA,EACA,OAAO,EAEX,MAAMn+B,EAAIk+B,GAAUpmB,EAAQqmB,GACtBrtB,EAAIotB,GAAUnmB,EAAQomB,GAC5B,MAAO,CACHhd,IAAKrQ,EAAE8D,IACPwM,MAAOphB,EAAE4U,IACTyM,OAAQvQ,EAAE6D,MACV2M,KAAMthB,EAAE2U,MAEhB,CA6d8D4xB,CAAYvvB,EAAKc,OAAQd,EAAKe,OAAQzb,KAAK0pC,mBACpG,CACJ,MAAAnuC,CAAO2mB,GAAQ,CACZ,IAAAgc,GACI,MAAM/hC,EAAM6D,KAAK6lB,KACXjG,EAAQ5f,KAAK4f,MACblF,EAAO1a,KAAKojC,YACZ7hB,EAAW7G,EAAKviB,MAAQ,GACxBiyB,EAAOxK,EAAMsqB,UACb7lB,EAAS,GACThM,EAAQrY,KAAK6kC,YAAc,EAC3B/pB,EAAQ9a,KAAK8kC,YAAcvjB,EAASjmB,OAAS+c,EAC7CyK,EAA0B9iB,KAAKvH,QAAQqqB,wBAC7C,IAAIpnB,EAIJ,IAHIgf,EAAKirB,SACLjrB,EAAKirB,QAAQzH,KAAK/hC,EAAKiuB,EAAM/R,EAAOyC,GAEpCpf,EAAI2c,EAAO3c,EAAI2c,EAAQyC,IAASpf,EAAE,CAClC,MAAM5D,EAAUypB,EAAS7lB,GACrB5D,EAAQqxC,SAGRrxC,EAAQusB,QAAUvB,EAClBuB,EAAOhqB,KAAKvC,GAEZA,EAAQomC,KAAK/hC,EAAKiuB,GAEzB,CACD,IAAI1uB,EAAI,EAAGA,EAAI2oB,EAAO/oB,SAAUI,EAC5B2oB,EAAO3oB,GAAGwiC,KAAK/hC,EAAKiuB,EAE3B,CACJ,QAAAgP,CAASj5B,EAAOkkB,GACT,MAAMnC,EAAOmC,EAAS,SAAW,UACjC,YAAiB/mB,IAAV6C,GAAuBH,KAAKojC,YAAYuC,QAAU3lC,KAAKmqC,6BAA6BjoB,GAAQliB,KAAKoqC,0BAA0BjqC,GAAS,EAAG+hB,EACjJ,CACJ,UAAAqG,CAAWpoB,EAAOkkB,EAAQnC,GACnB,MAAMyjB,EAAU3lC,KAAK4lC,aACrB,IAAI9mC,EACJ,GAAIqB,GAAS,GAAKA,EAAQH,KAAKojC,YAAYjrC,KAAKmD,OAAQ,CACpD,MAAMxD,EAAUkI,KAAKojC,YAAYjrC,KAAKgI,GACtCrB,EAAUhH,EAAQmtC,WAAantC,EAAQmtC,SAtYnD,SAA2BhT,EAAQ9xB,EAAOrI,GACtC,OAAO22B,GAAcwD,EAAQ,CACzB5N,QAAQ,EACRgmB,UAAWlqC,EACXwyB,YAAQr1B,EACRgtC,SAAKhtC,EACLxF,UACAqI,QACA+hB,KAAM,UACNhiB,KAAM,QAEd,CA2X8DqqC,CAAkBvqC,KAAKuoB,aAAcpoB,EAAOrI,IAC9FgH,EAAQ6zB,OAAS3yB,KAAK2oC,UAAUxoC,GAChCrB,EAAQwrC,IAAM3E,EAAQxtC,KAAKgI,GAC3BrB,EAAQqB,MAAQrB,EAAQurC,UAAYlqC,CAChD,MACYrB,EAAUkB,KAAKilC,WAAajlC,KAAKilC,SArZ7C,SAA8BhT,EAAQ9xB,GAClC,OAAOsuB,GAAcwD,EAAQ,CACzB5N,QAAQ,EACRshB,aAASroC,EACTmW,aAActT,EACdA,QACA+hB,KAAM,UACNhiB,KAAM,WAEd,CA4YwDsqC,CAAqBxqC,KAAK4f,MAAM2I,aAAcvoB,KAAKG,QAC/FrB,EAAQ6mC,QAAUA,EAClB7mC,EAAQqB,MAAQrB,EAAQ2U,aAAezT,KAAKG,MAIhD,OAFArB,EAAQulB,SAAWA,EACnBvlB,EAAQojB,KAAOA,EACRpjB,CACV,CACJ,4BAAAqrC,CAA6BjoB,GACtB,OAAOliB,KAAKyqC,uBAAuBzqC,KAAKmlC,mBAAmBvzB,GAAIsQ,EAClE,CACJ,yBAAAkoB,CAA0BjqC,EAAO+hB,GAC1B,OAAOliB,KAAKyqC,uBAAuBzqC,KAAKolC,gBAAgBxzB,GAAIsQ,EAAM/hB,EACrE,CACJ,sBAAAsqC,CAAuBC,EAAaxoB,EAAO,UAAW/hB,GAC/C,MAAMkkB,EAAkB,WAATnC,EACTwF,EAAQ1nB,KAAKukC,gBACbzlB,EAAW4rB,EAAc,IAAMxoB,EAC/BiiB,EAASzc,EAAM5I,GACf6rB,EAAU3qC,KAAK+kC,qBAAuB7vB,GAAQ/U,GACpD,GAAIgkC,EACA,OAAOD,GAAiBC,EAAQwG,GAEpC,MAAM/J,EAAS5gC,KAAK4f,MAAMghB,OACpBiH,EAAYjH,EAAOgK,wBAAwB5qC,KAAKykC,MAAOiG,GACvD7b,EAAWxK,EAAS,CACtB,GAAGqmB,SACH,QACAA,EACA,IACA,CACAA,EACA,IAEE9b,EAASgS,EAAOmH,gBAAgB/nC,KAAK4lC,aAAciC,GACnDz5B,EAAQ7X,OAAOkK,KAAKkjB,GAASpC,SAASmpB,IAEtClrB,EAASohB,EAAOiK,oBAAoBjc,EAAQxgB,GADlC,IAAIpO,KAAKuoB,WAAWpoB,EAAOkkB,EAAQnC,IACe2M,GAKlE,OAJIrP,EAAO6hB,UACP7hB,EAAO6hB,QAAUsJ,EACjBjjB,EAAM5I,GAAYvoB,OAAOu0C,OAAO5G,GAAiB1kB,EAAQmrB,KAEtDnrB,CACV,CACJ,kBAAAurB,CAAmB5qC,EAAO6qC,EAAY3mB,GAC/B,MAAMzE,EAAQ5f,KAAK4f,MACb8H,EAAQ1nB,KAAKukC,gBACbzlB,EAAW,aAAaksB,IACxB7G,EAASzc,EAAM5I,GACrB,GAAIqlB,EACA,OAAOA,EAEX,IAAI1rC,EACJ,IAAgC,IAA5BmnB,EAAMnnB,QAAQuoB,UAAqB,CACnC,MAAM4f,EAAS5gC,KAAK4f,MAAMghB,OACpBiH,EAAYjH,EAAOqK,0BAA0BjrC,KAAKykC,MAAOuG,GACzDpc,EAASgS,EAAOmH,gBAAgB/nC,KAAK4lC,aAAciC,GACzDpvC,EAAUmoC,EAAOoH,eAAepZ,EAAQ5uB,KAAKuoB,WAAWpoB,EAAOkkB,EAAQ2mB,GAC1E,CACD,MAAMxmB,EAAa,IAAImc,GAAW/gB,EAAOnnB,GAAWA,EAAQ+rB,YAI5D,OAHI/rB,GAAWA,EAAQ22B,aACnB1H,EAAM5I,GAAYvoB,OAAOu0C,OAAOtmB,IAE7BA,CACV,CACJ,gBAAA0mB,CAAiBzyC,GACV,GAAKA,EAAQ4oC,QAGb,OAAOrhC,KAAK4kC,iBAAmB5kC,KAAK4kC,eAAiBruC,OAAOP,OAAO,CAAA,EAAIyC,GAC1E,CACJ,cAAA0yC,CAAejpB,EAAMkpB,GACd,OAAQA,GAAiBnH,GAAmB/hB,IAASliB,KAAK4f,MAAMyrB,mBACnE,CACJ,iBAAAC,CAAkBjzB,EAAO6J,GAClB,MAAMqpB,EAAYvrC,KAAKoqC,0BAA0B/xB,EAAO6J,GAClDspB,EAA0BxrC,KAAK4kC,eAC/BwG,EAAgBprC,KAAKkrC,iBAAiBK,GACtCJ,EAAiBnrC,KAAKmrC,eAAejpB,EAAMkpB,IAAkBA,IAAkBI,EAErF,OADAxrC,KAAKyrC,oBAAoBL,EAAelpB,EAAMqpB,GACvC,CACHH,gBACAD,iBAEP,CACJ,aAAAO,CAAc5zC,EAASqI,EAAOikB,EAAYlC,GAC/B+hB,GAAmB/hB,GACnB3rB,OAAOP,OAAO8B,EAASssB,GAEvBpkB,KAAK+qC,mBAAmB5qC,EAAO+hB,GAAM3mB,OAAOzD,EAASssB,EAE5D,CACJ,mBAAAqnB,CAAoBL,EAAelpB,EAAMkf,GAC9BgK,IAAkBnH,GAAmB/hB,IACrCliB,KAAK+qC,wBAAmBztC,EAAW4kB,GAAM3mB,OAAO6vC,EAAehK,EAEtE,CACJ,SAAAuK,CAAU7zC,EAASqI,EAAO+hB,EAAMmC,GACzBvsB,EAAQusB,OAASA,EACjB,MAAM5rB,EAAUuH,KAAKo5B,SAASj5B,EAAOkkB,GACrCrkB,KAAK+qC,mBAAmB5qC,EAAO+hB,EAAMmC,GAAQ9oB,OAAOzD,EAAS,CACzDW,SAAU4rB,GAAUrkB,KAAKkrC,iBAAiBzyC,IAAYA,GAE7D,CACD,gBAAAmzC,CAAiB9zC,EAAS2b,EAActT,GACpCH,KAAK2rC,UAAU7zC,EAASqI,EAAO,UAAU,EAC5C,CACD,aAAA0rC,CAAc/zC,EAAS2b,EAActT,GACjCH,KAAK2rC,UAAU7zC,EAASqI,EAAO,UAAU,EAC5C,CACJ,wBAAA2rC,GACO,MAAMh0C,EAAUkI,KAAKojC,YAAYuC,QAC7B7tC,GACAkI,KAAK2rC,UAAU7zC,OAASwF,EAAW,UAAU,EAEpD,CACJ,qBAAAyuC,GACO,MAAMj0C,EAAUkI,KAAKojC,YAAYuC,QAC7B7tC,GACAkI,KAAK2rC,UAAU7zC,OAASwF,EAAW,UAAU,EAEpD,CACJ,eAAAsqC,CAAgBH,GACT,MAAMtvC,EAAO6H,KAAK0kC,MACZnjB,EAAWvhB,KAAKojC,YAAYjrC,KAClC,IAAK,MAAOuoC,EAAQsL,EAAMC,KAASjsC,KAAKklC,UACpCllC,KAAK0gC,GAAQsL,EAAMC,GAEvBjsC,KAAKklC,UAAY,GACjB,MAAMgH,EAAU3qB,EAASjmB,OACnB6wC,EAAUh0C,EAAKmD,OACfwf,EAAQha,KAAKE,IAAImrC,EAASD,GAC5BpxB,GACA9a,KAAK4yB,MAAM,EAAG9X,GAEdqxB,EAAUD,EACVlsC,KAAKosC,gBAAgBF,EAASC,EAAUD,EAASzE,GAC1C0E,EAAUD,GACjBlsC,KAAKqsC,gBAAgBF,EAASD,EAAUC,EAE/C,CACJ,eAAAC,CAAgB/zB,EAAOyC,EAAO2sB,GAAmB,GAC1C,MAAM/sB,EAAO1a,KAAKojC,YACZjrC,EAAOuiB,EAAKviB,KACZmgB,EAAMD,EAAQyC,EACpB,IAAIpf,EACJ,MAAM4wC,EAAQ/a,IAEV,IADAA,EAAIj2B,QAAUwf,EACVpf,EAAI61B,EAAIj2B,OAAS,EAAGI,GAAK4c,EAAK5c,IAC9B61B,EAAI71B,GAAK61B,EAAI71B,EAAIof,EACpB,EAGL,IADAwxB,EAAKn0C,GACDuD,EAAI2c,EAAO3c,EAAI4c,IAAO5c,EACtBvD,EAAKuD,GAAK,IAAIsE,KAAKolC,gBAEnBplC,KAAK0yB,UACL4Z,EAAK5xB,EAAKO,SAEdjb,KAAK4yB,MAAMva,EAAOyC,GACd2sB,GACAznC,KAAKusC,eAAep0C,EAAMkgB,EAAOyC,EAAO,QAE/C,CACD,cAAAyxB,CAAez0C,EAASugB,EAAOyC,EAAOoH,GAAQ,CACjD,eAAAmqB,CAAgBh0B,EAAOyC,GAChB,MAAMJ,EAAO1a,KAAKojC,YAClB,GAAIpjC,KAAK0yB,SAAU,CACf,MAAM8Z,EAAU9xB,EAAKO,QAAQ7a,OAAOiY,EAAOyC,GACvCJ,EAAK6qB,UACLvB,GAAYtpB,EAAM8xB,EAEzB,CACD9xB,EAAKviB,KAAKiI,OAAOiY,EAAOyC,EAC3B,CACJ,KAAA2xB,CAAM55B,GACC,GAAI7S,KAAK0yB,SACL1yB,KAAKklC,UAAU7qC,KAAKwY,OACjB,CACH,MAAO6tB,EAAQsL,EAAMC,GAAQp5B,EAC7B7S,KAAK0gC,GAAQsL,EAAMC,EACtB,CACDjsC,KAAK4f,MAAM8sB,aAAaryC,KAAK,CACzB2F,KAAKG,SACF0S,GAEV,CACD,WAAA85B,GACI,MAAM7xB,EAAQ8xB,UAAUtxC,OACxB0E,KAAKysC,MAAM,CACP,kBACAzsC,KAAK4lC,aAAaztC,KAAKmD,OAASwf,EAChCA,GAEP,CACD,UAAA+xB,GACI7sC,KAAKysC,MAAM,CACP,kBACAzsC,KAAKojC,YAAYjrC,KAAKmD,OAAS,EAC/B,GAEP,CACD,YAAAwxC,GACI9sC,KAAKysC,MAAM,CACP,kBACA,EACA,GAEP,CACD,aAAAM,CAAc10B,EAAOyC,GACbA,GACA9a,KAAKysC,MAAM,CACP,kBACAp0B,EACAyC,IAGR,MAAMkyB,EAAWJ,UAAUtxC,OAAS,EAChC0xC,GACAhtC,KAAKysC,MAAM,CACP,kBACAp0B,EACA20B,GAGX,CACD,cAAAC,GACIjtC,KAAKysC,MAAM,CACP,kBACA,EACAG,UAAUtxC,QAEjB,EAcJ,SAAS4xC,GAAqBxyB,GAC3B,MAAMiI,EAAQjI,EAAKM,OACbwE,EAbV,SAA2BmD,EAAOziB,GAC9B,IAAKyiB,EAAMwqB,OAAOC,KAAM,CACpB,MAAMC,EAAe1qB,EAAMsgB,wBAAwB/iC,GACnD,IAAIsf,EAAS,GACb,IAAI,IAAI9jB,EAAI,EAAG4X,EAAO+5B,EAAa/xC,OAAQI,EAAI4X,EAAM5X,IACjD8jB,EAASA,EAAO8tB,OAAOD,EAAa3xC,GAAGynC,WAAWsG,mBAAmB9mB,IAEzEA,EAAMwqB,OAAOC,KAAOtzB,GAAa0F,EAAO+tB,MAAK,CAACx2C,EAAGC,IAAID,EAAIC,IAC5D,CACD,OAAO2rB,EAAMwqB,OAAOC,IACxB,CAGmBI,CAAkB7qB,EAAOjI,EAAKxa,MAC7C,IACIxE,EAAG4X,EAAMm6B,EAAMtY,EADfn0B,EAAM2hB,EAAM+qB,QAEhB,MAAMC,EAAmB,KACR,QAATF,IAA4B,QAAVA,IAGlBv4B,GAAQigB,KACRn0B,EAAMF,KAAKE,IAAIA,EAAKF,KAAKsV,IAAIq3B,EAAOtY,IAASn0B,IAEjDm0B,EAAOsY,EAAI,EAEf,IAAI/xC,EAAI,EAAG4X,EAAOkM,EAAOlkB,OAAQI,EAAI4X,IAAQ5X,EACzC+xC,EAAO9qB,EAAMrH,iBAAiBkE,EAAO9jB,IACrCiyC,IAGJ,IADAxY,OAAO73B,EACH5B,EAAI,EAAG4X,EAAOqP,EAAMhD,MAAMrkB,OAAQI,EAAI4X,IAAQ5X,EAC9C+xC,EAAO9qB,EAAMirB,gBAAgBlyC,GAC7BiyC,IAEJ,OAAO3sC,CACX,CA0DA,SAAS6sC,GAAWC,EAAOx4B,EAAMytB,EAAQrnC,GAMrC,OALIsH,GAAQ8qC,GAtBhB,SAAuBA,EAAOx4B,EAAMytB,EAAQrnC,GACxC,MAAMqyC,EAAahL,EAAOnQ,MAAMkb,EAAM,GAAIpyC,GACpCsyC,EAAWjL,EAAOnQ,MAAMkb,EAAM,GAAIpyC,GAClCsF,EAAMF,KAAKE,IAAI+sC,EAAYC,GAC3BjtC,EAAMD,KAAKC,IAAIgtC,EAAYC,GACjC,IAAIC,EAAWjtC,EACXktC,EAASntC,EACTD,KAAKsV,IAAIpV,GAAOF,KAAKsV,IAAIrV,KACzBktC,EAAWltC,EACXmtC,EAASltC,GAEbsU,EAAKytB,EAAO7nB,MAAQgzB,EACpB54B,EAAK64B,QAAU,CACXF,WACAC,SACA71B,MAAO01B,EACPz1B,IAAK01B,EACLhtC,MACAD,MAER,CAGQqtC,CAAcN,EAAOx4B,EAAMytB,EAAQrnC,GAEnC4Z,EAAKytB,EAAO7nB,MAAQ6nB,EAAOnQ,MAAMkb,EAAOpyC,GAErC4Z,CACX,CACA,SAAS+4B,GAAsB3zB,EAAMviB,EAAMkgB,EAAOyC,GAC9C,MAAME,EAASN,EAAKM,OACd+nB,EAASroB,EAAKqoB,OACduF,EAASttB,EAAOutB,YAChBC,EAAcxtB,IAAW+nB,EACzBpQ,EAAS,GACf,IAAIj3B,EAAG4X,EAAMgC,EAAMw4B,EACnB,IAAIpyC,EAAI2c,EAAO/E,EAAO+E,EAAQyC,EAAOpf,EAAI4X,IAAQ5X,EAC7CoyC,EAAQ31C,EAAKuD,GACb4Z,EAAO,CAAA,EACPA,EAAK0F,EAAOE,MAAQstB,GAAextB,EAAO4X,MAAM0V,EAAO5sC,GAAIA,GAC3Di3B,EAAOt4B,KAAKwzC,GAAWC,EAAOx4B,EAAMytB,EAAQrnC,IAEhD,OAAOi3B,CACX,CACA,SAAS2b,GAAWC,GAChB,OAAOA,QAA8BjxC,IAApBixC,EAAON,eAA4C3wC,IAAlBixC,EAAOL,MAC7D,CAiCA,SAASM,GAAiBpqB,EAAY3rB,EAAS0pC,EAAOhiC,GAClD,IAAIsuC,EAAOh2C,EAAQi2C,cACnB,MAAMnO,EAAM,CAAA,EACZ,IAAKkO,EAED,YADArqB,EAAWsqB,cAAgBnO,GAG/B,IAAa,IAATkO,EAOA,YANArqB,EAAWsqB,cAAgB,CACvB7pB,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,MAAM,IAId,MAAM3M,MAAEA,EAAQC,IAAAA,UAAMpF,EAAO2R,IAAGA,EAAGE,OAAGA,GA1C1C,SAAqBX,GACjB,IAAIlR,EAASmF,EAAOC,EAAKuM,EAAKE,EAiB9B,OAhBIX,EAAWuqB,YACXz7B,EAAUkR,EAAWkjB,KAAOljB,EAAW1gB,EACvC2U,EAAQ,OACRC,EAAM,UAENpF,EAAUkR,EAAWkjB,KAAOljB,EAAW5P,EACvC6D,EAAQ,SACRC,EAAM,OAENpF,GACA2R,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEN,CACH1M,QACAC,MACApF,UACA2R,MACAE,SAER,CAiBsD6pB,CAAYxqB,GACjD,WAATqqB,GAAqBtM,IACrB/d,EAAWyqB,oBAAqB,GAC3B1M,EAAMwB,MAAQ,KAAOxjC,EACtBsuC,EAAO5pB,GACCsd,EAAMyB,SAAW,KAAOzjC,EAChCsuC,EAAO1pB,GAEPwb,EAAIuO,GAAU/pB,EAAQ1M,EAAOC,EAAKpF,KAAY,EAC9Cu7B,EAAO5pB,IAGf0b,EAAIuO,GAAUL,EAAMp2B,EAAOC,EAAKpF,KAAY,EAC5CkR,EAAWsqB,cAAgBnO,CAC/B,CACA,SAASuO,GAAUL,EAAM13C,EAAGC,EAAGkc,GAS/B,IAAc67B,EAAMv7B,EAAIw7B,EAFpB,OANI97B,GAQgB87B,EAPKh4C,EACrBy3C,EAAOQ,GADPR,GAOMM,EAPMN,MAOAj7B,EAPMzc,GAQDi4C,EAAKD,IAASC,EAAKx7B,EAAKu7B,EAPnB/3C,EAAGD,IAEzB03C,EAAOQ,GAASR,EAAM13C,EAAGC,GAEtBy3C,CACX,CAIA,SAASQ,GAAStuC,EAAG0X,EAAOC,GACxB,MAAa,UAAN3X,EAAgB0X,EAAc,QAAN1X,EAAc2X,EAAM3X,CACvD,CACA,SAASuuC,GAAiB9qB,GAAY+qB,cAAEA,GAAkB//B,GACtDgV,EAAW+qB,cAAkC,SAAlBA,EAAqC,IAAV//B,EAAc,IAAO,EAAI+/B,CACnF,CACA,MAAMC,WAAsB/K,GACxBC,UAAY,MACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,MACjBiK,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EACT/qB,WAAY,CACRhG,QAAS,CACLte,KAAM,SACNkkB,WAAY,CACR,IACA,IACA,OACA,QACA,aAKnBkgB,iBAAmB,CACZ1hB,OAAQ,CACJ4sB,QAAS,CACLtvC,KAAM,WACNglB,QAAQ,EACRK,KAAM,CACFL,QAAQ,IAGhBuqB,QAAS,CACLvvC,KAAM,SACNilB,aAAa,KAI5B,kBAAAijB,CAAmB1tB,EAAMviB,EAAMkgB,EAAOyC,GAC/B,OAAOuzB,GAAsB3zB,EAAMviB,EAAMkgB,EAAOyC,EACnD,CACJ,cAAAotB,CAAextB,EAAMviB,EAAMkgB,EAAOyC,GAC3B,OAAOuzB,GAAsB3zB,EAAMviB,EAAMkgB,EAAOyC,EACnD,CACJ,eAAAqtB,CAAgBztB,EAAMviB,EAAMkgB,EAAOyC,GAC5B,MAAME,OAAEA,EAAM+nB,OAAGA,GAAYroB,GACvB+tB,SAAEA,EAAU,IAAMC,SAAAA,EAAU,KAAS1oC,KAAK0yB,SAC1CsU,EAA2B,MAAhBhsB,EAAOE,KAAeutB,EAAWC,EAC5CzB,EAA2B,MAAhBlE,EAAO7nB,KAAeutB,EAAWC,EAC5C/V,EAAS,GACf,IAAIj3B,EAAG4X,EAAMgC,EAAM/U,EACnB,IAAI7E,EAAI2c,EAAO/E,EAAO+E,EAAQyC,EAAOpf,EAAI4X,IAAQ5X,EAC7C6E,EAAMpI,EAAKuD,GACX4Z,EAAO,CAAA,EACPA,EAAK0F,EAAOE,MAAQF,EAAO4X,MAAMne,GAAiBlU,EAAKymC,GAAWtrC,GAClEi3B,EAAOt4B,KAAKwzC,GAAWp5B,GAAiBlU,EAAK0mC,GAAW3xB,EAAMytB,EAAQrnC,IAE1E,OAAOi3B,CACV,CACJ,qBAAAkW,CAAsBvyB,EAAOqM,EAAOgQ,EAAQwP,GACrCuN,MAAM7G,sBAAsBvyB,EAAOqM,EAAOgQ,EAAQwP,GAClD,MAAMoM,EAAS5b,EAAOwb,QAClBI,GAAU5rB,IAAU3iB,KAAKojC,YAAYL,SACrCzsB,EAAMtV,IAAMF,KAAKE,IAAIsV,EAAMtV,IAAKutC,EAAOvtC,KACvCsV,EAAMvV,IAAMD,KAAKC,IAAIuV,EAAMvV,IAAKwtC,EAAOxtC,KAE9C,CACJ,cAAA2oC,GACO,OAAO,CACV,CACJ,gBAAAC,CAAiBxpC,GACV,MAAMua,EAAO1a,KAAKojC,aACZpoB,OAAEA,EAAM+nB,OAAGA,GAAYroB,EACvBiY,EAAS3yB,KAAK2oC,UAAUxoC,GACxBouC,EAAS5b,EAAOwb,QAChBr1C,EAAQw1C,GAAWC,GAAU,IAAMA,EAAOl2B,MAAQ,KAAOk2B,EAAOj2B,IAAM,IAAM,GAAKyqB,EAAO8G,iBAAiBlX,EAAOoQ,EAAO7nB,OAC7H,MAAO,CACH0uB,MAAO,GAAK5uB,EAAO6uB,iBAAiBlX,EAAO3X,EAAOE,OAClDpiB,QAEP,CACD,UAAAusC,GACIrlC,KAAK+kC,qBAAsB,EAC3B2K,MAAMrK,aACOrlC,KAAKojC,YACbjB,MAAQniC,KAAK4lC,aAAazD,KAClC,CACD,MAAA5mC,CAAO2mB,GACH,MAAMxH,EAAO1a,KAAKojC,YAClBpjC,KAAKusC,eAAe7xB,EAAKviB,KAAM,EAAGuiB,EAAKviB,KAAKmD,OAAQ4mB,EACvD,CACD,cAAAqqB,CAAeoD,EAAMt3B,EAAOyC,EAAOoH,GAC/B,MAAM2kB,EAAiB,UAAT3kB,GACR/hB,MAAEA,EAAQijC,aAAaL,OAAEA,IAAe/iC,KACxCsnC,EAAOvE,EAAO6M,eACdjB,EAAa5L,EAAO8M,eACpBC,EAAQ9vC,KAAK+vC,aACb3E,cAAEA,EAAaD,eAAGA,GAAoBnrC,KAAKsrC,kBAAkBjzB,EAAO6J,GAC1E,IAAI,IAAIxmB,EAAI2c,EAAO3c,EAAI2c,EAAQyC,EAAOpf,IAAI,CACtC,MAAMi3B,EAAS3yB,KAAK2oC,UAAUjtC,GACxBs0C,EAAUnJ,GAASh1B,GAAc8gB,EAAOoQ,EAAO7nB,OAAS,CAC1DosB,OACA2I,KAAM3I,GACNtnC,KAAKkwC,yBAAyBx0C,GAC5By0C,EAAUnwC,KAAKowC,yBAAyB10C,EAAGo0C,GAC3C3N,GAASxP,EAAO0Q,SAAW,CAAA,GAAIN,EAAO7nB,MACtCkJ,EAAa,CACfuqB,aACArH,KAAM0I,EAAQ1I,KACduH,oBAAqB1M,GAASmM,GAAW3b,EAAOwb,UAAYhuC,IAAUgiC,EAAMwB,MAAQxjC,IAAUgiC,EAAMyB,QACpGlgC,EAAGirC,EAAaqB,EAAQC,KAAOE,EAAQE,OACvC77B,EAAGm6B,EAAawB,EAAQE,OAASL,EAAQC,KACzCvnB,OAAQimB,EAAawB,EAAQ96B,KAAOvU,KAAKsV,IAAI45B,EAAQ36B,MACrD6Q,MAAOyoB,EAAa7tC,KAAKsV,IAAI45B,EAAQ36B,MAAQ86B,EAAQ96B,MAErD81B,IACA/mB,EAAW3rB,QAAU2yC,GAAiBprC,KAAKoqC,0BAA0B1uC,EAAGi0C,EAAKj0C,GAAG2oB,OAAS,SAAWnC,IAExG,MAAMzpB,EAAU2rB,EAAW3rB,SAAWk3C,EAAKj0C,GAAGjD,QAC9C+1C,GAAiBpqB,EAAY3rB,EAAS0pC,EAAOhiC,GAC7C+uC,GAAiB9qB,EAAY3rB,EAASq3C,EAAM1gC,OAC5CpP,KAAK0rC,cAAciE,EAAKj0C,GAAIA,EAAG0oB,EAAYlC,EAC9C,CACJ,CACJ,UAAAouB,CAAWj3B,EAAMgxB,GACV,MAAMrvB,OAAEA,GAAYhb,KAAKojC,YACnBpB,EAAWhnB,EAAOioB,wBAAwBjjC,KAAKykC,OAAO5mC,QAAQ6c,GAAOA,EAAKyoB,WAAW1qC,QAAQ82C,UAC7F/M,EAAUxnB,EAAOviB,QAAQ+pC,QACzBE,EAAS,GACT6N,EAAY71B,IACd,MAAMiY,EAASjY,EAAKyoB,WAAWwF,UAAU0B,GACnCn5B,EAAMyhB,GAAUA,EAAOjY,EAAKqoB,OAAO7nB,MACzC,GAAIrJ,GAAcX,IAAQ0F,MAAM1F,GAC5B,OAAO,CACV,EAEL,IAAK,MAAMwJ,KAAQsnB,EACf,SAAkB1kC,IAAd+sC,IAA2BkG,EAAS71B,QAGxB,IAAZ8nB,IAAqD,IAAhCE,EAAO9oC,QAAQ8gB,EAAKynB,aAA6B7kC,IAAZklC,QAAwCllC,IAAfod,EAAKynB,QACxFO,EAAOroC,KAAKqgB,EAAKynB,OAEjBznB,EAAKva,QAAUkZ,GACf,MAMR,OAHKqpB,EAAOpnC,QACRonC,EAAOroC,UAAKiD,GAETolC,CACV,CACJ,cAAA8N,CAAerwC,GACR,OAAOH,KAAKswC,gBAAWhzC,EAAW6C,GAAO7E,MAC5C,CACJ,cAAAm1C,CAAeh9B,EAAc1b,EAAMsyC,GAC5B,MAAM3H,EAAS1iC,KAAKswC,WAAW78B,EAAc42B,GACvClqC,OAAiB7C,IAATvF,EAAqB2qC,EAAO9oC,QAAQ7B,IAAS,EAC3D,OAAkB,IAAXoI,EAAeuiC,EAAOpnC,OAAS,EAAI6E,CAC7C,CACJ,SAAA4vC,GACO,MAAM3kB,EAAOprB,KAAKvH,QACZiiB,EAAO1a,KAAKojC,YACZpoB,EAASN,EAAKM,OACd01B,EAAS,GACf,IAAIh1C,EAAG4X,EACP,IAAI5X,EAAI,EAAG4X,EAAOoH,EAAKviB,KAAKmD,OAAQI,EAAI4X,IAAQ5X,EAC5Cg1C,EAAOr2C,KAAK2gB,EAAOM,iBAAiBtb,KAAK2oC,UAAUjtC,GAAGsf,EAAOE,MAAOxf,IAExE,MAAMi1C,EAAevlB,EAAKulB,aAE1B,MAAO,CACH3vC,IAFQ2vC,GAAgBzD,GAAqBxyB,GAG7Cg2B,SACAr4B,MAAO2C,EAAO41B,YACdt4B,IAAK0C,EAAO61B,UACZC,WAAY9wC,KAAKwwC,iBACjB7tB,MAAO3H,EACPu0B,QAASnkB,EAAKmkB,QACdngC,MAAOuhC,EAAe,EAAIvlB,EAAKikB,mBAAqBjkB,EAAKkkB,cAEhE,CACJ,wBAAAY,CAAyB/vC,GAClB,MAAQijC,aAAaL,OAAEA,EAAMwC,SAAGA,EAAWplC,MAAOsT,GAAkBhb,SAAW6uC,KAAMyJ,EAAYC,aAAAA,IAAqBhxC,KAChHixC,EAAaF,GAAa,EAC1Bpe,EAAS3yB,KAAK2oC,UAAUxoC,GACxBouC,EAAS5b,EAAOwb,QAChB+C,EAAW5C,GAAWC,GAC5B,IAGI0B,EAAM56B,EAHNvc,EAAQ65B,EAAOoQ,EAAO7nB,MACtB7C,EAAQ,EACR/c,EAASiqC,EAAWvlC,KAAKkiC,WAAWa,EAAQpQ,EAAQ4S,GAAYzsC,EAEhEwC,IAAWxC,IACXuf,EAAQ/c,EAASxC,EACjBwC,EAASxC,GAETo4C,IACAp4C,EAAQy1C,EAAON,SACf3yC,EAASizC,EAAOL,OAASK,EAAON,SAClB,IAAVn1C,GAAemd,GAAKnd,KAAWmd,GAAKs4B,EAAOL,UAC3C71B,EAAQ,GAEZA,GAASvf,GAEb,MAAMi1C,EAAcl8B,GAAck/B,IAAeG,EAAuB74B,EAAZ04B,EAC5D,IAAIzJ,EAAOvE,EAAOznB,iBAAiByyB,GAOnC,GALIkC,EADAjwC,KAAK4f,MAAMuxB,kBAAkBhxC,GACtB4iC,EAAOznB,iBAAiBjD,EAAQ/c,GAEhCgsC,EAEXjyB,EAAO46B,EAAO3I,EACVxmC,KAAKsV,IAAIf,GAAQ27B,EAAc,CAC/B37B,EApSZ,SAAiBA,EAAM0tB,EAAQkO,GAC3B,OAAa,IAAT57B,EACOY,GAAKZ,IAER0tB,EAAO8M,eAAiB,GAAK,IAAM9M,EAAO/hC,KAAOiwC,EAAa,GAAK,EAC/E,CA+RmBG,CAAQ/7B,EAAM0tB,EAAQkO,GAAcD,EACvCl4C,IAAUm4C,IACV3J,GAAQjyB,EAAO,GAEnB,MAAMg8B,EAAatO,EAAOuO,mBAAmB,GACvCC,EAAWxO,EAAOuO,mBAAmB,GACrCtwC,EAAMF,KAAKE,IAAIqwC,EAAYE,GAC3BxwC,EAAMD,KAAKC,IAAIswC,EAAYE,GACjCjK,EAAOxmC,KAAKC,IAAID,KAAKE,IAAIsmC,EAAMvmC,GAAMC,GACrCivC,EAAO3I,EAAOjyB,EACVkwB,IAAa2L,IACbve,EAAO0Q,QAAQN,EAAO7nB,MAAM2oB,cAAcpwB,GAAgBsvB,EAAOyO,iBAAiBvB,GAAQlN,EAAOyO,iBAAiBlK,GAEzH,CACD,GAAIA,IAASvE,EAAOznB,iBAAiB21B,GAAa,CAC9C,MAAMQ,EAAWx7B,GAAKZ,GAAQ0tB,EAAO2O,qBAAqBT,GAAc,EACxE3J,GAAQmK,EACRp8B,GAAQo8B,CACX,CACD,MAAO,CACHp8B,OACAiyB,OACA2I,OACAI,OAAQJ,EAAO56B,EAAO,EAE7B,CACJ,wBAAA+6B,CAAyBjwC,EAAO2vC,GACzB,MAAMntB,EAAQmtB,EAAMntB,MACdlqB,EAAUuH,KAAKvH,QACf83C,EAAW93C,EAAQ83C,SACnBoB,EAAkBn/B,GAAe/Z,EAAQk5C,gBAAiBC,KAChE,IAAIvB,EAAQh7B,EACZ,GAAIy6B,EAAMP,QAAS,CACf,MAAMuB,EAAaP,EAAWvwC,KAAKwwC,eAAerwC,GAAS2vC,EAAMgB,WAC3Dx6B,EAAiC,SAAzB7d,EAAQk4C,aAzYjC,SAAmCxwC,EAAO2vC,EAAOr3C,EAASq4C,GACvD,MAAMJ,EAASZ,EAAMY,OACfjD,EAAOiD,EAAOvwC,GACpB,IAAIg1B,EAAOh1B,EAAQ,EAAIuwC,EAAOvwC,EAAQ,GAAK,KACvCkzB,EAAOlzB,EAAQuwC,EAAOp1C,OAAS,EAAIo1C,EAAOvwC,EAAQ,GAAK,KAC3D,MAAM0xC,EAAUp5C,EAAQ42C,mBACX,OAATla,IACAA,EAAOsY,GAAiB,OAATpa,EAAgByc,EAAMx3B,IAAMw3B,EAAMz3B,MAAQgb,EAAOoa,IAEvD,OAATpa,IACAA,EAAOoa,EAAOA,EAAOtY,GAEzB,MAAM9c,EAAQo1B,GAAQA,EAAO3sC,KAAKE,IAAIm0B,EAAM9B,IAAS,EAAIwe,EAEzD,MAAO,CACHC,MAFShxC,KAAKsV,IAAIid,EAAO8B,GAAQ,EAAI0c,EAEvBf,EACd1hC,MAAO3W,EAAQ62C,cACfj3B,QAER,CAsX4D05B,CAA0B5xC,EAAO2vC,EAAOr3C,EAASq4C,GAzZ5G,SAAkC3wC,EAAO2vC,EAAOr3C,EAASq4C,GACtD,MAAMkB,EAAYv5C,EAAQk4C,aAC1B,IAAIt7B,EAAMjG,EAQV,OAPIyC,GAAcmgC,IACd38B,EAAOy6B,EAAM9uC,IAAMvI,EAAQ42C,mBAC3BjgC,EAAQ3W,EAAQ62C,gBAEhBj6B,EAAO28B,EAAYlB,EACnB1hC,EAAQ,GAEL,CACH0iC,MAAOz8B,EAAOy7B,EACd1hC,QACAiJ,MAAOy3B,EAAMY,OAAOvwC,GAASkV,EAAO,EAE5C,CA0Y2H48B,CAAyB9xC,EAAO2vC,EAAOr3C,EAASq4C,GACzJoB,EAAalyC,KAAKywC,eAAezwC,KAAKG,MAAOH,KAAKojC,YAAYjB,MAAOoO,EAAWpwC,OAAQ7C,GAC9F+yC,EAAS/5B,EAAM+B,MAAQ/B,EAAMw7B,MAAQI,EAAa57B,EAAMw7B,MAAQ,EAChEz8B,EAAOvU,KAAKE,IAAI2wC,EAAiBr7B,EAAMw7B,MAAQx7B,EAAMlH,MACjE,MACYihC,EAAS1tB,EAAMrH,iBAAiBtb,KAAK2oC,UAAUxoC,GAAOwiB,EAAMzH,MAAO/a,GACnEkV,EAAOvU,KAAKE,IAAI2wC,EAAiB7B,EAAM9uC,IAAM8uC,EAAM1gC,OAEvD,MAAO,CACHk4B,KAAM+I,EAASh7B,EAAO,EACtB46B,KAAMI,EAASh7B,EAAO,EACtBg7B,SACAh7B,OAEP,CACD,IAAA6oB,GACI,MAAMxjB,EAAO1a,KAAKojC,YACZL,EAASroB,EAAKqoB,OACdoP,EAAQz3B,EAAKviB,KACbmb,EAAO6+B,EAAM72C,OACnB,IAAII,EAAI,EACR,KAAMA,EAAI4X,IAAQ5X,EACyB,OAAnCsE,KAAK2oC,UAAUjtC,GAAGqnC,EAAO7nB,OAAmBi3B,EAAMz2C,GAAGytC,QACrDgJ,EAAMz2C,GAAGwiC,KAAKl+B,KAAK6lB,KAG9B,EAuJL,MAAMusB,WAA2B/N,GAC7BC,UAAY,WACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,MACjBpkB,UAAW,CACPqxB,eAAe,EACfC,cAAc,GAElB9tB,WAAY,CACRhG,QAAS,CACLte,KAAM,SACNkkB,WAAY,CACR,gBACA,WACA,cACA,cACA,aACA,IACA,IACA,SACA,cACA,aAIZmuB,OAAQ,MACRppB,SAAU,EACVqpB,cAAe,IACfppB,OAAQ,OACRqpB,QAAS,EACTzwB,UAAW,KAEfsiB,mBAAqB,CACjB1gB,YAAc7rB,GAAgB,YAATA,EACrB+rB,WAAa/rB,GAAgB,YAATA,IAAuBA,EAAK8rB,WAAW,gBAAkB9rB,EAAK8rB,WAAW,oBAEpGygB,iBAAmB,CACZ1M,YAAa,EACbnV,QAAS,CACLiwB,OAAQ,CACJpK,OAAQ,CACJ,cAAAqK,CAAgB/yB,GACZ,MAAMznB,EAAOynB,EAAMznB,KACnB,GAAIA,EAAKmwC,OAAOhtC,QAAUnD,EAAKgpB,SAAS7lB,OAAQ,CAC5C,MAAQgtC,QAAQpf,WAAEA,EAAa5Y,MAAAA,IAAcsP,EAAM8yB,OAAOj6C,QAC1D,OAAON,EAAKmwC,OAAO1qC,KAAI,CAACgsC,EAAOluC,KAC3B,MACMjC,EADOmmB,EAAM8mB,eAAe,GACfvD,WAAW/J,SAAS19B,GACvC,MAAO,CACHxD,KAAM0xC,EACN9d,UAAWryB,EAAMwnB,gBACjB4K,YAAapyB,EAAMynB,YACnB0xB,UAAWtiC,EACXkV,UAAW/rB,EAAMuwB,YACjBd,WAAYA,EACZigB,QAASvpB,EAAMuxB,kBAAkBz1C,GACjCyE,MAAOzE,EACV,GAER,CACD,MAAO,EACV,GAEL,OAAA6mB,CAAS/mB,EAAGq3C,EAAYH,GACpBA,EAAO9yB,MAAMkzB,qBAAqBD,EAAW1yC,OAC7CuyC,EAAO9yB,MAAMrkB,QAChB,KAIb,WAAAuU,CAAY8P,EAAOnM,GACfi8B,MAAM9vB,EAAOnM,GACbzT,KAAK+kC,qBAAsB,EAC3B/kC,KAAK+yC,iBAAcz1C,EACnB0C,KAAKgzC,iBAAc11C,EACnB0C,KAAKk3B,aAAU55B,EACf0C,KAAKm3B,aAAU75B,CAClB,CACD,UAAAgoC,GAAe,CAClB,KAAA1S,CAAMva,EAAOyC,GACN,MAAM3iB,EAAO6H,KAAK4lC,aAAaztC,KACzBuiB,EAAO1a,KAAKojC,YAClB,IAAsB,IAAlBpjC,KAAK0yB,SACLhY,EAAKO,QAAU9iB,MACZ,CACH,IAKIuD,EAAG4X,EALH2/B,EAAUv3C,IAAKvD,EAAKuD,GACxB,GAAIwW,GAAS/Z,EAAKkgB,IAAS,CACvB,MAAM7e,IAAEA,EAAK,SAAawG,KAAK0yB,SAC/BugB,EAAUv3C,IAAK+Y,GAAiBtc,EAAKuD,GAAIlC,EAC5C,CAED,IAAIkC,EAAI2c,EAAO/E,EAAO+E,EAAQyC,EAAOpf,EAAI4X,IAAQ5X,EAC7Cgf,EAAKO,QAAQvf,GAAKu3C,EAAOv3C,EAEhC,CACJ,CACJ,YAAAw3C,GACO,OAAOl8B,GAAUhX,KAAKvH,QAAQ0wB,SAAW,GAC5C,CACJ,iBAAAgqB,GACO,OAAOn8B,GAAUhX,KAAKvH,QAAQ+5C,cACjC,CACJ,mBAAAY,GACO,IAAIpyC,EAAMwU,GACNzU,GAAOyU,GACX,IAAI,IAAI9Z,EAAI,EAAGA,EAAIsE,KAAK4f,MAAMznB,KAAKgpB,SAAS7lB,SAAUI,EAClD,GAAIsE,KAAK4f,MAAMyzB,iBAAiB33C,IAAMsE,KAAK4f,MAAM8mB,eAAehrC,GAAGwE,OAASF,KAAKykC,MAAO,CACpF,MAAMtB,EAAanjC,KAAK4f,MAAM8mB,eAAehrC,GAAGynC,WAC1Cha,EAAWga,EAAW+P,eACtBV,EAAgBrP,EAAWgQ,oBACjCnyC,EAAMF,KAAKE,IAAIA,EAAKmoB,GACpBpoB,EAAMD,KAAKC,IAAIA,EAAKooB,EAAWqpB,EAClC,CAEL,MAAO,CACHrpB,SAAUnoB,EACVwxC,cAAezxC,EAAMC,EAE5B,CACJ,MAAAzF,CAAO2mB,GACA,MAAMtC,EAAQ5f,KAAK4f,OACbsqB,UAAEA,GAAetqB,EACjBlF,EAAO1a,KAAKojC,YACZkQ,EAAO54B,EAAKviB,KACZs6C,EAAUzyC,KAAKuzC,oBAAsBvzC,KAAKwzC,aAAaF,GAAQtzC,KAAKvH,QAAQg6C,QAC5EgB,EAAU3yC,KAAKC,KAAKD,KAAKE,IAAIkpC,EAAUhkB,MAAOgkB,EAAUxhB,QAAU+pB,GAAW,EAAG,GAChFF,EAASzxC,KAAKE,KDnzDNlI,ECmzDuBkH,KAAKvH,QAAQ85C,ODnzD7B7/B,ECmzDqC+gC,EDnzDR,iBAAV36C,GAAsBA,EAAM6Z,SAAS,KAAOC,WAAW9Z,GAAS,KAAOA,EAAQ4Z,GCmzDnD,GDnzDvD,IAAC5Z,EAAO4Z,ECozDrB,MAAMghC,EAAc1zC,KAAK2zC,eAAe3zC,KAAKG,QACvCqyC,cAAEA,EAAgBrpB,SAAAA,GAAcnpB,KAAKozC,uBACrCQ,OAAEA,SAASC,EAAM3c,QAAGA,EAAUC,QAAAA,GAhK5C,SAA2BhO,EAAUqpB,EAAeD,GAChD,IAAIqB,EAAS,EACTC,EAAS,EACT3c,EAAU,EACVC,EAAU,EACd,GAAIqb,EAAgBh9B,GAAK,CACrB,MAAMs+B,EAAa3qB,EACb4qB,EAAWD,EAAatB,EACxBwB,EAASlzC,KAAKsc,IAAI02B,GAClBG,EAASnzC,KAAKqb,IAAI23B,GAClBI,EAAOpzC,KAAKsc,IAAI22B,GAChBI,EAAOrzC,KAAKqb,IAAI43B,GAChBK,EAAU,CAACx8B,EAAO7gB,EAAGC,IAAIohB,GAAcR,EAAOk8B,EAAYC,GAAU,GAAQ,EAAIjzC,KAAKC,IAAIhK,EAAGA,EAAIw7C,EAAQv7C,EAAGA,EAAIu7C,GAC/G8B,EAAU,CAACz8B,EAAO7gB,EAAGC,IAAIohB,GAAcR,EAAOk8B,EAAYC,GAAU,IAAS,EAAIjzC,KAAKE,IAAIjK,EAAGA,EAAIw7C,EAAQv7C,EAAGA,EAAIu7C,GAChH+B,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQv+B,GAASo+B,EAAQE,GAChCK,EAAOH,EAAQ9+B,GAAIy+B,EAAQE,GAC3BO,EAAOJ,EAAQ9+B,GAAKM,GAASo+B,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBvd,IAAYod,EAAOE,GAAQ,EAC3Brd,IAAYod,EAAOE,GAAQ,CAC9B,CACD,MAAO,CACHb,SACAC,SACA3c,UACAC,UAER,CAmIyDud,CAAkBvrB,EAAUqpB,EAAeD,GACtF1lB,GAAYqd,EAAUhkB,MAAQusB,GAAWmB,EACzC9b,GAAaoS,EAAUxhB,OAAS+pB,GAAWoB,EAC3Cc,EAAY7zC,KAAKC,IAAID,KAAKE,IAAI6rB,EAAUiL,GAAa,EAAG,GACxDkb,EAAcvgC,GAAYzS,KAAKvH,QAAQ2wB,OAAQurB,GAE/CC,GAAgB5B,EADFlyC,KAAKC,IAAIiyC,EAAcT,EAAQ,IACAvyC,KAAK60C,gCACxD70C,KAAKk3B,QAAUA,EAAU8b,EACzBhzC,KAAKm3B,QAAUA,EAAU6b,EACzBt4B,EAAKo6B,MAAQ90C,KAAK+0C,iBAClB/0C,KAAKgzC,YAAcA,EAAc4B,EAAe50C,KAAKg1C,qBAAqBh1C,KAAKG,OAC/EH,KAAK+yC,YAAcjyC,KAAKC,IAAIf,KAAKgzC,YAAc4B,EAAelB,EAAa,GAC3E1zC,KAAKusC,eAAe+G,EAAM,EAAGA,EAAKh4C,OAAQ4mB,EAC7C,CACJ,cAAA+yB,CAAev5C,EAAGmrC,GACX,MAAMzb,EAAOprB,KAAKvH,QACZiiB,EAAO1a,KAAKojC,YACZoP,EAAgBxyC,KAAKmzC,oBAC3B,OAAItM,GAASzb,EAAKpK,UAAUqxB,gBAAkBryC,KAAK4f,MAAMuxB,kBAAkBz1C,IAA0B,OAApBgf,EAAKO,QAAQvf,IAAegf,EAAKviB,KAAKuD,GAAGytC,OAC/G,EAEJnpC,KAAKk1C,uBAAuBx6B,EAAKO,QAAQvf,GAAK82C,EAAgBh9B,GACxE,CACD,cAAA+2B,CAAe+G,EAAMj7B,EAAOyC,EAAOoH,GAC/B,MAAM2kB,EAAiB,UAAT3kB,EACRtC,EAAQ5f,KAAK4f,MACbsqB,EAAYtqB,EAAMsqB,UAElBiL,EADOv1B,EAAMnnB,QACQuoB,UACrBo0B,GAAWlL,EAAUllB,KAAOklB,EAAUplB,OAAS,EAC/CuwB,GAAWnL,EAAUrlB,IAAMqlB,EAAUnlB,QAAU,EAC/CutB,EAAezL,GAASsO,EAAc7C,aACtCS,EAAcT,EAAe,EAAItyC,KAAK+yC,YACtCC,EAAcV,EAAe,EAAItyC,KAAKgzC,aACtC5H,cAAEA,EAAaD,eAAGA,GAAoBnrC,KAAKsrC,kBAAkBjzB,EAAO6J,GAC1E,IACIxmB,EADAo4C,EAAa9zC,KAAKkzC,eAEtB,IAAIx3C,EAAI,EAAGA,EAAI2c,IAAS3c,EACpBo4C,GAAc9zC,KAAKi1C,eAAev5C,EAAGmrC,GAEzC,IAAInrC,EAAI2c,EAAO3c,EAAI2c,EAAQyC,IAASpf,EAAE,CAClC,MAAM82C,EAAgBxyC,KAAKi1C,eAAev5C,EAAGmrC,GACvCnd,EAAM4pB,EAAK53C,GACX0oB,EAAa,CACf1gB,EAAG0xC,EAAUp1C,KAAKk3B,QAClB1iB,EAAG6gC,EAAUr1C,KAAKm3B,QAClB2c,aACAC,SAAUD,EAAatB,EACvBA,gBACAQ,cACAD,eAEA5H,IACA/mB,EAAW3rB,QAAU2yC,GAAiBprC,KAAKoqC,0BAA0B1uC,EAAGguB,EAAIrF,OAAS,SAAWnC,IAEpG4xB,GAActB,EACdxyC,KAAK0rC,cAAchiB,EAAKhuB,EAAG0oB,EAAYlC,EAC1C,CACJ,CACD,cAAA6yB,GACI,MAAMr6B,EAAO1a,KAAKojC,YACZkS,EAAW56B,EAAKviB,KACtB,IACIuD,EADAo5C,EAAQ,EAEZ,IAAIp5C,EAAI,EAAGA,EAAI45C,EAASh6C,OAAQI,IAAI,CAChC,MAAM5C,EAAQ4hB,EAAKO,QAAQvf,GACb,OAAV5C,GAAmB8d,MAAM9d,KAAUkH,KAAK4f,MAAMuxB,kBAAkBz1C,IAAO45C,EAAS55C,GAAGytC,SACnF2L,GAASh0C,KAAKsV,IAAItd,GAEzB,CACD,OAAOg8C,CACV,CACD,sBAAAI,CAAuBp8C,GACnB,MAAMg8C,EAAQ90C,KAAKojC,YAAY0R,MAC/B,OAAIA,EAAQ,IAAMl+B,MAAM9d,GACb0c,IAAO1U,KAAKsV,IAAItd,GAASg8C,GAE7B,CACV,CACD,gBAAAnL,CAAiBxpC,GACb,MAAMua,EAAO1a,KAAKojC,YACZxjB,EAAQ5f,KAAK4f,MACb0oB,EAAS1oB,EAAMznB,KAAKmwC,QAAU,GAC9BxvC,EAAQ6lB,GAAajE,EAAKO,QAAQ9a,GAAQyf,EAAMnnB,QAAQomB,QAC9D,MAAO,CACH+qB,MAAOtB,EAAOnoC,IAAU,GACxBrH,QAEP,CACD,iBAAAy6C,CAAkBD,GACd,IAAIvyC,EAAM,EACV,MAAM6e,EAAQ5f,KAAK4f,MACnB,IAAIlkB,EAAG4X,EAAMoH,EAAMyoB,EAAY1qC,EAC/B,IAAK66C,EACD,IAAI53C,EAAI,EAAG4X,EAAOsM,EAAMznB,KAAKgpB,SAAS7lB,OAAQI,EAAI4X,IAAQ5X,EACtD,GAAIkkB,EAAMyzB,iBAAiB33C,GAAI,CAC3Bgf,EAAOkF,EAAM8mB,eAAehrC,GAC5B43C,EAAO54B,EAAKviB,KACZgrC,EAAazoB,EAAKyoB,WAClB,KACH,CAGT,IAAKmQ,EACD,OAAO,EAEX,IAAI53C,EAAI,EAAG4X,EAAOggC,EAAKh4C,OAAQI,EAAI4X,IAAQ5X,EACvCjD,EAAU0qC,EAAWiH,0BAA0B1uC,GACnB,UAAxBjD,EAAQ88C,cACRx0C,EAAMD,KAAKC,IAAIA,EAAKtI,EAAQuxB,aAAe,EAAGvxB,EAAQ+8C,kBAAoB,IAGlF,OAAOz0C,CACV,CACD,YAAAyyC,CAAaF,GACT,IAAIvyC,EAAM,EACV,IAAI,IAAIrF,EAAI,EAAG4X,EAAOggC,EAAKh4C,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC7C,MAAMjD,EAAUuH,KAAKoqC,0BAA0B1uC,GAC/CqF,EAAMD,KAAKC,IAAIA,EAAKtI,EAAQysB,QAAU,EAAGzsB,EAAQg9C,aAAe,EACnE,CACD,OAAO10C,CACV,CACJ,oBAAAi0C,CAAqBvhC,GACd,IAAIiiC,EAAmB,EACvB,IAAI,IAAIh6C,EAAI,EAAGA,EAAI+X,IAAgB/X,EAC3BsE,KAAK4f,MAAMyzB,iBAAiB33C,KAC5Bg6C,GAAoB11C,KAAK2zC,eAAej4C,IAGhD,OAAOg6C,CACV,CACJ,cAAA/B,CAAelgC,GACR,OAAO3S,KAAKC,IAAIyR,GAAexS,KAAK4f,MAAMznB,KAAKgpB,SAAS1N,GAAclD,OAAQ,GAAI,EACrF,CACJ,6BAAAskC,GACO,OAAO70C,KAAKg1C,qBAAqBh1C,KAAK4f,MAAMznB,KAAKgpB,SAAS7lB,SAAW,CACxE,EA6GL,MAAMq6C,WAA4BtR,GAC9BC,UAAY,YACfA,gBAAkB,CACXc,gBAAiB,MACjBpkB,UAAW,CACPqxB,eAAe,EACfC,cAAc,GAElB9tB,WAAY,CACRhG,QAAS,CACLte,KAAM,SACNkkB,WAAY,CACR,IACA,IACA,aACA,WACA,cACA,iBAIZpC,UAAW,IACX8xB,WAAY,GAEnBxP,iBAAmB,CACZ1M,YAAa,EACbnV,QAAS,CACLiwB,OAAQ,CACJpK,OAAQ,CACJ,cAAAqK,CAAgB/yB,GACZ,MAAMznB,EAAOynB,EAAMznB,KACnB,GAAIA,EAAKmwC,OAAOhtC,QAAUnD,EAAKgpB,SAAS7lB,OAAQ,CAC5C,MAAQgtC,QAAQpf,WAAEA,EAAa5Y,MAAAA,IAAcsP,EAAM8yB,OAAOj6C,QAC1D,OAAON,EAAKmwC,OAAO1qC,KAAI,CAACgsC,EAAOluC,KAC3B,MACMjC,EADOmmB,EAAM8mB,eAAe,GACfvD,WAAW/J,SAAS19B,GACvC,MAAO,CACHxD,KAAM0xC,EACN9d,UAAWryB,EAAMwnB,gBACjB4K,YAAapyB,EAAMynB,YACnB0xB,UAAWtiC,EACXkV,UAAW/rB,EAAMuwB,YACjBd,WAAYA,EACZigB,QAASvpB,EAAMuxB,kBAAkBz1C,GACjCyE,MAAOzE,EACV,GAER,CACD,MAAO,EACV,GAEL,OAAA6mB,CAAS/mB,EAAGq3C,EAAYH,GACpBA,EAAO9yB,MAAMkzB,qBAAqBD,EAAW1yC,OAC7CuyC,EAAO9yB,MAAMrkB,QAChB,IAGTqnB,OAAQ,CACJ1gB,EAAG,CACChC,KAAM,eACN01C,WAAY,CACR3wB,SAAS,GAEbE,aAAa,EACbI,KAAM,CACFswB,UAAU,GAEdC,YAAa,CACT7wB,SAAS,GAEb6uB,WAAY,KAIxB,WAAAhkC,CAAY8P,EAAOnM,GACfi8B,MAAM9vB,EAAOnM,GACbzT,KAAK+yC,iBAAcz1C,EACnB0C,KAAKgzC,iBAAc11C,CACtB,CACD,gBAAAqsC,CAAiBxpC,GACb,MAAMua,EAAO1a,KAAKojC,YACZxjB,EAAQ5f,KAAK4f,MACb0oB,EAAS1oB,EAAMznB,KAAKmwC,QAAU,GAC9BxvC,EAAQ6lB,GAAajE,EAAKO,QAAQ9a,GAAO+B,EAAG0d,EAAMnnB,QAAQomB,QAChE,MAAO,CACH+qB,MAAOtB,EAAOnoC,IAAU,GACxBrH,QAEP,CACD,eAAAqvC,CAAgBztB,EAAMviB,EAAMkgB,EAAOyC,GAC/B,OAAO2X,GAA4BsjB,KAAK/1C,KAAjCyyB,CAAuC/X,EAAMviB,EAAMkgB,EAAOyC,EACpE,CACD,MAAAvf,CAAO2mB,GACH,MAAMoxB,EAAOtzC,KAAKojC,YAAYjrC,KAC9B6H,KAAKg2C,gBACLh2C,KAAKusC,eAAe+G,EAAM,EAAGA,EAAKh4C,OAAQ4mB,EAC7C,CACJ,SAAA8mB,GACO,MAAMtuB,EAAO1a,KAAKojC,YACZ9sB,EAAQ,CACVtV,IAAKoR,OAAOuD,kBACZ5U,IAAKqR,OAAOi3B,mBAahB,OAXA3uB,EAAKviB,KAAKxB,SAAQ,CAACmB,EAASqI,KACxB,MAAMwyB,EAAS3yB,KAAK2oC,UAAUxoC,GAAO+B,GAChC0U,MAAM+b,IAAW3yB,KAAK4f,MAAMuxB,kBAAkBhxC,KAC3CwyB,EAASrc,EAAMtV,MACfsV,EAAMtV,IAAM2xB,GAEZA,EAASrc,EAAMvV,MACfuV,EAAMvV,IAAM4xB,GAEnB,IAEErc,CACV,CACJ,aAAA0/B,GACO,MAAMp2B,EAAQ5f,KAAK4f,MACbsqB,EAAYtqB,EAAMsqB,UAClB9e,EAAOxL,EAAMnnB,QACbw9C,EAAUn1C,KAAKE,IAAIkpC,EAAUplB,MAAQolB,EAAUllB,KAAMklB,EAAUnlB,OAASmlB,EAAUrlB,KAClFmuB,EAAclyC,KAAKC,IAAIk1C,EAAU,EAAG,GAEpCrB,GAAgB5B,EADFlyC,KAAKC,IAAIqqB,EAAK8qB,iBAAmBlD,EAAc,IAAM5nB,EAAK8qB,iBAAmB,EAAG,IACjDt2B,EAAMu2B,yBACzDn2C,KAAKgzC,YAAcA,EAAc4B,EAAe50C,KAAKG,MACrDH,KAAK+yC,YAAc/yC,KAAKgzC,YAAc4B,CACzC,CACD,cAAArI,CAAe+G,EAAMj7B,EAAOyC,EAAOoH,GAC/B,MAAM2kB,EAAiB,UAAT3kB,EACRtC,EAAQ5f,KAAK4f,MAEbu1B,EADOv1B,EAAMnnB,QACQuoB,UACrB2B,EAAQ3iB,KAAKojC,YAAYqD,OACzB2O,EAAUzyB,EAAMyzB,QAChBf,EAAU1yB,EAAM0zB,QAChBC,EAAoB3zB,EAAM4zB,cAAc,GAAK,GAAMhhC,GACzD,IACI7Z,EADAkc,EAAQ0+B,EAEZ,MAAME,EAAe,IAAMx2C,KAAKy2C,uBAChC,IAAI/6C,EAAI,EAAGA,EAAI2c,IAAS3c,EACpBkc,GAAS5X,KAAK02C,cAAch7C,EAAGwmB,EAAMs0B,GAEzC,IAAI96C,EAAI2c,EAAO3c,EAAI2c,EAAQyC,EAAOpf,IAAI,CAClC,MAAMguB,EAAM4pB,EAAK53C,GACjB,IAAIo4C,EAAal8B,EACbm8B,EAAWn8B,EAAQ5X,KAAK02C,cAAch7C,EAAGwmB,EAAMs0B,GAC/CxD,EAAcpzB,EAAMuxB,kBAAkBz1C,GAAKinB,EAAMg0B,8BAA8B32C,KAAK2oC,UAAUjtC,GAAGwG,GAAK,EAC1G0V,EAAQm8B,EACJlN,IACIsO,EAAc7C,eACdU,EAAc,GAEdmC,EAAc9C,gBACdyB,EAAaC,EAAWuC,IAGhC,MAAMlyB,EAAa,CACf1gB,EAAG0xC,EACH5gC,EAAG6gC,EACHtC,YAAa,EACbC,cACAc,aACAC,WACAt7C,QAASuH,KAAKoqC,0BAA0B1uC,EAAGguB,EAAIrF,OAAS,SAAWnC,IAEvEliB,KAAK0rC,cAAchiB,EAAKhuB,EAAG0oB,EAAYlC,EAC1C,CACJ,CACD,oBAAAu0B,GACI,MAAM/7B,EAAO1a,KAAKojC,YAClB,IAAItoB,EAAQ,EAMZ,OALAJ,EAAKviB,KAAKxB,SAAQ,CAACmB,EAASqI,MACnByW,MAAM5W,KAAK2oC,UAAUxoC,GAAO+B,IAAMlC,KAAK4f,MAAMuxB,kBAAkBhxC,IAChE2a,GACH,IAEEA,CACV,CACJ,aAAA47B,CAAcv2C,EAAO+hB,EAAMs0B,GACpB,OAAOx2C,KAAK4f,MAAMuxB,kBAAkBhxC,GAAS6W,GAAUhX,KAAKoqC,0BAA0BjqC,EAAO+hB,GAAMtK,OAAS4+B,GAAgB,CAC/H,EAsNL,IAAII,GAA2BrgD,OAAOu0C,OAAO,CAC7CvxC,UAAW,KACX61C,cAAeA,GACfyH,iBAx5BA,cAA+BxS,GAC3BC,UAAY,SACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,QACjB5gB,WAAY,CACRhG,QAAS,CACLte,KAAM,SACNkkB,WAAY,CACR,IACA,IACA,cACA,aAKnBkgB,iBAAmB,CACZ1hB,OAAQ,CACJlf,EAAG,CACCxD,KAAM,UAEVsU,EAAG,CACCtU,KAAM,YAIlB,UAAAmlC,GACIrlC,KAAK+kC,qBAAsB,EAC3B2K,MAAMrK,YACT,CACJ,kBAAA+C,CAAmB1tB,EAAMviB,EAAMkgB,EAAOyC,GAC/B,MAAM6X,EAAS+c,MAAMtH,mBAAmB1tB,EAAMviB,EAAMkgB,EAAOyC,GAC3D,IAAI,IAAIpf,EAAI,EAAGA,EAAIi3B,EAAOr3B,OAAQI,IAC9Bi3B,EAAOj3B,GAAGyyC,QAAUnuC,KAAKoqC,0BAA0B1uC,EAAI2c,GAAO+Q,OAElE,OAAOuJ,CACV,CACJ,cAAAuV,CAAextB,EAAMviB,EAAMkgB,EAAOyC,GAC3B,MAAM6X,EAAS+c,MAAMxH,eAAextB,EAAMviB,EAAMkgB,EAAOyC,GACvD,IAAI,IAAIpf,EAAI,EAAGA,EAAIi3B,EAAOr3B,OAAQI,IAAI,CAClC,MAAM4Z,EAAOnd,EAAKkgB,EAAQ3c,GAC1Bi3B,EAAOj3B,GAAGyyC,QAAU37B,GAAe8C,EAAK,GAAItV,KAAKoqC,0BAA0B1uC,EAAI2c,GAAO+Q,OACzF,CACD,OAAOuJ,CACV,CACJ,eAAAwV,CAAgBztB,EAAMviB,EAAMkgB,EAAOyC,GAC5B,MAAM6X,EAAS+c,MAAMvH,gBAAgBztB,EAAMviB,EAAMkgB,EAAOyC,GACxD,IAAI,IAAIpf,EAAI,EAAGA,EAAIi3B,EAAOr3B,OAAQI,IAAI,CAClC,MAAM4Z,EAAOnd,EAAKkgB,EAAQ3c,GAC1Bi3B,EAAOj3B,GAAGyyC,QAAU37B,GAAe8C,GAAQA,EAAKpT,IAAMoT,EAAKpT,EAAGlC,KAAKoqC,0BAA0B1uC,EAAI2c,GAAO+Q,OAC3G,CACD,OAAOuJ,CACV,CACJ,cAAA+W,GACO,MAAMvxC,EAAO6H,KAAKojC,YAAYjrC,KAC9B,IAAI4I,EAAM,EACV,IAAI,IAAIrF,EAAIvD,EAAKmD,OAAS,EAAGI,GAAK,IAAKA,EACnCqF,EAAMD,KAAKC,IAAIA,EAAK5I,EAAKuD,GAAG2Z,KAAKrV,KAAKoqC,0BAA0B1uC,IAAM,GAE1E,OAAOqF,EAAM,GAAKA,CACrB,CACJ,gBAAA4oC,CAAiBxpC,GACV,MAAMua,EAAO1a,KAAKojC,YACZkF,EAAStoC,KAAK4f,MAAMznB,KAAKmwC,QAAU,IACnC9sB,OAAEA,EAAMC,OAAGA,GAAYf,EACvBiY,EAAS3yB,KAAK2oC,UAAUxoC,GACxBuD,EAAI8X,EAAOquB,iBAAiBlX,EAAOjvB,GACnC8Q,EAAIiH,EAAOouB,iBAAiBlX,EAAOne,GACnCtS,EAAIywB,EAAOwb,QACjB,MAAO,CACHvE,MAAOtB,EAAOnoC,IAAU,GACxBrH,MAAO,IAAM4K,EAAI,KAAO8Q,GAAKtS,EAAI,KAAOA,EAAI,IAAM,IAEzD,CACD,MAAA3G,CAAO2mB,GACH,MAAMvH,EAAS3a,KAAKojC,YAAYjrC,KAChC6H,KAAKusC,eAAe5xB,EAAQ,EAAGA,EAAOrf,OAAQ4mB,EACjD,CACD,cAAAqqB,CAAe5xB,EAAQtC,EAAOyC,EAAOoH,GACjC,MAAM2kB,EAAiB,UAAT3kB,GACRlH,OAAEA,EAAS+nB,OAAAA,GAAY/iC,KAAKojC,aAC5BgI,cAAEA,EAAaD,eAAGA,GAAoBnrC,KAAKsrC,kBAAkBjzB,EAAO6J,GACpEohB,EAAQtoB,EAAOE,KACfqoB,EAAQR,EAAO7nB,KACrB,IAAI,IAAIxf,EAAI2c,EAAO3c,EAAI2c,EAAQyC,EAAOpf,IAAI,CACtC,MAAMyuB,EAAQxP,EAAOjf,GACfi3B,GAAUkU,GAAS7mC,KAAK2oC,UAAUjtC,GAClC0oB,EAAa,CAAA,EACbsQ,EAAStQ,EAAWkf,GAASuD,EAAQ7rB,EAAOs2B,mBAAmB,IAAOt2B,EAAOM,iBAAiBqX,EAAO2Q,IACrG3O,EAASvQ,EAAWmf,GAASsD,EAAQ9D,EAAO6M,eAAiB7M,EAAOznB,iBAAiBqX,EAAO4Q,IAClGnf,EAAW2O,KAAOnc,MAAM8d,IAAW9d,MAAM+d,GACrCwW,IACA/mB,EAAW3rB,QAAU2yC,GAAiBprC,KAAKoqC,0BAA0B1uC,EAAGyuB,EAAM9F,OAAS,SAAWnC,GAC9F2kB,IACAziB,EAAW3rB,QAAQ2wB,OAAS,IAGpCppB,KAAK0rC,cAAcvhB,EAAOzuB,EAAG0oB,EAAYlC,EAC5C,CACJ,CACJ,yBAAAkoB,CAA0BjqC,EAAO+hB,GAC1B,MAAMyQ,EAAS3yB,KAAK2oC,UAAUxoC,GAC9B,IAAIqf,EAASkwB,MAAMtF,0BAA0BjqC,EAAO+hB,GAChD1C,EAAO6hB,UACP7hB,EAASjpB,OAAOP,OAAO,CAAA,EAAIwpB,EAAQ,CAC/B6hB,SAAS,KAGjB,MAAMjY,EAAS5J,EAAO4J,OAKtB,MAJa,WAATlH,IACA1C,EAAO4J,OAAS,GAEpB5J,EAAO4J,QAAU5W,GAAemgB,GAAUA,EAAOwb,QAAS/kB,GACnD5J,CACV,GAsyBL4yB,mBAAoBA,GACpB0E,eAzfA,cAA6BzS,GACzBC,UAAY,OACfA,gBAAkB,CACXa,mBAAoB,OACpBC,gBAAiB,QACjBviB,UAAU,EACVoS,UAAU,GAEjBqP,iBAAmB,CACZ1hB,OAAQ,CACJ4sB,QAAS,CACLtvC,KAAM,YAEVuvC,QAAS,CACLvvC,KAAM,YAIlB,UAAAmlC,GACIrlC,KAAK+kC,qBAAsB,EAC3B/kC,KAAKglC,oBAAqB,EAC1B0K,MAAMrK,YACT,CACD,MAAA9pC,CAAO2mB,GACH,MAAMxH,EAAO1a,KAAKojC,aACVuC,QAASxa,EAAOhzB,KAAMwiB,EAAS,GAAKo8B,SAAAA,GAAcr8B,EACpDE,EAAqB5a,KAAK4f,MAAMyrB,oBACtC,IAAIhzB,MAAEA,EAAKyC,MAAGA,GAAWL,GAAiCC,EAAMC,EAAQC,GACxE5a,KAAK6kC,WAAaxsB,EAClBrY,KAAK8kC,WAAahqB,EACdS,GAAoBb,KACpBrC,EAAQ,EACRyC,EAAQH,EAAOrf,QAEnB6vB,EAAK4Q,OAAS/7B,KAAK4f,MACnBuL,EAAK+Q,cAAgBl8B,KAAKG,MAC1BgrB,EAAK6rB,aAAeD,EAASC,WAC7B7rB,EAAKxQ,OAASA,EACd,MAAMliB,EAAUuH,KAAKmqC,6BAA6BjoB,GAC7CliB,KAAKvH,QAAQoqB,WACdpqB,EAAQuxB,YAAc,GAE1BvxB,EAAQuiC,QAAUh7B,KAAKvH,QAAQuiC,QAC/Bh7B,KAAK0rC,cAAcvgB,OAAM7tB,EAAW,CAChC25C,UAAWr8B,EACXniB,WACDypB,GACHliB,KAAKusC,eAAe5xB,EAAQtC,EAAOyC,EAAOoH,EAC7C,CACD,cAAAqqB,CAAe5xB,EAAQtC,EAAOyC,EAAOoH,GACjC,MAAM2kB,EAAiB,UAAT3kB,GACRlH,OAAEA,EAAM+nB,OAAGA,EAASwC,SAAAA,EAAWwR,SAAAA,GAAc/2C,KAAKojC,aAClDgI,cAAEA,EAAaD,eAAGA,GAAoBnrC,KAAKsrC,kBAAkBjzB,EAAO6J,GACpEohB,EAAQtoB,EAAOE,KACfqoB,EAAQR,EAAO7nB,MACf+Z,SAAEA,EAAW+F,QAAAA,GAAah7B,KAAKvH,QAC/By+C,EAAevgC,GAASse,GAAYA,EAAW7iB,OAAOuD,kBACtDwhC,EAAen3C,KAAK4f,MAAMyrB,qBAAuBxE,GAAkB,SAAT3kB,EAC1D5J,EAAMD,EAAQyC,EACds8B,EAAcz8B,EAAOrf,OAC3B,IAAI+7C,EAAah/B,EAAQ,GAAKrY,KAAK2oC,UAAUtwB,EAAQ,GACrD,IAAI,IAAI3c,EAAI,EAAGA,EAAI07C,IAAe17C,EAAE,CAChC,MAAMyuB,EAAQxP,EAAOjf,GACf0oB,EAAa+yB,EAAehtB,EAAQ,GAC1C,GAAIzuB,EAAI2c,GAAS3c,GAAK4c,EAAK,CACvB8L,EAAW2O,MAAO,EAClB,QACH,CACD,MAAMJ,EAAS3yB,KAAK2oC,UAAUjtC,GACxB47C,EAAWzlC,GAAc8gB,EAAO4Q,IAChC7O,EAAStQ,EAAWkf,GAAStoB,EAAOM,iBAAiBqX,EAAO2Q,GAAQ5nC,GACpEi5B,EAASvQ,EAAWmf,GAASsD,GAASyQ,EAAWvU,EAAO6M,eAAiB7M,EAAOznB,iBAAiBiqB,EAAWvlC,KAAKkiC,WAAWa,EAAQpQ,EAAQ4S,GAAY5S,EAAO4Q,GAAQ7nC,GAC7K0oB,EAAW2O,KAAOnc,MAAM8d,IAAW9d,MAAM+d,IAAW2iB,EACpDlzB,EAAW2a,KAAOrjC,EAAI,GAAKoF,KAAKsV,IAAIuc,EAAO2Q,GAAS+T,EAAW/T,IAAU4T,EACrElc,IACA5W,EAAWuO,OAASA,EACpBvO,EAAWkmB,IAAMyM,EAAS5+C,KAAKuD,IAE/ByvC,IACA/mB,EAAW3rB,QAAU2yC,GAAiBprC,KAAKoqC,0BAA0B1uC,EAAGyuB,EAAM9F,OAAS,SAAWnC,IAEjGi1B,GACDn3C,KAAK0rC,cAAcvhB,EAAOzuB,EAAG0oB,EAAYlC,GAE7Cm1B,EAAa1kB,CAChB,CACJ,CACJ,cAAA+W,GACO,MAAMhvB,EAAO1a,KAAKojC,YACZuC,EAAUjrB,EAAKirB,QACf5f,EAAS4f,EAAQltC,SAAWktC,EAAQltC,QAAQuxB,aAAe,EAC3D7xB,EAAOuiB,EAAKviB,MAAQ,GAC1B,IAAKA,EAAKmD,OACN,OAAOyqB,EAEX,MAAMmN,EAAa/6B,EAAK,GAAGkd,KAAKrV,KAAKoqC,0BAA0B,IACzDmN,EAAYp/C,EAAKA,EAAKmD,OAAS,GAAG+Z,KAAKrV,KAAKoqC,0BAA0BjyC,EAAKmD,OAAS,IAC1F,OAAOwF,KAAKC,IAAIglB,EAAQmN,EAAYqkB,GAAa,CACpD,CACD,IAAArZ,GACI,MAAMxjB,EAAO1a,KAAKojC,YAClB1oB,EAAKirB,QAAQ6R,oBAAoBx3C,KAAK4f,MAAMsqB,UAAWxvB,EAAKM,OAAOE,MACnEw0B,MAAMxR,MACT,GAmZLuZ,cAzNA,cAA4BrF,GACxB9N,UAAY,MACfA,gBAAkB,CACXiO,OAAQ,EACRppB,SAAU,EACVqpB,cAAe,IACfppB,OAAQ,SAoNhBusB,oBAAqBA,GACrB+B,gBAjNA,cAA8BrT,GAC1BC,UAAY,QACfA,gBAAkB,CACXa,mBAAoB,OACpBC,gBAAiB,QACjBpjB,UAAW,IACXa,UAAU,EACVtB,SAAU,CACN4J,KAAM,CACF9sB,KAAM,WAIrBimC,iBAAmB,CACZ1M,YAAa,EACbhV,OAAQ,CACJ1gB,EAAG,CACChC,KAAM,kBAIrB,gBAAAypC,CAAiBxpC,GACV,MAAM4iC,EAAS/iC,KAAKojC,YAAYL,OAC1BpQ,EAAS3yB,KAAK2oC,UAAUxoC,GAC9B,MAAO,CACHypC,MAAO7G,EAAOwF,YAAYpoC,GAC1BrH,MAAO,GAAKiqC,EAAO8G,iBAAiBlX,EAAOoQ,EAAO7nB,OAEzD,CACD,eAAAitB,CAAgBztB,EAAMviB,EAAMkgB,EAAOyC,GAC/B,OAAO2X,GAA4BsjB,KAAK/1C,KAAjCyyB,CAAuC/X,EAAMviB,EAAMkgB,EAAOyC,EACpE,CACD,MAAAvf,CAAO2mB,GACH,MAAMxH,EAAO1a,KAAKojC,YACZjY,EAAOzQ,EAAKirB,QACZhrB,EAASD,EAAKviB,MAAQ,GACtBmwC,EAAS5tB,EAAKM,OAAOutB,YAE3B,GADApd,EAAKxQ,OAASA,EACD,WAATuH,EAAmB,CACnB,MAAMzpB,EAAUuH,KAAKmqC,6BAA6BjoB,GAC7CliB,KAAKvH,QAAQoqB,WACdpqB,EAAQuxB,YAAc,GAE1B,MAAM5F,EAAa,CACf0b,OAAO,EACP6X,UAAWrP,EAAOhtC,SAAWqf,EAAOrf,OACpC7C,WAEJuH,KAAK0rC,cAAcvgB,OAAM7tB,EAAW8mB,EAAYlC,EACnD,CACDliB,KAAKusC,eAAe5xB,EAAQ,EAAGA,EAAOrf,OAAQ4mB,EACjD,CACD,cAAAqqB,CAAe5xB,EAAQtC,EAAOyC,EAAOoH,GACjC,MAAMS,EAAQ3iB,KAAKojC,YAAYqD,OACzBI,EAAiB,UAAT3kB,EACd,IAAI,IAAIxmB,EAAI2c,EAAO3c,EAAI2c,EAAQyC,EAAOpf,IAAI,CACtC,MAAMyuB,EAAQxP,EAAOjf,GACfjD,EAAUuH,KAAKoqC,0BAA0B1uC,EAAGyuB,EAAM9F,OAAS,SAAWnC,GACtE01B,EAAgBj1B,EAAMk1B,yBAAyBn8C,EAAGsE,KAAK2oC,UAAUjtC,GAAGwG,GACpEwB,EAAImjC,EAAQlkB,EAAMyzB,QAAUwB,EAAcl0C,EAC1C8Q,EAAIqyB,EAAQlkB,EAAM0zB,QAAUuB,EAAcpjC,EAC1C4P,EAAa,CACf1gB,IACA8Q,IACAoD,MAAOggC,EAAchgC,MACrBmb,KAAMnc,MAAMlT,IAAMkT,MAAMpC,GACxB/b,WAEJuH,KAAK0rC,cAAcvhB,EAAOzuB,EAAG0oB,EAAYlC,EAC5C,CACJ,GA4IL41B,kBAzIA,cAAgCzT,GAC5BC,UAAY,UACfA,gBAAkB,CACXa,oBAAoB,EACpBC,gBAAiB,QACjBviB,UAAU,EACVxkB,MAAM,GAEbimC,iBAAmB,CACZriB,YAAa,CACTC,KAAM,SAEVU,OAAQ,CACJlf,EAAG,CACCxD,KAAM,UAEVsU,EAAG,CACCtU,KAAM,YAIrB,gBAAAypC,CAAiBxpC,GACV,MAAMua,EAAO1a,KAAKojC,YACZkF,EAAStoC,KAAK4f,MAAMznB,KAAKmwC,QAAU,IACnC9sB,OAAEA,EAAMC,OAAGA,GAAYf,EACvBiY,EAAS3yB,KAAK2oC,UAAUxoC,GACxBuD,EAAI8X,EAAOquB,iBAAiBlX,EAAOjvB,GACnC8Q,EAAIiH,EAAOouB,iBAAiBlX,EAAOne,GACzC,MAAO,CACHo1B,MAAOtB,EAAOnoC,IAAU,GACxBrH,MAAO,IAAM4K,EAAI,KAAO8Q,EAAI,IAEnC,CACD,MAAAjZ,CAAO2mB,GACH,MAAMxH,EAAO1a,KAAKojC,aACVjrC,KAAMwiB,EAAS,IAAQD,EACzBE,EAAqB5a,KAAK4f,MAAMyrB,oBACtC,IAAIhzB,MAAEA,EAAKyC,MAAGA,GAAWL,GAAiCC,EAAMC,EAAQC,GAOxE,GANA5a,KAAK6kC,WAAaxsB,EAClBrY,KAAK8kC,WAAahqB,EACdS,GAAoBb,KACpBrC,EAAQ,EACRyC,EAAQH,EAAOrf,QAEf0E,KAAKvH,QAAQoqB,SAAU,CAClB7iB,KAAKmlC,oBACNnlC,KAAKwlC,cAET,MAAQG,QAASxa,WAAO4rB,GAAcr8B,EACtCyQ,EAAK4Q,OAAS/7B,KAAK4f,MACnBuL,EAAK+Q,cAAgBl8B,KAAKG,MAC1BgrB,EAAK6rB,aAAeD,EAASC,WAC7B7rB,EAAKxQ,OAASA,EACd,MAAMliB,EAAUuH,KAAKmqC,6BAA6BjoB,GAClDzpB,EAAQuiC,QAAUh7B,KAAKvH,QAAQuiC,QAC/Bh7B,KAAK0rC,cAAcvgB,OAAM7tB,EAAW,CAChC25C,UAAWr8B,EACXniB,WACDypB,EACf,MAAmBliB,KAAKmlC,4BACLzqB,EAAKirB,QACZ3lC,KAAKmlC,oBAAqB,GAE9BnlC,KAAKusC,eAAe5xB,EAAQtC,EAAOyC,EAAOoH,EAC7C,CACD,WAAAsjB,GACI,MAAM3iB,SAAEA,GAAc7iB,KAAKvH,SACtBuH,KAAKmlC,oBAAsBtiB,IAC5B7iB,KAAKmlC,mBAAqBnlC,KAAK4f,MAAMm4B,SAASC,WAAW,SAE7DtI,MAAMlK,aACT,CACD,cAAA+G,CAAe5xB,EAAQtC,EAAOyC,EAAOoH,GACjC,MAAM2kB,EAAiB,UAAT3kB,GACRlH,OAAEA,EAAM+nB,OAAGA,EAASwC,SAAAA,EAAWwR,SAAAA,GAAc/2C,KAAKojC,YAClDmI,EAAYvrC,KAAKoqC,0BAA0B/xB,EAAO6J,GAClDkpB,EAAgBprC,KAAKkrC,iBAAiBK,GACtCJ,EAAiBnrC,KAAKmrC,eAAejpB,EAAMkpB,GAC3C9H,EAAQtoB,EAAOE,KACfqoB,EAAQR,EAAO7nB,MACf+Z,SAAEA,EAAW+F,QAAAA,GAAah7B,KAAKvH,QAC/By+C,EAAevgC,GAASse,GAAYA,EAAW7iB,OAAOuD,kBACtDwhC,EAAen3C,KAAK4f,MAAMyrB,qBAAuBxE,GAAkB,SAAT3kB,EAChE,IAAIm1B,EAAah/B,EAAQ,GAAKrY,KAAK2oC,UAAUtwB,EAAQ,GACrD,IAAI,IAAI3c,EAAI2c,EAAO3c,EAAI2c,EAAQyC,IAASpf,EAAE,CACtC,MAAMyuB,EAAQxP,EAAOjf,GACfi3B,EAAS3yB,KAAK2oC,UAAUjtC,GACxB0oB,EAAa+yB,EAAehtB,EAAQ,GACpCmtB,EAAWzlC,GAAc8gB,EAAO4Q,IAChC7O,EAAStQ,EAAWkf,GAAStoB,EAAOM,iBAAiBqX,EAAO2Q,GAAQ5nC,GACpEi5B,EAASvQ,EAAWmf,GAASsD,GAASyQ,EAAWvU,EAAO6M,eAAiB7M,EAAOznB,iBAAiBiqB,EAAWvlC,KAAKkiC,WAAWa,EAAQpQ,EAAQ4S,GAAY5S,EAAO4Q,GAAQ7nC,GAC7K0oB,EAAW2O,KAAOnc,MAAM8d,IAAW9d,MAAM+d,IAAW2iB,EACpDlzB,EAAW2a,KAAOrjC,EAAI,GAAKoF,KAAKsV,IAAIuc,EAAO2Q,GAAS+T,EAAW/T,IAAU4T,EACrElc,IACA5W,EAAWuO,OAASA,EACpBvO,EAAWkmB,IAAMyM,EAAS5+C,KAAKuD,IAE/ByvC,IACA/mB,EAAW3rB,QAAU2yC,GAAiBprC,KAAKoqC,0BAA0B1uC,EAAGyuB,EAAM9F,OAAS,SAAWnC,IAEjGi1B,GACDn3C,KAAK0rC,cAAcvhB,EAAOzuB,EAAG0oB,EAAYlC,GAE7Cm1B,EAAa1kB,CAChB,CACD3yB,KAAKyrC,oBAAoBL,EAAelpB,EAAMqpB,EACjD,CACJ,cAAA7B,GACO,MAAMhvB,EAAO1a,KAAKojC,YACZjrC,EAAOuiB,EAAKviB,MAAQ,GAC1B,IAAK6H,KAAKvH,QAAQoqB,SAAU,CACxB,IAAI9hB,EAAM,EACV,IAAI,IAAIrF,EAAIvD,EAAKmD,OAAS,EAAGI,GAAK,IAAKA,EACnCqF,EAAMD,KAAKC,IAAIA,EAAK5I,EAAKuD,GAAG2Z,KAAKrV,KAAKoqC,0BAA0B1uC,IAAM,GAE1E,OAAOqF,EAAM,GAAKA,CACrB,CACD,MAAM4kC,EAAUjrB,EAAKirB,QACf5f,EAAS4f,EAAQltC,SAAWktC,EAAQltC,QAAQuxB,aAAe,EACjE,IAAK7xB,EAAKmD,OACN,OAAOyqB,EAEX,MAAMmN,EAAa/6B,EAAK,GAAGkd,KAAKrV,KAAKoqC,0BAA0B,IACzDmN,EAAYp/C,EAAKA,EAAKmD,OAAS,GAAG+Z,KAAKrV,KAAKoqC,0BAA0BjyC,EAAKmD,OAAS,IAC1F,OAAOwF,KAAKC,IAAIglB,EAAQmN,EAAYqkB,GAAa,CACpD,KAmBD,SAASU,KACT,MAAM,IAAIh+C,MAAM,kFACpB,CAMI,MAAMi+C,GAUJ,eAAOl1B,CAASm1B,GACd5hD,OAAOP,OAAOkiD,GAAgBpmC,UAAWqmC,EAC5C,CACD1/C,QACA,WAAAqX,CAAYrX,GACRuH,KAAKvH,QAAUA,GAAW,EAC7B,CAED,IAAA6F,GAAS,CACT,OAAA85C,GACI,OAAOH,IACV,CACD,KAAArlB,GACI,OAAOqlB,IACV,CACD,MAAA34B,GACI,OAAO24B,IACV,CACD,GAAAp8C,GACI,OAAOo8C,IACV,CACD,IAAAI,GACI,OAAOJ,IACV,CACD,OAAAK,GACI,OAAOL,IACV,CACD,KAAAM,GACI,OAAON,IACV,EAEL,IAAIO,GACON,GAGX,SAASO,GAAaC,EAASx9B,EAAMpiB,EAAOqpB,GACxC,MAAMghB,WAAEA,EAAahrC,KAAAA,UAAO4iB,GAAa29B,EACnC19B,EAASmoB,EAAWC,YAAYpoB,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBH,GAAW5iB,EAAKmD,OAAQ,CAC1E,MAAMq9C,EAAe39B,EAAO49B,eAAiBr/B,GAAgBH,GAC7D,IAAK+I,EACD,OAAOw2B,EAAaxgD,EAAM+iB,EAAMpiB,GAC7B,GAAIqqC,EAAWyB,eAAgB,CAClC,MAAM1L,EAAK/gC,EAAK,GACVme,EAA+B,mBAAhB4iB,EAAG2f,UAA2B3f,EAAG2f,SAAS39B,GAC/D,GAAI5E,EAAO,CACP,MAAM+B,EAAQsgC,EAAaxgD,EAAM+iB,EAAMpiB,EAAQwd,GACzCgC,EAAMqgC,EAAaxgD,EAAM+iB,EAAMpiB,EAAQwd,GAC7C,MAAO,CACH6C,GAAId,EAAMc,GACVD,GAAIZ,EAAIY,GAEf,CACJ,CACJ,CACD,MAAO,CACHC,GAAI,EACJD,GAAI/gB,EAAKmD,OAAS,EAE1B,CACC,SAASw9C,GAAyBl5B,EAAO1E,EAAM69B,EAAUvgD,EAAS2pB,GAC/D,MAAM6f,EAAWpiB,EAAMo5B,+BACjBlgD,EAAQigD,EAAS79B,GACvB,IAAI,IAAIxf,EAAI,EAAG4X,EAAO0uB,EAAS1mC,OAAQI,EAAI4X,IAAQ5X,EAAE,CACjD,MAAMyE,MAAEA,EAAQhI,KAAAA,GAAU6pC,EAAStmC,IAC7Byd,GAAEA,EAAED,GAAGA,GAAQu/B,GAAazW,EAAStmC,GAAIwf,EAAMpiB,EAAOqpB,GAC5D,IAAI,IAAI3T,EAAI2K,EAAI3K,GAAK0K,IAAM1K,EAAE,CACzB,MAAM1W,EAAUK,EAAKqW,GAChB1W,EAAQi7B,MACTv6B,EAAQV,EAASqI,EAAOqO,EAE/B,CACJ,CACL,CAUC,SAASyqC,GAAkBr5B,EAAOm5B,EAAU79B,EAAMg+B,EAAkB92B,GACjE,MAAMrI,EAAQ,GACd,IAAKqI,IAAqBxC,EAAMu5B,cAAcJ,GAC1C,OAAOh/B,EAeX,OADA++B,GAAyBl5B,EAAO1E,EAAM69B,GAZf,SAASjhD,EAAS2b,EAActT,IAC9CiiB,GAAqB8H,GAAepyB,EAAS8nB,EAAMsqB,UAAW,KAG/DpyC,EAAQshD,QAAQL,EAASr1C,EAAGq1C,EAASvkC,EAAG0kC,IACxCn/B,EAAM1f,KAAK,CACPvC,UACA2b,eACAtT,SAGhB,IACoE,GACzD4Z,CACX,CAuBC,SAASs/B,GAAyBz5B,EAAOm5B,EAAU79B,EAAMiH,EAAW+2B,EAAkB92B,GACnF,IAAIrI,EAAQ,GACZ,MAAMu/B,EArDT,SAAkCp+B,GAC/B,MAAMq+B,GAA8B,IAAvBr+B,EAAKthB,QAAQ,KACpB4/C,GAA8B,IAAvBt+B,EAAKthB,QAAQ,KAC1B,OAAO,SAASoe,EAAKC,GACjB,MAAMwhC,EAASF,EAAOz4C,KAAKsV,IAAI4B,EAAItU,EAAIuU,EAAIvU,GAAK,EAC1Cg2C,EAASF,EAAO14C,KAAKsV,IAAI4B,EAAIxD,EAAIyD,EAAIzD,GAAK,EAChD,OAAO1T,KAAK6W,KAAK7W,KAAKoO,IAAIuqC,EAAQ,GAAK34C,KAAKoO,IAAIwqC,EAAQ,GAChE,CACA,CA6C2BC,CAAyBz+B,GAChD,IAAI0+B,EAAcxnC,OAAOuD,kBA8BzB,OADAmjC,GAAyBl5B,EAAO1E,EAAM69B,GA5BtC,SAAwBjhD,EAAS2b,EAActT,GAC3C,MAAMi5C,EAAUthD,EAAQshD,QAAQL,EAASr1C,EAAGq1C,EAASvkC,EAAG0kC,GACxD,GAAI/2B,IAAci3B,EACd,OAEJ,MAAM/I,EAASv4C,EAAQ+hD,eAAeX,GAEtC,OADsB92B,GAAoBxC,EAAMu5B,cAAc9I,MACzC+I,EACjB,OAEJ,MAAMthC,EAAWwhC,EAAeP,EAAU1I,GACtCv4B,EAAW8hC,GACX7/B,EAAQ,CACJ,CACIjiB,UACA2b,eACAtT,UAGRy5C,EAAc9hC,GACPA,IAAa8hC,GACpB7/B,EAAM1f,KAAK,CACPvC,UACA2b,eACAtT,SAGX,IAEM4Z,CACX,CACC,SAAS+/B,GAAgBl6B,EAAOm5B,EAAU79B,EAAMiH,EAAW+2B,EAAkB92B,GAC1E,OAAKA,GAAqBxC,EAAMu5B,cAAcJ,GAG9B,MAAT79B,GAAiBiH,EAA6Ek3B,GAAyBz5B,EAAOm5B,EAAU79B,EAAMiH,EAAW+2B,EAAkB92B,GA7DrL,SAA+BxC,EAAOm5B,EAAU79B,EAAMg+B,GACnD,IAAIn/B,EAAQ,GAmBZ,OADA++B,GAAyBl5B,EAAO1E,EAAM69B,GAjBtC,SAAwBjhD,EAAS2b,EAActT,GAC3C,MAAM2zC,WAAEA,EAAaC,SAAAA,GAAcj8C,EAAQiiD,SAAS,CAChD,aACA,YACDb,IACGthC,MAAEA,GAAWP,GAAkBvf,EAAS,CAC1C4L,EAAGq1C,EAASr1C,EACZ8Q,EAAGukC,EAASvkC,IAEZ4D,GAAcR,EAAOk8B,EAAYC,IACjCh6B,EAAM1f,KAAK,CACPvC,UACA2b,eACAtT,SAGX,IAEM4Z,CACX,CAwCwCigC,CAAsBp6B,EAAOm5B,EAAU79B,EAAMg+B,GAFtE,EAGf,CACC,SAASe,GAAar6B,EAAOm5B,EAAU79B,EAAMiH,EAAW+2B,GACrD,MAAMn/B,EAAQ,GACRmgC,EAAuB,MAATh/B,EAAe,WAAa,WAChD,IAAIi/B,GAAiB,EAWrB,OAVArB,GAAyBl5B,EAAO1E,EAAM69B,GAAU,CAACjhD,EAAS2b,EAActT,KAChErI,EAAQoiD,GAAanB,EAAS79B,GAAOg+B,KACrCn/B,EAAM1f,KAAK,CACPvC,UACA2b,eACAtT,UAEJg6C,EAAiBA,GAAkBriD,EAAQshD,QAAQL,EAASr1C,EAAGq1C,EAASvkC,EAAG0kC,GAC9E,IAED/2B,IAAcg4B,EACP,GAEJpgC,CACX,CACC,IAAIqgC,GAAc,CACftB,4BACAuB,MAAO,CACV,KAAAl6C,CAAOyf,EAAOpkB,EAAG/C,EAASygD,GACf,MAAMH,EAAWpiB,GAAoBn7B,EAAGokB,GAClC1E,EAAOziB,EAAQyiB,MAAQ,IACvBkH,EAAmB3pB,EAAQ2pB,mBAAoB,EAC/CrI,EAAQthB,EAAQ0pB,UAAY82B,GAAkBr5B,EAAOm5B,EAAU79B,EAAMg+B,EAAkB92B,GAAoB03B,GAAgBl6B,EAAOm5B,EAAU79B,GAAM,EAAOg+B,EAAkB92B,GAC3Kb,EAAW,GACjB,OAAKxH,EAAMze,QAGXskB,EAAMo5B,+BAA+BriD,SAAS+jB,IAC1C,MAAMva,EAAQ4Z,EAAM,GAAG5Z,MACjBrI,EAAU4iB,EAAKviB,KAAKgI,GACtBrI,IAAYA,EAAQi7B,MACpBxR,EAASlnB,KAAK,CACVvC,UACA2b,aAAciH,EAAKva,MACnBA,SAEP,IAEEohB,GAbI,EAcd,EACR,OAAAokB,CAAS/lB,EAAOpkB,EAAG/C,EAASygD,GACjB,MAAMH,EAAWpiB,GAAoBn7B,EAAGokB,GAClC1E,EAAOziB,EAAQyiB,MAAQ,KACvBkH,EAAmB3pB,EAAQ2pB,mBAAoB,EACrD,IAAIrI,EAAQthB,EAAQ0pB,UAAY82B,GAAkBr5B,EAAOm5B,EAAU79B,EAAMg+B,EAAkB92B,GAAoB03B,GAAgBl6B,EAAOm5B,EAAU79B,GAAM,EAAOg+B,EAAkB92B,GAC/K,GAAIrI,EAAMze,OAAS,EAAG,CAClB,MAAMmY,EAAesG,EAAM,GAAGtG,aACxBtb,EAAOynB,EAAM8mB,eAAejzB,GAActb,KAChD4hB,EAAQ,GACR,IAAI,IAAIre,EAAI,EAAGA,EAAIvD,EAAKmD,SAAUI,EAC9Bqe,EAAM1f,KAAK,CACPvC,QAASK,EAAKuD,GACd+X,eACAtT,MAAOzE,GAGlB,CACD,OAAOqe,CACV,EACRoQ,MAAM,CAACvK,EAAOpkB,EAAG/C,EAASygD,IAIRD,GAAkBr5B,EAHR+W,GAAoBn7B,EAAGokB,GAC3BnnB,EAAQyiB,MAAQ,KAEmBg+B,EADvBzgD,EAAQ2pB,mBAAoB,GAGhE,OAAAk4B,CAAS16B,EAAOpkB,EAAG/C,EAASygD,GACjB,MAAMH,EAAWpiB,GAAoBn7B,EAAGokB,GAClC1E,EAAOziB,EAAQyiB,MAAQ,KACvBkH,EAAmB3pB,EAAQ2pB,mBAAoB,EACrD,OAAO03B,GAAgBl6B,EAAOm5B,EAAU79B,EAAMziB,EAAQ0pB,UAAW+2B,EAAkB92B,EACtF,EACR1e,EAAE,CAACkc,EAAOpkB,EAAG/C,EAASygD,IAEJe,GAAar6B,EADH+W,GAAoBn7B,EAAGokB,GACH,IAAKnnB,EAAQ0pB,UAAW+2B,GAExE1kC,EAAE,CAACoL,EAAOpkB,EAAG/C,EAASygD,IAEJe,GAAar6B,EADH+W,GAAoBn7B,EAAGokB,GACH,IAAKnnB,EAAQ0pB,UAAW+2B,KAKzE,MAAMqB,GAAmB,CACrB,OACA,MACA,QACA,UAEJ,SAASC,GAAiB1jC,EAAOiiC,GAC7B,OAAOjiC,EAAMjZ,QAAQ8C,GAAIA,EAAE61B,MAAQuiB,GACvC,CACA,SAAS0B,GAA4B3jC,EAAOoE,GACxC,OAAOpE,EAAMjZ,QAAQ8C,IAAyC,IAArC45C,GAAiB3gD,QAAQ+G,EAAE61B,MAAe71B,EAAEq2B,IAAI9b,OAASA,GACtF,CACA,SAASw/B,GAAa5jC,EAAO5D,GACzB,OAAO4D,EAAMy2B,MAAK,CAACx2C,EAAGC,KAClB,MAAMuc,EAAKL,EAAUlc,EAAID,EACnByc,EAAKN,EAAUnc,EAAIC,EACzB,OAAOuc,EAAGhD,SAAWiD,EAAGjD,OAASgD,EAAGpT,MAAQqT,EAAGrT,MAAQoT,EAAGhD,OAASiD,EAAGjD,MAAM,GAEpF,CAqCC,SAASoqC,GAAcC,EAASC,GAC7B,MAAMnY,EAnBV,SAAqBkY,GACjB,MAAMlY,EAAS,CAAA,EACf,IAAK,MAAMoY,KAAQF,EAAQ,CACvB,MAAMzY,MAAEA,EAAQ3L,IAAAA,cAAMukB,GAAiBD,EACvC,IAAK3Y,IAAUoY,GAAiB/5B,SAASgW,GACrC,SAEJ,MAAMzF,EAAS2R,EAAOP,KAAWO,EAAOP,GAAS,CAC7CrnB,MAAO,EACPkgC,OAAQ,EACRzqC,OAAQ,EACR8E,KAAM,IAEV0b,EAAOjW,QACPiW,EAAOxgB,QAAUwqC,CACpB,CACD,OAAOrY,CACX,CAEmBuY,CAAYL,IACrBM,aAAEA,EAAYC,cAAGA,GAAmBN,EAC1C,IAAIn/C,EAAG4X,EAAM8nC,EACb,IAAI1/C,EAAI,EAAG4X,EAAOsnC,EAAQt/C,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC5C0/C,EAASR,EAAQl/C,GACjB,MAAM2/C,SAAEA,GAAcD,EAAOpkB,IACvBmL,EAAQO,EAAO0Y,EAAOjZ,OACtB9C,EAAS8C,GAASiZ,EAAOL,YAAc5Y,EAAM5xB,OAC/C6qC,EAAOzM,YACPyM,EAAOl1B,MAAQmZ,EAASA,EAAS6b,EAAeG,GAAYR,EAAOS,eACnEF,EAAO1yB,OAASyyB,IAEhBC,EAAOl1B,MAAQg1B,EACfE,EAAO1yB,OAAS2W,EAASA,EAAS8b,EAAgBE,GAAYR,EAAOU,gBAE5E,CACD,OAAO7Y,CACX,CAmBA,SAAS8Y,GAAeC,EAAYvR,EAAWnzC,EAAGC,GAC9C,OAAO8J,KAAKC,IAAI06C,EAAW1kD,GAAImzC,EAAUnzC,IAAM+J,KAAKC,IAAI06C,EAAWzkD,GAAIkzC,EAAUlzC,GACrF,CACA,SAAS0kD,GAAiBD,EAAYE,GAClCF,EAAW52B,IAAM/jB,KAAKC,IAAI06C,EAAW52B,IAAK82B,EAAW92B,KACrD42B,EAAWz2B,KAAOlkB,KAAKC,IAAI06C,EAAWz2B,KAAM22B,EAAW32B,MACvDy2B,EAAW12B,OAASjkB,KAAKC,IAAI06C,EAAW12B,OAAQ42B,EAAW52B,QAC3D02B,EAAW32B,MAAQhkB,KAAKC,IAAI06C,EAAW32B,MAAO62B,EAAW72B,MAC7D,CACA,SAAS82B,GAAW1R,EAAW2Q,EAAQO,EAAQ1Y,GAC3C,MAAMlM,IAAEA,EAAGQ,IAAGA,GAASokB,EACjBK,EAAavR,EAAUuR,WAC7B,IAAKvpC,GAASskB,GAAM,CACZ4kB,EAAO/lC,OACP60B,EAAU1T,IAAQ4kB,EAAO/lC,MAE7B,MAAM8sB,EAAQO,EAAO0Y,EAAOjZ,QAAU,CAClC9sB,KAAM,EACNyF,MAAO,GAEXqnB,EAAM9sB,KAAOvU,KAAKC,IAAIohC,EAAM9sB,KAAM+lC,EAAOzM,WAAa3X,EAAItO,OAASsO,EAAI9Q,OACvEk1B,EAAO/lC,KAAO8sB,EAAM9sB,KAAO8sB,EAAMrnB,MACjCovB,EAAU1T,IAAQ4kB,EAAO/lC,IAC5B,CACG2hB,EAAI6kB,YACJH,GAAiBD,EAAYzkB,EAAI6kB,cAErC,MAAMC,EAAWh7C,KAAKC,IAAI,EAAG85C,EAAOkB,WAAaP,GAAeC,EAAYvR,EAAW,OAAQ,UACzF8R,EAAYl7C,KAAKC,IAAI,EAAG85C,EAAOoB,YAAcT,GAAeC,EAAYvR,EAAW,MAAO,WAC1FgS,EAAeJ,IAAa5R,EAAUvnC,EACtCw5C,EAAgBH,IAAc9R,EAAUrpC,EAG9C,OAFAqpC,EAAUvnC,EAAIm5C,EACd5R,EAAUrpC,EAAIm7C,EACPZ,EAAOzM,WAAa,CACvByN,KAAMF,EACNG,MAAOF,GACP,CACAC,KAAMD,EACNE,MAAOH,EAEf,CAaA,SAASI,GAAW3N,EAAYzE,GAC5B,MAAMuR,EAAavR,EAAUuR,WAC7B,SAASc,EAAmBnmB,GACxB,MAAM/L,EAAS,CACXrF,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,GAKZ,OAHAqR,EAAUz/B,SAAS6/B,IACfnM,EAAOmM,GAAO11B,KAAKC,IAAImpC,EAAU1T,GAAMilB,EAAWjlB,GAAK,IAEpDnM,CACV,CACD,OAAoBkyB,EAAb5N,EAAgC,CACnC,OACA,SACoB,CACpB,MACA,UAER,CACA,SAAS6N,GAASC,EAAOvS,EAAW2Q,EAAQnY,GACxC,MAAMga,EAAa,GACnB,IAAIhhD,EAAG4X,EAAM8nC,EAAQpkB,EAAK2lB,EAAO3gC,EACjC,IAAItgB,EAAI,EAAG4X,EAAOmpC,EAAMnhD,OAAQqhD,EAAQ,EAAGjhD,EAAI4X,IAAQ5X,EAAE,CACrD0/C,EAASqB,EAAM/gD,GACfs7B,EAAMokB,EAAOpkB,IACbA,EAAIz7B,OAAO6/C,EAAOl1B,OAASgkB,EAAUvnC,EAAGy4C,EAAO1yB,QAAUwhB,EAAUrpC,EAAGy7C,GAAWlB,EAAOzM,WAAYzE,IACpG,MAAMkS,KAAEA,EAAOC,MAAAA,GAAWT,GAAW1R,EAAW2Q,EAAQO,EAAQ1Y,GAChEia,GAASP,GAAQM,EAAWphD,OAC5B0gB,EAAUA,GAAWqgC,EAChBrlB,EAAIqkB,UACLqB,EAAWriD,KAAK+gD,EAEvB,CACD,OAAOuB,GAASH,GAASE,EAAYxS,EAAW2Q,EAAQnY,IAAW1mB,CACvE,CACA,SAAS4gC,GAAW5lB,EAAKhS,EAAMH,EAAKqB,EAAOwC,GACvCsO,EAAInS,IAAMA,EACVmS,EAAIhS,KAAOA,EACXgS,EAAIlS,MAAQE,EAAOkB,EACnB8Q,EAAIjS,OAASF,EAAM6D,EACnBsO,EAAI9Q,MAAQA,EACZ8Q,EAAItO,OAASA,CACjB,CACA,SAASm0B,GAAWJ,EAAOvS,EAAW2Q,EAAQnY,GAC1C,MAAMoa,EAAcjC,EAAOj2B,QAC3B,IAAIlhB,EAAEA,EAAC8Q,EAAGA,GAAO01B,EACjB,IAAK,MAAMkR,KAAUqB,EAAM,CACvB,MAAMzlB,EAAMokB,EAAOpkB,IACbmL,EAAQO,EAAO0Y,EAAOjZ,QAAU,CAClCrnB,MAAO,EACPkgC,OAAQ,EACRzqC,OAAQ,GAENA,EAAS6qC,EAAOL,YAAc5Y,EAAM5xB,QAAU,EACpD,GAAI6qC,EAAOzM,WAAY,CACnB,MAAMzoB,EAAQgkB,EAAUvnC,EAAI4N,EACtBmY,EAASyZ,EAAM9sB,MAAQ2hB,EAAItO,OAC7BxT,GAAQitB,EAAM9pB,SACd7D,EAAI2tB,EAAM9pB,OAEV2e,EAAIqkB,SACJuB,GAAW5lB,EAAK8lB,EAAY93B,KAAMxQ,EAAGqmC,EAAOkB,WAAae,EAAYh4B,MAAQg4B,EAAY93B,KAAM0D,GAE/Fk0B,GAAW5lB,EAAKkT,EAAUllB,KAAOmd,EAAM6Y,OAAQxmC,EAAG0R,EAAOwC,GAE7DyZ,EAAM9pB,MAAQ7D,EACd2tB,EAAM6Y,QAAU90B,EAChB1R,EAAIwiB,EAAIjS,MACpB,KAAe,CACH,MAAM2D,EAASwhB,EAAUrpC,EAAI0P,EACvB2V,EAAQic,EAAM9sB,MAAQ2hB,EAAI9Q,MAC5BhR,GAAQitB,EAAM9pB,SACd3U,EAAIy+B,EAAM9pB,OAEV2e,EAAIqkB,SACJuB,GAAW5lB,EAAKtzB,EAAGo5C,EAAYj4B,IAAKqB,EAAO20B,EAAOoB,YAAca,EAAY/3B,OAAS+3B,EAAYj4B,KAEjG+3B,GAAW5lB,EAAKtzB,EAAGwmC,EAAUrlB,IAAMsd,EAAM6Y,OAAQ90B,EAAOwC,GAE5DyZ,EAAM9pB,MAAQ3U,EACdy+B,EAAM6Y,QAAUtyB,EAChBhlB,EAAIszB,EAAIlS,KACX,CACJ,CACDolB,EAAUxmC,EAAIA,EACdwmC,EAAU11B,EAAIA,CAClB,CACA,IAAIomC,GAAU,CACb,MAAAmC,CAAQn9B,EAAOtK,GACHsK,EAAM68B,QACP78B,EAAM68B,MAAQ,IAElBnnC,EAAK+lC,SAAW/lC,EAAK+lC,WAAY,EACjC/lC,EAAKyjC,SAAWzjC,EAAKyjC,UAAY,MACjCzjC,EAAK/E,OAAS+E,EAAK/E,QAAU,EAC7B+E,EAAK0nC,QAAU1nC,EAAK0nC,SAAW,WAC3B,MAAO,CACH,CACIC,EAAG,EACH,IAAA/e,CAAMgM,GACF50B,EAAK4oB,KAAKgM,EACb,GAGrB,EACQtqB,EAAM68B,MAAMpiD,KAAKib,EACpB,EACJ,SAAA4nC,CAAWt9B,EAAOu9B,GACX,MAAMh9C,EAAQyf,EAAM68B,MAAQ78B,EAAM68B,MAAM7iD,QAAQujD,IAAe,GAChD,IAAXh9C,GACAyf,EAAM68B,MAAMr8C,OAAOD,EAAO,EAEjC,EACJ,SAAA2gC,CAAWlhB,EAAOtK,EAAM7c,GACjB6c,EAAK+lC,SAAW5iD,EAAQ4iD,SACxB/lC,EAAKyjC,SAAWtgD,EAAQsgD,SACxBzjC,EAAK/E,OAAS9X,EAAQ8X,MACzB,EACJ,MAAAhV,CAAQqkB,EAAOsG,EAAOwC,EAAQ00B,GACvB,IAAKx9B,EACD,OAEJ,MAAMgF,EAAUoJ,GAAUpO,EAAMnnB,QAAQ2iD,OAAOx2B,SACzC02B,EAAiBx6C,KAAKC,IAAImlB,EAAQtB,EAAQsB,MAAO,GACjDq1B,EAAkBz6C,KAAKC,IAAI2nB,EAAS9D,EAAQ8D,OAAQ,GACpD+zB,EAvMd,SAA0BA,GACtB,MAAMY,EAxDV,SAAmBZ,GACf,MAAMY,EAAc,GACpB,IAAI3hD,EAAG4X,EAAM0jB,EAAKR,EAAK2L,EAAO4Y,EAC9B,IAAIr/C,EAAI,EAAG4X,GAAQmpC,GAAS,IAAInhD,OAAQI,EAAI4X,IAAQ5X,EAChDs7B,EAAMylB,EAAM/gD,KACTq9C,SAAUviB,EAAM/9B,SAAW0pC,QAAQ4Y,cAAa,IAAU/jB,GAC7DqmB,EAAYhjD,KAAK,CACb8F,MAAOzE,EACPs7B,MACAR,MACAmY,WAAY3X,EAAI6Y,eAChBt/B,OAAQymB,EAAIzmB,OACZ4xB,MAAOA,GAAS3L,EAAM2L,EACtB4Y,gBAGR,OAAOsC,CACX,CAuCwBC,CAAUb,GACxBpB,EAAWX,GAAa2C,EAAYx/C,QAAQi9C,GAAOA,EAAK9jB,IAAIqkB,YAAW,GACvEr2B,EAAO01B,GAAaF,GAAiB6C,EAAa,SAAS,GAC3Dv4B,EAAQ41B,GAAaF,GAAiB6C,EAAa,UACnDx4B,EAAM61B,GAAaF,GAAiB6C,EAAa,QAAQ,GACzDt4B,EAAS21B,GAAaF,GAAiB6C,EAAa,WACpDE,EAAmB9C,GAA4B4C,EAAa,KAC5DG,EAAiB/C,GAA4B4C,EAAa,KAChE,MAAO,CACHhC,WACAoC,WAAYz4B,EAAKsoB,OAAOzoB,GACxB64B,eAAgB54B,EAAMwoB,OAAOkQ,GAAgBlQ,OAAOvoB,GAAQuoB,OAAOiQ,GACnErT,UAAWsQ,GAAiB6C,EAAa,aACzCM,SAAU34B,EAAKsoB,OAAOxoB,GAAOwoB,OAAOkQ,GACpC7O,WAAY9pB,EAAIyoB,OAAOvoB,GAAQuoB,OAAOiQ,GAE9C,CAsLsBK,CAAiBh+B,EAAM68B,OAC/BoB,EAAgBpB,EAAMkB,SACtBG,EAAkBrB,EAAM9N,WAC9B37B,GAAK4M,EAAM68B,OAAQzlB,IACiB,mBAArBA,EAAI+mB,cACX/mB,EAAI+mB,cACP,IAEL,MAAMC,EAA0BH,EAAclf,QAAO,CAACmW,EAAOgG,IAAOA,EAAK9jB,IAAIv+B,UAAwC,IAA7BqiD,EAAK9jB,IAAIv+B,QAAQwsB,QAAoB6vB,EAAQA,EAAQ,GAAG,IAAM,EAChJ+F,EAAStkD,OAAOu0C,OAAO,CACzBiR,WAAY71B,EACZ+1B,YAAavzB,EACb9D,UACA02B,iBACAC,kBACAL,aAAcI,EAAiB,EAAI0C,EACnC7C,cAAeI,EAAkB,IAE/BE,EAAallD,OAAOP,OAAO,CAAE,EAAE4uB,GACrC82B,GAAiBD,EAAYztB,GAAUovB,IACvC,MAAMlT,EAAY3zC,OAAOP,OAAO,CAC5BylD,aACA94C,EAAG24C,EACHz6C,EAAG06C,EACH73C,EAAGkhB,EAAQI,KACXxQ,EAAGoQ,EAAQC,KACZD,GACG8d,EAASiY,GAAckD,EAAcvQ,OAAOwQ,GAAkBjD,GACpE2B,GAASC,EAAMpB,SAAUnR,EAAW2Q,EAAQnY,GAC5C8Z,GAASqB,EAAe3T,EAAW2Q,EAAQnY,GACvC8Z,GAASsB,EAAiB5T,EAAW2Q,EAAQnY,IAC7C8Z,GAASqB,EAAe3T,EAAW2Q,EAAQnY,GA3KvD,SAA0BwH,GACtB,MAAMuR,EAAavR,EAAUuR,WAC7B,SAASwC,EAAUznB,GACf,MAAM0nB,EAASp9C,KAAKC,IAAI06C,EAAWjlB,GAAO0T,EAAU1T,GAAM,GAE1D,OADA0T,EAAU1T,IAAQ0nB,EACXA,CACV,CACDhU,EAAU11B,GAAKypC,EAAU,OACzB/T,EAAUxmC,GAAKu6C,EAAU,QACzBA,EAAU,SACVA,EAAU,SACd,CAkKQE,CAAiBjU,GACjB2S,GAAWJ,EAAMgB,WAAYvT,EAAW2Q,EAAQnY,GAChDwH,EAAUxmC,GAAKwmC,EAAUvnC,EACzBunC,EAAU11B,GAAK01B,EAAUrpC,EACzBg8C,GAAWJ,EAAMiB,eAAgBxT,EAAW2Q,EAAQnY,GACpD9iB,EAAMsqB,UAAY,CACdllB,KAAMklB,EAAUllB,KAChBH,IAAKqlB,EAAUrlB,IACfC,MAAOolB,EAAUllB,KAAOklB,EAAUvnC,EAClCoiB,OAAQmlB,EAAUrlB,IAAMqlB,EAAUrpC,EAClC6nB,OAAQwhB,EAAUrpC,EAClBqlB,MAAOgkB,EAAUvnC,GAErBqQ,GAAKypC,EAAMvS,WAAYkR,IACnB,MAAMpkB,EAAMokB,EAAOpkB,IACnBzgC,OAAOP,OAAOghC,EAAKpX,EAAMsqB,WACzBlT,EAAIz7B,OAAO2uC,EAAUvnC,EAAGunC,EAAUrpC,EAAG,CACjCmkB,KAAM,EACNH,IAAK,EACLC,MAAO,EACPC,OAAQ,GACV,GAET,GAGL,MAAMq5B,GACL,cAAAC,CAAe/1B,EAAQsP,GAAe,CACtC,cAAA0mB,CAAex/C,GACR,OAAO,CACV,CACJ,gBAAApG,CAAiBknB,EAAO1f,EAAMwZ,GAAY,CAC1C,mBAAA/gB,CAAoBinB,EAAO1f,EAAMwZ,GAAY,CAC7C,mBAAA4H,GACO,OAAO,CACV,CACJ,cAAAmW,CAAe3/B,EAASouB,EAAOwC,EAAQkP,GAGhC,OAFA1R,EAAQplB,KAAKC,IAAI,EAAGmlB,GAASpuB,EAAQouB,OACrCwC,EAASA,GAAU5wB,EAAQ4wB,OACpB,CACHxC,QACAwC,OAAQ5nB,KAAKC,IAAI,EAAG62B,EAAc92B,KAAK2V,MAAMyP,EAAQ0R,GAAelP,GAE3E,CACJ,UAAA61B,CAAWj2B,GACJ,OAAO,CACV,CACJ,YAAAk2B,CAAa5d,GACT,EAGL,MAAM6d,WAAsBL,GACxB,cAAAC,CAAe/oC,GACX,OAAOA,GAAQA,EAAKiT,YAAcjT,EAAKiT,WAAW,OAAS,IAC9D,CACD,YAAAi2B,CAAa5d,GACTA,EAAOnoC,QAAQuoB,WAAY,CAC9B,EAGL,MAAM09B,GAAc,WACbC,GAAc,CACjBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAEVC,GAAiBvmD,GAAkB,OAAVA,GAA4B,KAAVA,EAoCjD,MAAMwmD,KAAuBxmB,IAA+B,CACxDE,SAAS,GAOb,SAASumB,GAAe3/B,EAAO1f,EAAMwZ,GAC7BkG,GAASA,EAAM0I,QACf1I,EAAM0I,OAAO3vB,oBAAoBuH,EAAMwZ,EAAU4lC,GAEzD,CAYA,SAASE,GAAiBC,EAAUn3B,GAChC,IAAK,MAAMhxB,KAAQmoD,EACf,GAAInoD,IAASgxB,GAAUhxB,EAAKooD,SAASp3B,GACjC,OAAO,CAGnB,CACA,SAASq3B,GAAqB//B,EAAO1f,EAAMwZ,GACvC,MAAM4O,EAAS1I,EAAM0I,OACfs3B,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMjS,KAASgS,EAChBC,EAAUA,GAAWP,GAAiB1R,EAAMkS,WAAY13B,GACxDy3B,EAAUA,IAAYP,GAAiB1R,EAAMmS,aAAc33B,GAE3Dy3B,GACArmC,GACH,IAML,OAJAkmC,EAASM,QAAQloD,SAAU,CACvBmoD,WAAW,EACXC,SAAS,IAENR,CACX,CACA,SAASS,GAAqBzgC,EAAO1f,EAAMwZ,GACvC,MAAM4O,EAAS1I,EAAM0I,OACfs3B,EAAW,IAAIC,kBAAkBC,IACnC,IAAIC,GAAU,EACd,IAAK,MAAMjS,KAASgS,EAChBC,EAAUA,GAAWP,GAAiB1R,EAAMmS,aAAc33B,GAC1Dy3B,EAAUA,IAAYP,GAAiB1R,EAAMkS,WAAY13B,GAEzDy3B,GACArmC,GACH,IAML,OAJAkmC,EAASM,QAAQloD,SAAU,CACvBmoD,WAAW,EACXC,SAAS,IAENR,CACX,CACA,MAAMU,GAAqB,IAAIvhD,IAC/B,IAAIwhD,GAAsB,EAC1B,SAASC,KACL,MAAMC,EAAMxmC,OAAOmH,iBACfq/B,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB3pD,SAAQ,CAAC2tB,EAAQ1E,KAC5BA,EAAMuI,0BAA4Bs4B,GAClCn8B,GACH,IAET,CAaA,SAASo8B,GAAqB9gC,EAAO1f,EAAMwZ,GACvC,MAAM4O,EAAS1I,EAAM0I,OACf0P,EAAY1P,GAAUoN,GAAepN,GAC3C,IAAK0P,EACD,OAEJ,MAAM1T,EAASnK,IAAU,CAAC+L,EAAOwC,KAC7B,MAAM/lB,EAAIq1B,EAAUI,YACpB1e,EAASwM,EAAOwC,GACZ/lB,EAAIq1B,EAAUI,aACd1e,GACH,GACFO,QACG2lC,EAAW,IAAIe,gBAAgBb,IACjC,MAAMhS,EAAQgS,EAAQ,GAChB55B,EAAQ4nB,EAAM8S,YAAY16B,MAC1BwC,EAASolB,EAAM8S,YAAYl4B,OACnB,IAAVxC,GAA0B,IAAXwC,GAGnBpE,EAAO4B,EAAOwC,EAAO,IAIzB,OAFAk3B,EAASM,QAAQloB,GAlCrB,SAAuCpY,EAAO0E,GACrCg8B,GAAmBjrC,MACpB4E,OAAOvhB,iBAAiB,SAAU8nD,IAEtCF,GAAmB3mD,IAAIimB,EAAO0E,EAClC,CA8BIu8B,CAA8BjhC,EAAO0E,GAC9Bs7B,CACX,CACA,SAASkB,GAAgBlhC,EAAO1f,EAAM0/C,GAC9BA,GACAA,EAASmB,aAEA,WAAT7gD,GApCR,SAAyC0f,GACrC0gC,GAAmB5jD,OAAOkjB,GACrB0gC,GAAmBjrC,MACpB4E,OAAOthB,oBAAoB,SAAU6nD,GAE7C,CAgCQQ,CAAgCphC,EAExC,CACA,SAASqhC,GAAqBrhC,EAAO1f,EAAMwZ,GACvC,MAAM4O,EAAS1I,EAAM0I,OACfsH,EAAQzV,IAAW5hB,IACH,OAAdqnB,EAAMzjB,KACNud,EAtHZ,SAAyBnhB,EAAOqnB,GAC5B,MAAM1f,EAAOy+C,GAAYpmD,EAAM2H,OAAS3H,EAAM2H,MACxCwD,EAAEA,EAAC8Q,EAAGA,GAAOmiB,GAAoBp+B,EAAOqnB,GAC9C,MAAO,CACH1f,OACA0f,QACAshC,OAAQ3oD,EACRmL,OAASpG,IAANoG,EAAkBA,EAAI,KACzB8Q,OAASlX,IAANkX,EAAkBA,EAAI,KAEjC,CA4GqB2sC,CAAgB5oD,EAAOqnB,GACnC,GACFA,GAEH,OApIJ,SAAqBtoB,EAAM4I,EAAMwZ,GACzBpiB,GACAA,EAAKoB,iBAAiBwH,EAAMwZ,EAAU4lC,GAE9C,CA+HI8B,CAAY94B,EAAQpoB,EAAM0vB,GACnBA,CACX,CACC,MAAMyxB,WAAoBjD,GAC1B,cAAAC,CAAe/1B,EAAQsP,GAChB,MAAM94B,EAAUwpB,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MACjE,OAAIzpB,GAAWA,EAAQwpB,SAAWA,GA/KzC,SAAoBA,EAAQsP,GACzB,MAAMn+B,EAAQ6uB,EAAO7uB,MACf6nD,EAAeh5B,EAAOtvB,aAAa,UACnCuoD,EAAcj5B,EAAOtvB,aAAa,SAcxC,GAbAsvB,EAAOo2B,IAAe,CAClBhhB,QAAS,CACLhV,OAAQ44B,EACRp7B,MAAOq7B,EACP9nD,MAAO,CACHwrB,QAASxrB,EAAMwrB,QACfyD,OAAQjvB,EAAMivB,OACdxC,MAAOzsB,EAAMysB,SAIzBzsB,EAAMwrB,QAAUxrB,EAAMwrB,SAAW,QACjCxrB,EAAMo9B,UAAYp9B,EAAMo9B,WAAa,aACjCwoB,GAAckC,GAAc,CAC5B,MAAMC,EAAevoB,GAAa3Q,EAAQ,cACrBhrB,IAAjBkkD,IACAl5B,EAAOpC,MAAQs7B,EAEtB,CACD,GAAInC,GAAciC,GACd,GAA4B,KAAxBh5B,EAAO7uB,MAAMivB,OACbJ,EAAOI,OAASJ,EAAOpC,OAAS0R,GAAe,OAC5C,CACH,MAAM6pB,EAAgBxoB,GAAa3Q,EAAQ,eACrBhrB,IAAlBmkD,IACAn5B,EAAOI,OAAS+4B,EAEvB,CAGT,CA8IYC,CAAWp5B,EAAQsP,GACZ94B,GAEJ,IACV,CACJ,cAAAw/C,CAAex/C,GACR,MAAMwpB,EAASxpB,EAAQwpB,OACvB,IAAKA,EAAOo2B,IACR,OAAO,EAEX,MAAMhhB,EAAUpV,EAAOo2B,IAAahhB,QACpC,CACI,SACA,SACF/mC,SAASk3B,IACP,MAAM/0B,EAAQ4kC,EAAQ7P,GAClBhc,GAAc/Y,GACdwvB,EAAOvvB,gBAAgB80B,GAEvBvF,EAAOrvB,aAAa40B,EAAM/0B,EAC7B,IAEL,MAAMW,EAAQikC,EAAQjkC,OAAS,GAM/B,OALAlD,OAAOkK,KAAKhH,GAAO9C,SAAS6C,IACxB8uB,EAAO7uB,MAAMD,GAAOC,EAAMD,EAAI,IAElC8uB,EAAOpC,MAAQoC,EAAOpC,aACfoC,EAAOo2B,KACP,CACV,CACJ,gBAAAhmD,CAAiBknB,EAAO1f,EAAMwZ,GACvB1Z,KAAKrH,oBAAoBinB,EAAO1f,GAChC,MAAMyhD,EAAU/hC,EAAMgiC,WAAahiC,EAAMgiC,SAAW,CAAA,GAM9CppD,EALW,CACbqpD,OAAQlC,GACRhoD,OAAQ0oD,GACR/7B,OAAQo8B,IAEaxgD,IAAS+gD,GAClCU,EAAQzhD,GAAQ1H,EAAQonB,EAAO1f,EAAMwZ,EACxC,CACJ,mBAAA/gB,CAAoBinB,EAAO1f,GACpB,MAAMyhD,EAAU/hC,EAAMgiC,WAAahiC,EAAMgiC,SAAW,CAAA,GAC9ChyB,EAAQ+xB,EAAQzhD,GACtB,IAAK0vB,EACD,QAEa,CACbiyB,OAAQf,GACRnpD,OAAQmpD,GACRx8B,OAAQw8B,IAEa5gD,IAASq/C,IAC1B3/B,EAAO1f,EAAM0vB,GACrB+xB,EAAQzhD,QAAQ5C,CACnB,CACD,mBAAAgkB,GACI,OAAOrH,OAAOmH,gBACjB,CACJ,cAAAqW,CAAenP,EAAQpC,EAAOwC,EAAQkP,GAC/B,OAAOH,GAAenP,EAAQpC,EAAOwC,EAAQkP,EAChD,CACJ,UAAA2mB,CAAWj2B,GACJ,MAAM0P,EAAY1P,GAAUoN,GAAepN,GAC3C,SAAU0P,IAAaA,EAAU8pB,YACpC,EAUL,IAAAC,GAAA,MACIzd,gBAAkB,CAAA,EAClBA,0BAAuBhnC,EACvBoG,EACA8Q,EACA6P,QAAS,EACT5rB,QACA6oC,YACA,eAAA0gB,CAAgB9I,GACZ,MAAMx1C,EAAEA,EAAI8Q,EAAAA,GAAOxU,KAAK+5C,SAAS,CAC7B,IACA,KACDb,GACH,MAAO,CACHx1C,IACA8Q,IAEP,CACD,QAAAytC,GACI,OAAOtrC,GAAS3W,KAAK0D,IAAMiT,GAAS3W,KAAKwU,EAC5C,CACD,QAAAulC,CAAS7iD,EAAOgrD,GACZ,MAAM3kB,EAAQv9B,KAAKshC,YACnB,IAAK4gB,IAAU3kB,EAEX,OAAOv9B,KAEX,MAAMZ,EAAM,CAAA,EAIZ,OAHAlI,EAAMP,SAASk3B,IACXzuB,EAAIyuB,GAAQ0P,EAAM1P,IAAS0P,EAAM1P,GAAMxJ,SAAWkZ,EAAM1P,GAAMqS,IAAMlgC,KAAK6tB,EAAK,IAE3EzuB,CACV,GAGL,SAASqnB,GAAS9D,EAAOhD,GACrB,MAAMwiC,EAAWx/B,EAAMlqB,QAAQknB,MACzByiC,EAyBV,SAA2Bz/B,GACvB,MAAMuC,EAASvC,EAAMlqB,QAAQysB,OACvBS,EAAahD,EAAM0/B,YACnBC,EAAW3/B,EAAM+qB,QAAU/nB,GAAcT,EAAS,EAAI,GACtDq9B,EAAW5/B,EAAM6/B,WAAa78B,EACpC,OAAO7kB,KAAK2V,MAAM3V,KAAKE,IAAIshD,EAAUC,GACzC,CA/B+BE,CAAkB9/B,GACvC+/B,EAAa5hD,KAAKE,IAAImhD,EAASQ,eAAiBP,EAAoBA,GACpEQ,EAAeT,EAASt7B,MAAMg8B,QA6CvC,SAAyBljC,GACtB,MAAMxoB,EAAS,GACf,IAAIuE,EAAG4X,EACP,IAAI5X,EAAI,EAAG4X,EAAOqM,EAAMrkB,OAAQI,EAAI4X,EAAM5X,IAClCikB,EAAMjkB,GAAGmrB,OACT1vB,EAAOkD,KAAKqB,GAGpB,OAAOvE,CACX,CAtDkD2rD,CAAgBnjC,GAAS,GACjEojC,EAAkBH,EAAatnD,OAC/B0nD,EAAQJ,EAAa,GACrBvpC,EAAOupC,EAAaG,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBL,EAElB,OAgDP,SAAoB/iC,EAAOsjC,EAAUL,EAAcnQ,GAChD,IAEI/2C,EAFAof,EAAQ,EACRuY,EAAOuvB,EAAa,GAGxB,IADAnQ,EAAU3xC,KAAKoiD,KAAKzQ,GAChB/2C,EAAI,EAAGA,EAAIikB,EAAMrkB,OAAQI,IACrBA,IAAM23B,IACN4vB,EAAS5oD,KAAKslB,EAAMjkB,IACpBof,IACAuY,EAAOuvB,EAAa9nC,EAAQ23B,GAGxC,CA7DQ0Q,CAAWxjC,EAAOsjC,EAAUL,EAAcG,EAAkBL,GACrDO,EAEX,MAAMxQ,EAqBT,SAA0BmQ,EAAcjjC,EAAO+iC,GAC5C,MAAMU,EA4DT,SAAwB7xB,GACrB,MAAMxhB,EAAMwhB,EAAIj2B,OAChB,IAAII,EAAG28C,EACP,GAAItoC,EAAM,EACN,OAAO,EAEX,IAAIsoC,EAAO9mB,EAAI,GAAI71B,EAAI,EAAGA,EAAIqU,IAAOrU,EACjC,GAAI61B,EAAI71B,GAAK61B,EAAI71B,EAAI,KAAO28C,EACxB,OAAO,EAGf,OAAOA,CACX,CAxE6BgL,CAAeT,GAClCnQ,EAAU9yB,EAAMrkB,OAASonD,EAC/B,IAAKU,EACD,OAAOtiD,KAAKC,IAAI0xC,EAAS,GAE7B,MAAM6Q,EDjqGN,SAAoBxqD,GACpB,MAAM3B,EAAS,GACTwgB,EAAO7W,KAAK6W,KAAK7e,GACvB,IAAI4C,EACJ,IAAIA,EAAI,EAAGA,EAAIic,EAAMjc,IACb5C,EAAQ4C,GAAM,IACdvE,EAAOkD,KAAKqB,GACZvE,EAAOkD,KAAKvB,EAAQ4C,IAO5B,OAJIic,KAAiB,EAAPA,IACVxgB,EAAOkD,KAAKsd,GAEhBxgB,EAAOo2C,MAAK,CAACx2C,EAAGC,IAAID,EAAIC,IAAGyE,MACpBtE,CACX,CCkpGoBosD,CAAWH,GAC3B,IAAI,IAAI1nD,EAAI,EAAG4X,EAAOgwC,EAAQhoD,OAAS,EAAGI,EAAI4X,EAAM5X,IAAI,CACpD,MAAM2jC,EAASikB,EAAQ5nD,GACvB,GAAI2jC,EAASoT,EACT,OAAOpT,CAEd,CACD,OAAOv+B,KAAKC,IAAI0xC,EAAS,EAC7B,CAnCoB+Q,CAAiBZ,EAAcjjC,EAAO+iC,GACtD,GAAIK,EAAkB,EAAG,CACrB,IAAIrnD,EAAG4X,EACP,MAAMmwC,EAAkBV,EAAkB,EAAIjiD,KAAKJ,OAAO2Y,EAAO2pC,IAAUD,EAAkB,IAAM,KAEnG,IADAhwB,GAAKpT,EAAOsjC,EAAUxQ,EAAS5gC,GAAc4xC,GAAmB,EAAIT,EAAQS,EAAiBT,GACzFtnD,EAAI,EAAG4X,EAAOyvC,EAAkB,EAAGrnD,EAAI4X,EAAM5X,IAC7Cq3B,GAAKpT,EAAOsjC,EAAUxQ,EAASmQ,EAAalnD,GAAIknD,EAAalnD,EAAI,IAGrE,OADAq3B,GAAKpT,EAAOsjC,EAAUxQ,EAASp5B,EAAMxH,GAAc4xC,GAAmB9jC,EAAMrkB,OAAS+d,EAAOoqC,GACrFR,CACV,CAED,OADAlwB,GAAKpT,EAAOsjC,EAAUxQ,GACfwQ,CACX,CA8CC,SAASlwB,GAAKpT,EAAOsjC,EAAUxQ,EAASiR,EAAYC,GACjD,MAAMtrC,EAAQ7F,GAAekxC,EAAY,GACnCprC,EAAMxX,KAAKE,IAAIwR,GAAemxC,EAAUhkC,EAAMrkB,QAASqkB,EAAMrkB,QACnE,IACIA,EAAQI,EAAG23B,EADXvY,EAAQ,EAQZ,IANA23B,EAAU3xC,KAAKoiD,KAAKzQ,GAChBkR,IACAroD,EAASqoD,EAAWD,EACpBjR,EAAUn3C,EAASwF,KAAK2V,MAAMnb,EAASm3C,IAE3Cpf,EAAOhb,EACDgb,EAAO,GACTvY,IACAuY,EAAOvyB,KAAKJ,MAAM2X,EAAQyC,EAAQ23B,GAEtC,IAAI/2C,EAAIoF,KAAKC,IAAIsX,EAAO,GAAI3c,EAAI4c,EAAK5c,IAC7BA,IAAM23B,IACN4vB,EAAS5oD,KAAKslB,EAAMjkB,IACpBof,IACAuY,EAAOvyB,KAAKJ,MAAM2X,EAAQyC,EAAQ23B,GAG9C,CAeA,MACMmR,GAAiB,CAACjhC,EAAO8rB,EAAMvpB,IAAkB,QAATupB,GAA2B,SAATA,EAAkB9rB,EAAM8rB,GAAQvpB,EAASvC,EAAM8rB,GAAQvpB,EACjH2+B,GAAgB,CAACC,EAAanB,IAAgB7hD,KAAKE,IAAI2hD,GAAiBmB,EAAaA,GAC1F,SAASC,GAAOxyB,EAAKyyB,GAClB,MAAM7sD,EAAS,GACT8sD,EAAY1yB,EAAIj2B,OAAS0oD,EACzBj0C,EAAMwhB,EAAIj2B,OAChB,IAAII,EAAI,EACR,KAAMA,EAAIqU,EAAKrU,GAAKuoD,EAChB9sD,EAAOkD,KAAKk3B,EAAIzwB,KAAK2V,MAAM/a,KAE/B,OAAOvE,CACX,CACC,SAAS+sD,GAAoBvhC,EAAOxiB,EAAOgkD,GACxC,MAAM7oD,EAASqnB,EAAMhD,MAAMrkB,OACrB8oD,EAAatjD,KAAKE,IAAIb,EAAO7E,EAAS,GACtC+c,EAAQsK,EAAMiuB,YACdt4B,EAAMqK,EAAMkuB,UACZ16B,EAAU,KAChB,IACI+O,EADAm/B,EAAY1hC,EAAMirB,gBAAgBwW,GAEtC,KAAID,IAEIj/B,EADW,IAAX5pB,EACSwF,KAAKC,IAAIsjD,EAAYhsC,EAAOC,EAAM+rC,GAC1B,IAAVlkD,GACGwiB,EAAMirB,gBAAgB,GAAKyW,GAAa,GAExCA,EAAY1hC,EAAMirB,gBAAgBwW,EAAa,IAAM,EAEnEC,GAAaD,EAAajkD,EAAQ+kB,GAAUA,EACxCm/B,EAAYhsC,EAAQlC,GAAWkuC,EAAY/rC,EAAMnC,IAIzD,OAAOkuC,CACX,CAcC,SAASC,GAAkB7rD,GACxB,OAAOA,EAAQitB,UAAYjtB,EAAQktB,WAAa,CACpD,CACC,SAAS4+B,GAAe9rD,EAASy1B,GAC9B,IAAKz1B,EAAQwsB,QACT,OAAO,EAEX,MAAMxD,EAAOwM,GAAOx1B,EAAQgpB,KAAMyM,GAC5BtJ,EAAUoJ,GAAUv1B,EAAQmsB,SAElC,OADc5hB,GAAQvK,EAAQP,MAAQO,EAAQP,KAAKoD,OAAS,GAC7CmmB,EAAKE,WAAaiD,EAAQ8D,MAC7C,CAcA,SAAS87B,GAAWjqC,EAAOw+B,EAAU7lC,GAChC,IAAI9T,EAAMkb,GAAmBC,GAI9B,OAHIrH,GAAwB,UAAb6lC,IAAyB7lC,GAAwB,UAAb6lC,KAC/C35C,EA7Ea,CAACmb,GAAkB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA6E1EkqC,CAAarlD,IAEhBA,CACX,CAwCA,MAAMslD,WAAcC,GAChB,WAAA70C,CAAY2vB,GACRiQ,QACC1vC,KAAK4R,GAAK6tB,EAAI7tB,GACd5R,KAAKE,KAAOu/B,EAAIv/B,KAChBF,KAAKvH,aAAU6E,EACf0C,KAAK7D,IAAMsjC,EAAItjC,IACf6D,KAAK4f,MAAQ6f,EAAI7f,MACjB5f,KAAK6kB,SAAMvnB,EACX0C,KAAK+kB,YAASznB,EACd0C,KAAKglB,UAAO1nB,EACZ0C,KAAK8kB,WAAQxnB,EACb0C,KAAKkmB,WAAQ5oB,EACb0C,KAAK0oB,YAASprB,EACf0C,KAAK4kD,SAAW,CACZ5/B,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAEX/kB,KAAK6sB,cAAWvvB,EAChB0C,KAAK83B,eAAYx6B,EACjB0C,KAAK6kD,gBAAavnD,EAClB0C,KAAK8kD,mBAAgBxnD,EACrB0C,KAAK+kD,iBAAcznD,EACnB0C,KAAKglD,kBAAe1nD,EACpB0C,KAAKkb,UAAO5d,EACZ0C,KAAKilD,mBAAgB3nD,EACtB0C,KAAKgB,SAAM1D,EACX0C,KAAKe,SAAMzD,EACX0C,KAAKklD,YAAS5nD,EACb0C,KAAK2f,MAAQ,GACb3f,KAAKmlD,eAAiB,KACtBnlD,KAAKolD,YAAc,KACnBplD,KAAKqlD,YAAc,KACpBrlD,KAAK0tC,QAAU,EACf1tC,KAAKwiD,WAAa,EAClBxiD,KAAKslD,kBAAoB,GACxBtlD,KAAK4wC,iBAActzC,EACnB0C,KAAK6wC,eAAYvzC,EAClB0C,KAAK44C,gBAAiB,EACtB54C,KAAKulD,cAAWjoD,EAChB0C,KAAKwlD,cAAWloD,EAChB0C,KAAKylD,mBAAgBnoD,EACrB0C,KAAK0lD,mBAAgBpoD,EACrB0C,KAAK2lD,aAAe,EACpB3lD,KAAK4lD,aAAe,EACpB5lD,KAAKmtC,OAAS,GACdntC,KAAK6lD,mBAAoB,EACzB7lD,KAAKilC,cAAW3nC,CACnB,CACJ,IAAAgB,CAAK7F,GACEuH,KAAKvH,QAAUA,EAAQu4B,WAAWhxB,KAAKuoB,cACvCvoB,KAAKkb,KAAOziB,EAAQyiB,KACpBlb,KAAKwlD,SAAWxlD,KAAK4yB,MAAMn6B,EAAQuI,KACnChB,KAAKulD,SAAWvlD,KAAK4yB,MAAMn6B,EAAQsI,KACnCf,KAAK0lD,cAAgB1lD,KAAK4yB,MAAMn6B,EAAQqtD,cACxC9lD,KAAKylD,cAAgBzlD,KAAK4yB,MAAMn6B,EAAQstD,aAC3C,CACJ,KAAAnzB,CAAM0X,EAAKnqC,GACJ,OAAOmqC,CACV,CACJ,aAAAjvB,GACO,IAAImqC,SAAEA,EAAQD,SAAGA,EAAQG,cAAGA,EAAaD,cAAGA,GAAmBzlD,KAK/D,OAJAwlD,EAAWlzC,GAAgBkzC,EAAUpzC,OAAOuD,mBAC5C4vC,EAAWjzC,GAAgBizC,EAAUnzC,OAAOi3B,mBAC5Cqc,EAAgBpzC,GAAgBozC,EAAetzC,OAAOuD,mBACtD8vC,EAAgBnzC,GAAgBmzC,EAAerzC,OAAOi3B,mBAC/C,CACHroC,IAAKsR,GAAgBkzC,EAAUE,GAC/B3kD,IAAKuR,GAAgBizC,EAAUE,GAC/BtqC,WAAYhJ,GAAeqzC,GAC3BpqC,WAAYjJ,GAAeozC,GAElC,CACJ,SAAAvc,CAAUC,GACH,IACI3yB,GADAtV,IAAEA,EAAGD,IAAGA,EAAMoa,WAAAA,EAAaC,WAAAA,GAAgBpb,KAAKqb,gBAEpD,GAAIF,GAAcC,EACd,MAAO,CACHpa,MACAD,OAGR,MAAMilD,EAAQhmD,KAAKijC,0BACnB,IAAI,IAAIvnC,EAAI,EAAG4X,EAAO0yC,EAAM1qD,OAAQI,EAAI4X,IAAQ5X,EAC5C4a,EAAQ0vC,EAAMtqD,GAAGynC,WAAW6F,UAAUhpC,KAAMipC,GACvC9tB,IACDna,EAAMF,KAAKE,IAAIA,EAAKsV,EAAMtV,MAEzBoa,IACDra,EAAMD,KAAKC,IAAIA,EAAKuV,EAAMvV,MAKlC,OAFAC,EAAMoa,GAAcpa,EAAMD,EAAMA,EAAMC,EACtCD,EAAMoa,GAAcna,EAAMD,EAAMC,EAAMD,EAC/B,CACHC,IAAKsR,GAAgBtR,EAAKsR,GAAgBvR,EAAKC,IAC/CD,IAAKuR,GAAgBvR,EAAKuR,GAAgBtR,EAAKD,IAEtD,CACJ,UAAA86C,GACO,MAAO,CACH72B,KAAMhlB,KAAK+kD,aAAe,EAC1BlgC,IAAK7kB,KAAK6kD,YAAc,EACxB//B,MAAO9kB,KAAKglD,cAAgB,EAC5BjgC,OAAQ/kB,KAAK8kD,eAAiB,EAErC,CACJ,QAAAmB,GACO,OAAOjmD,KAAK2f,KACf,CACJ,SAAA4oB,GACO,MAAMpwC,EAAO6H,KAAK4f,MAAMznB,KACxB,OAAO6H,KAAKvH,QAAQ6vC,SAAWtoC,KAAK6vC,eAAiB13C,EAAK+tD,QAAU/tD,EAAKguD,UAAYhuD,EAAKmwC,QAAU,EACvG,CACJ,aAAA8d,CAAclc,EAAYlqC,KAAK4f,MAAMsqB,WAE9B,OADclqC,KAAKolD,cAAgBplD,KAAKolD,YAAcplD,KAAKqmD,mBAAmBnc,GAEjF,CACD,YAAA6T,GACI/9C,KAAKmtC,OAAS,GACdntC,KAAK6lD,mBAAoB,CAC5B,CACD,YAAAS,GACI3qD,GAASqE,KAAKvH,QAAQ6tD,aAAc,CAChCtmD,MAEP,CACJ,MAAAzE,CAAOsxB,EAAUiL,EAAWD,GACrB,MAAM1S,YAAEA,EAAWG,MAAGA,EAAQ3F,MAAOwiC,GAAcniD,KAAKvH,QAClD8tD,EAAapE,EAASoE,WAC5BvmD,KAAKsmD,eACLtmD,KAAK6sB,SAAWA,EAChB7sB,KAAK83B,UAAYA,EACjB93B,KAAK4kD,SAAW/sB,EAAUthC,OAAOP,OAAO,CACpCgvB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACT8S,GACH73B,KAAK2f,MAAQ,KACb3f,KAAKqlD,YAAc,KACnBrlD,KAAKmlD,eAAiB,KACtBnlD,KAAKolD,YAAc,KACnBplD,KAAKwmD,sBACLxmD,KAAKymD,gBACLzmD,KAAK0mD,qBACL1mD,KAAKwiD,WAAaxiD,KAAK6vC,eAAiB7vC,KAAKkmB,MAAQ2R,EAAQ7S,KAAO6S,EAAQ/S,MAAQ9kB,KAAK0oB,OAASmP,EAAQhT,IAAMgT,EAAQ9S,OACnH/kB,KAAK6lD,oBACN7lD,KAAK2mD,mBACL3mD,KAAK4mD,sBACL5mD,KAAK6mD,kBACL7mD,KAAKklD,ODntEb,SAAmB4B,EAAQxhC,EAAOH,GAClC,MAAMnkB,IAAEA,EAAGD,IAAGA,GAAS+lD,EACjB5I,EAASzrC,GAAY6S,GAAQvkB,EAAMC,GAAO,GAC1C+lD,EAAW,CAACjuD,EAAO+C,IAAMspB,GAAyB,IAAVrsB,EAAc,EAAIA,EAAQ+C,EACxE,MAAO,CACHmF,IAAK+lD,EAAS/lD,GAAMF,KAAKsV,IAAI8nC,IAC7Bn9C,IAAKgmD,EAAShmD,EAAKm9C,GAE3B,CC2sE0B8I,CAAUhnD,KAAMslB,EAAOH,GACrCnlB,KAAK6lD,mBAAoB,GAE7B7lD,KAAKinD,mBACLjnD,KAAK2f,MAAQ3f,KAAKknD,cAAgB,GAClClnD,KAAKmnD,kBACL,MAAMC,EAAkBb,EAAavmD,KAAK2f,MAAMrkB,OAChD0E,KAAKqnD,sBAAsBD,EAAkBrD,GAAO/jD,KAAK2f,MAAO4mC,GAAcvmD,KAAK2f,OACnF3f,KAAK8gC,YACL9gC,KAAKsnD,+BACLtnD,KAAKunD,yBACLvnD,KAAKwnD,8BACDrF,EAASl9B,UAAYk9B,EAAS17B,UAAgC,SAApB07B,EAASzuC,UACnD1T,KAAK2f,MAAQ8G,GAASzmB,KAAMA,KAAK2f,OACjC3f,KAAKqlD,YAAc,KACnBrlD,KAAKynD,iBAELL,GACApnD,KAAKqnD,sBAAsBrnD,KAAK2f,OAEpC3f,KAAK0nD,YACL1nD,KAAK2nD,MACL3nD,KAAK4nD,WACL5nD,KAAK6nD,aACR,CACJ,SAAA/mB,GACO,IACIuQ,EAAYE,EADZuW,EAAgB9nD,KAAKvH,QAAQya,QAE7BlT,KAAK6vC,gBACLwB,EAAarxC,KAAKglB,KAClBusB,EAAWvxC,KAAK8kB,QAEhBusB,EAAarxC,KAAK6kB,IAClB0sB,EAAWvxC,KAAK+kB,OAChB+iC,GAAiBA,GAErB9nD,KAAK4wC,YAAcS,EACnBrxC,KAAK6wC,UAAYU,EACjBvxC,KAAK44C,eAAiBkP,EACtB9nD,KAAK0tC,QAAU6D,EAAWF,EAC1BrxC,KAAK+nD,eAAiB/nD,KAAKvH,QAAQuvD,aACtC,CACD,WAAAH,GACIlsD,GAASqE,KAAKvH,QAAQovD,YAAa,CAC/B7nD,MAEP,CACD,mBAAAwmD,GACI7qD,GAASqE,KAAKvH,QAAQ+tD,oBAAqB,CACvCxmD,MAEP,CACD,aAAAymD,GACQzmD,KAAK6vC,gBACL7vC,KAAKkmB,MAAQlmB,KAAK6sB,SAClB7sB,KAAKglB,KAAO,EACZhlB,KAAK8kB,MAAQ9kB,KAAKkmB,QAElBlmB,KAAK0oB,OAAS1oB,KAAK83B,UACnB93B,KAAK6kB,IAAM,EACX7kB,KAAK+kB,OAAS/kB,KAAK0oB,QAEvB1oB,KAAK+kD,YAAc,EACnB/kD,KAAK6kD,WAAa,EAClB7kD,KAAKglD,aAAe,EACpBhlD,KAAK8kD,cAAgB,CACxB,CACD,kBAAA4B,GACI/qD,GAASqE,KAAKvH,QAAQiuD,mBAAoB,CACtC1mD,MAEP,CACD,UAAAioD,CAAWlwD,GACPiI,KAAK4f,MAAMsoC,cAAcnwD,EAAMiI,KAAKuoB,cACpC5sB,GAASqE,KAAKvH,QAAQV,GAAO,CACzBiI,MAEP,CACD,gBAAA2mD,GACI3mD,KAAKioD,WAAW,mBACnB,CACD,mBAAArB,GAAwB,CACxB,eAAAC,GACI7mD,KAAKioD,WAAW,kBACnB,CACD,gBAAAhB,GACIjnD,KAAKioD,WAAW,mBACnB,CACJ,UAAAf,GACO,MAAO,EACV,CACD,eAAAC,GACInnD,KAAKioD,WAAW,kBACnB,CACD,2BAAAE,GACIxsD,GAASqE,KAAKvH,QAAQ0vD,4BAA6B,CAC/CnoD,MAEP,CACJ,kBAAAooD,CAAmBzoC,GACZ,MAAMwiC,EAAWniD,KAAKvH,QAAQknB,MAC9B,IAAIjkB,EAAG4X,EAAM+qB,EACb,IAAI3iC,EAAI,EAAG4X,EAAOqM,EAAMrkB,OAAQI,EAAI4X,EAAM5X,IACtC2iC,EAAO1e,EAAMjkB,GACb2iC,EAAKuL,MAAQjuC,GAASwmD,EAASxmD,SAAU,CACrC0iC,EAAKvlC,MACL4C,EACAikB,GACD3f,KAEV,CACD,0BAAAqoD,GACI1sD,GAASqE,KAAKvH,QAAQ4vD,2BAA4B,CAC9CroD,MAEP,CACD,4BAAAsnD,GACI3rD,GAASqE,KAAKvH,QAAQ6uD,6BAA8B,CAChDtnD,MAEP,CACD,sBAAAunD,GACI,MAAM9uD,EAAUuH,KAAKvH,QACf0pD,EAAW1pD,EAAQknB,MACnB2oC,EAAWzE,GAAc7jD,KAAK2f,MAAMrkB,OAAQ7C,EAAQknB,MAAMgjC,eAC1Dv8B,EAAc+7B,EAAS/7B,aAAe,EACtCC,EAAc87B,EAAS97B,YAC7B,IACIT,EAAWkS,EAAWywB,EADtBtD,EAAgB7+B,EAEpB,IAAKpmB,KAAKwoD,eAAiBrG,EAASl9B,SAAWmB,GAAeC,GAAeiiC,GAAY,IAAMtoD,KAAK6vC,eAEhG,YADA7vC,KAAKilD,cAAgB7+B,GAGzB,MAAMqiC,EAAazoD,KAAK0oD,iBAClBC,EAAgBF,EAAWG,OAAO1iC,MAClC2iC,EAAiBJ,EAAWK,QAAQpgC,OACpCmE,EAAWjU,GAAY5Y,KAAK4f,MAAMsG,MAAQyiC,EAAe,EAAG3oD,KAAK6sB,UACvEjH,EAAYntB,EAAQysB,OAASllB,KAAK6sB,SAAWy7B,EAAWz7B,GAAYy7B,EAAW,GAC3EK,EAAgB,EAAI/iC,IACpBA,EAAYiH,GAAYy7B,GAAY7vD,EAAQysB,OAAS,GAAM,IAC3D4S,EAAY93B,KAAK83B,UAAYwsB,GAAkB7rD,EAAQ8sB,MAAQ48B,EAASv9B,QAAU2/B,GAAe9rD,EAAQ0tB,MAAOnmB,KAAK4f,MAAMnnB,QAAQgpB,MACnI8mC,EAAmBznD,KAAK6W,KAAKgxC,EAAgBA,EAAgBE,EAAiBA,GAC9E5D,EAAgB/tC,GAAUpW,KAAKE,IAAIF,KAAKioD,KAAKnwC,IAAa6vC,EAAWK,QAAQpgC,OAAS,GAAK9C,GAAY,EAAG,IAAK9kB,KAAKioD,KAAKnwC,GAAYkf,EAAYywB,GAAmB,EAAG,IAAMznD,KAAKioD,KAAKnwC,GAAYiwC,EAAiBN,GAAmB,EAAG,MAC1OtD,EAAgBnkD,KAAKC,IAAIqlB,EAAatlB,KAAKE,IAAIqlB,EAAa4+B,KAEhEjlD,KAAKilD,cAAgBA,CACxB,CACD,2BAAAuC,GACI7rD,GAASqE,KAAKvH,QAAQ+uD,4BAA6B,CAC/CxnD,MAEP,CACD,aAAAynD,GAAkB,CAClB,SAAAC,GACI/rD,GAASqE,KAAKvH,QAAQivD,UAAW,CAC7B1nD,MAEP,CACD,GAAA2nD,GACI,MAAM1R,EAAU,CACZ/vB,MAAO,EACPwC,OAAQ,IAEN9I,MAAEA,EAAQnnB,SAAWknB,MAAOwiC,EAAWh8B,MAAO6iC,EAAYzjC,KAAM0jC,IAAiBjpD,KACjFilB,EAAUjlB,KAAKwoD,aACf3Y,EAAe7vC,KAAK6vC,eAC1B,GAAI5qB,EAAS,CACT,MAAMikC,EAAc3E,GAAeyE,EAAWppC,EAAMnnB,QAAQgpB,MAQ5D,GAPIouB,GACAoG,EAAQ/vB,MAAQlmB,KAAK6sB,SACrBopB,EAAQvtB,OAAS47B,GAAkB2E,GAAYC,IAE/CjT,EAAQvtB,OAAS1oB,KAAK83B,UACtBme,EAAQ/vB,MAAQo+B,GAAkB2E,GAAYC,GAE9C/G,EAASl9B,SAAWjlB,KAAK2f,MAAMrkB,OAAQ,CACvC,MAAM0nD,MAAEA,EAAK3pC,KAAGA,EAAOuvC,OAAAA,EAASE,QAAAA,GAAa9oD,KAAK0oD,iBAC5CS,EAAiC,EAAnBhH,EAASv9B,QACvBwkC,EAAepyC,GAAUhX,KAAKilD,eAC9B7nC,EAAMtc,KAAKsc,IAAIgsC,GACfjtC,EAAMrb,KAAKqb,IAAIitC,GACrB,GAAIvZ,EAAc,CACd,MAAMwZ,EAAclH,EAAS77B,OAAS,EAAInK,EAAMysC,EAAO1iC,MAAQ9I,EAAM0rC,EAAQpgC,OAC7EutB,EAAQvtB,OAAS5nB,KAAKE,IAAIhB,KAAK83B,UAAWme,EAAQvtB,OAAS2gC,EAAcF,EAC7F,KAAuB,CACH,MAAMG,EAAanH,EAAS77B,OAAS,EAAIlJ,EAAMwrC,EAAO1iC,MAAQ/J,EAAM2sC,EAAQpgC,OAC5EutB,EAAQ/vB,MAAQplB,KAAKE,IAAIhB,KAAK6sB,SAAUopB,EAAQ/vB,MAAQojC,EAAaH,EACxE,CACDnpD,KAAKupD,kBAAkBvG,EAAO3pC,EAAM8C,EAAKiB,EAC5C,CACJ,CACDpd,KAAKwpD,iBACD3Z,GACA7vC,KAAKkmB,MAAQlmB,KAAK0tC,QAAU9tB,EAAMsG,MAAQlmB,KAAK4kD,SAAS5/B,KAAOhlB,KAAK4kD,SAAS9/B,MAC7E9kB,KAAK0oB,OAASutB,EAAQvtB,SAEtB1oB,KAAKkmB,MAAQ+vB,EAAQ/vB,MACrBlmB,KAAK0oB,OAAS1oB,KAAK0tC,QAAU9tB,EAAM8I,OAAS1oB,KAAK4kD,SAAS//B,IAAM7kB,KAAK4kD,SAAS7/B,OAErF,CACD,iBAAAwkC,CAAkBvG,EAAO3pC,EAAM8C,EAAKiB,GAChC,MAAQuC,OAAOpF,MAAEA,EAAQqK,QAAAA,GAAUm0B,SAAGA,GAAc/4C,KAAKvH,QACnDgxD,EAAmC,IAAvBzpD,KAAKilD,cACjByE,EAAgC,QAAb3Q,GAAoC,MAAd/4C,KAAKkb,KACpD,GAAIlb,KAAK6vC,eAAgB,CACrB,MAAM8Z,EAAa3pD,KAAK4tC,gBAAgB,GAAK5tC,KAAKglB,KAC5C4kC,EAAc5pD,KAAK8kB,MAAQ9kB,KAAK4tC,gBAAgB5tC,KAAK2f,MAAMrkB,OAAS,GAC1E,IAAIypD,EAAc,EACdC,EAAe,EACfyE,EACIC,GACA3E,EAAc3nC,EAAM4lC,EAAM98B,MAC1B8+B,EAAe7oC,EAAM9C,EAAKqP,SAE1Bq8B,EAAc5oC,EAAM6mC,EAAMt6B,OAC1Bs8B,EAAe5nC,EAAM/D,EAAK6M,OAEb,UAAV3L,EACPyqC,EAAe3rC,EAAK6M,MACH,QAAV3L,EACPwqC,EAAc/B,EAAM98B,MACH,UAAV3L,IACPwqC,EAAc/B,EAAM98B,MAAQ,EAC5B8+B,EAAe3rC,EAAK6M,MAAQ,GAEhClmB,KAAK+kD,YAAcjkD,KAAKC,KAAKgkD,EAAc4E,EAAa/kC,GAAW5kB,KAAKkmB,OAASlmB,KAAKkmB,MAAQyjC,GAAa,GAC3G3pD,KAAKglD,aAAelkD,KAAKC,KAAKikD,EAAe4E,EAAchlC,GAAW5kB,KAAKkmB,OAASlmB,KAAKkmB,MAAQ0jC,GAAc,EAC3H,KAAe,CACH,IAAI/E,EAAaxrC,EAAKqP,OAAS,EAC3Bo8B,EAAgB9B,EAAMt6B,OAAS,EACrB,UAAVnO,GACAsqC,EAAa,EACbC,EAAgB9B,EAAMt6B,QACL,QAAVnO,IACPsqC,EAAaxrC,EAAKqP,OAClBo8B,EAAgB,GAEpB9kD,KAAK6kD,WAAaA,EAAajgC,EAC/B5kB,KAAK8kD,cAAgBA,EAAgBlgC,CACxC,CACJ,CACJ,cAAA4kC,GACWxpD,KAAK4kD,WACL5kD,KAAK4kD,SAAS5/B,KAAOlkB,KAAKC,IAAIf,KAAK+kD,YAAa/kD,KAAK4kD,SAAS5/B,MAC9DhlB,KAAK4kD,SAAS//B,IAAM/jB,KAAKC,IAAIf,KAAK6kD,WAAY7kD,KAAK4kD,SAAS//B,KAC5D7kB,KAAK4kD,SAAS9/B,MAAQhkB,KAAKC,IAAIf,KAAKglD,aAAchlD,KAAK4kD,SAAS9/B,OAChE9kB,KAAK4kD,SAAS7/B,OAASjkB,KAAKC,IAAIf,KAAK8kD,cAAe9kD,KAAK4kD,SAAS7/B,QAEzE,CACD,QAAA6iC,GACIjsD,GAASqE,KAAKvH,QAAQmvD,SAAU,CAC5B5nD,MAEP,CACJ,YAAA6vC,GACO,MAAM30B,KAAEA,EAAO69B,SAAAA,GAAc/4C,KAAKvH,QAClC,MAAoB,QAAbsgD,GAAmC,WAAbA,GAAkC,MAAT79B,CACzD,CACJ,UAAA2uC,GACO,OAAO7pD,KAAKvH,QAAQ4iD,QACvB,CACJ,qBAAAgM,CAAsB1nC,GAGf,IAAIjkB,EAAG4X,EACP,IAHAtT,KAAKmoD,8BACLnoD,KAAKooD,mBAAmBzoC,GAEpBjkB,EAAI,EAAG4X,EAAOqM,EAAMrkB,OAAQI,EAAI4X,EAAM5X,IAClCmW,GAAc8N,EAAMjkB,GAAGkuC,SACvBjqB,EAAMvf,OAAO1E,EAAG,GAChB4X,IACA5X,KAGRsE,KAAKqoD,4BACR,CACJ,cAAAK,GACO,IAAID,EAAazoD,KAAKqlD,YACtB,IAAKoD,EAAY,CACb,MAAMlC,EAAavmD,KAAKvH,QAAQknB,MAAM4mC,WACtC,IAAI5mC,EAAQ3f,KAAK2f,MACb4mC,EAAa5mC,EAAMrkB,SACnBqkB,EAAQokC,GAAOpkC,EAAO4mC,IAE1BvmD,KAAKqlD,YAAcoD,EAAazoD,KAAK8pD,mBAAmBnqC,EAAOA,EAAMrkB,OAAQ0E,KAAKvH,QAAQknB,MAAMgjC,cACnG,CACD,OAAO8F,CACV,CACJ,kBAAAqB,CAAmBnqC,EAAOrkB,EAAQqnD,GAC3B,MAAMxmD,IAAEA,EAAMmpD,kBAAmByE,GAAY/pD,KACvCgqD,EAAS,GACTC,EAAU,GACVhG,EAAYnjD,KAAK2V,MAAMnb,EAASuoD,GAAcvoD,EAAQqnD,IAC5D,IAEIjnD,EAAG8S,EAAGqZ,EAAM+hB,EAAOsgB,EAAUC,EAAYziC,EAAO/F,EAAYuE,EAAOwC,EAAQ0hC,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAI5uD,EAAI,EAAGA,EAAIJ,EAAQI,GAAKuoD,EAAU,CAUlC,GATAra,EAAQjqB,EAAMjkB,GAAGkuC,MACjBsgB,EAAWlqD,KAAKuqD,wBAAwB7uD,GACxCS,EAAIslB,KAAO0oC,EAAaD,EAAS7iC,OACjCK,EAAQqiC,EAAOI,GAAcJ,EAAOI,IAAe,CAC/ChyD,KAAM,CAAE,EACRgvB,GAAI,IAERxF,EAAauoC,EAASvoC,WACtBuE,EAAQwC,EAAS,EACZ7W,GAAc+3B,IAAW5mC,GAAQ4mC,IAG/B,GAAI5mC,GAAQ4mC,GACf,IAAIp7B,EAAI,EAAGqZ,EAAO+hB,EAAMtuC,OAAQkT,EAAIqZ,IAAQrZ,EACxC47C,EAAexgB,EAAMp7B,GAChBqD,GAAcu4C,IAAiBpnD,GAAQonD,KACxClkC,EAAQgB,GAAa/qB,EAAKurB,EAAMvvB,KAAMuvB,EAAMP,GAAIjB,EAAOkkC,GACvD1hC,GAAU/G,QAPlBuE,EAAQgB,GAAa/qB,EAAKurB,EAAMvvB,KAAMuvB,EAAMP,GAAIjB,EAAO0jB,GACvDlhB,EAAS/G,EAUbqoC,EAAO3vD,KAAK6rB,GACZ+jC,EAAQ5vD,KAAKquB,GACb2hC,EAAkBvpD,KAAKC,IAAImlB,EAAOmkC,GAClCC,EAAmBxpD,KAAKC,IAAI2nB,EAAQ4hC,EACvC,EA7iBR,SAAwBP,EAAQzuD,GAC7B0X,GAAK+2C,GAASriC,IACV,MAAMP,EAAKO,EAAMP,GACXa,EAAQb,EAAG7rB,OAAS,EAC1B,IAAII,EACJ,GAAIssB,EAAQ1sB,EAAQ,CAChB,IAAII,EAAI,EAAGA,EAAIssB,IAAStsB,SACbgsB,EAAMvvB,KAAKgvB,EAAGzrB,IAEzByrB,EAAG/mB,OAAO,EAAG4nB,EAChB,IAET,CAkiBQL,CAAeoiC,EAAQzuD,GACvB,MAAMstD,EAASoB,EAAOpwD,QAAQywD,GACxBvB,EAAUmB,EAAQrwD,QAAQ0wD,GAC1BE,EAAWC,IAAO,CAChBvkC,MAAO8jC,EAAOS,IAAQ,EACtB/hC,OAAQuhC,EAAQQ,IAAQ,IAEhC,MAAO,CACHzH,MAAOwH,EAAQ,GACfnxC,KAAMmxC,EAAQlvD,EAAS,GACvBstD,OAAQ4B,EAAQ5B,GAChBE,QAAS0B,EAAQ1B,GACjBkB,SACAC,UAEP,CACJ,gBAAApgB,CAAiB/wC,GACV,OAAOA,CACV,CACJ,gBAAAwiB,CAAiBxiB,EAAOqH,GACjB,OAAO4oC,GACV,CACJ,gBAAAyI,CAAiBtpB,GAAS,CAC1B,eAAA0lB,CAAgBztC,GACT,MAAMwf,EAAQ3f,KAAK2f,MACnB,OAAIxf,EAAQ,GAAKA,EAAQwf,EAAMrkB,OAAS,EAC7B,KAEJ0E,KAAKsb,iBAAiBqE,EAAMxf,GAAOrH,MAC7C,CACJ,kBAAAw4C,CAAmBoZ,GACR1qD,KAAK44C,iBACL8R,EAAU,EAAIA,GAElB,MAAMxiC,EAAQloB,KAAK4wC,YAAc8Z,EAAU1qD,KAAK0tC,QAChD,OD1uHG90B,GC0uHgB5Y,KAAK+nD,eAAiB9/B,GAAYjoB,KAAK4f,MAAOsI,EAAO,GAAKA,GD1uHtD,MAAO,MC2uHjC,CACJ,kBAAAyiC,CAAmBziC,GACZ,MAAMwiC,GAAWxiC,EAAQloB,KAAK4wC,aAAe5wC,KAAK0tC,QAClD,OAAO1tC,KAAK44C,eAAiB,EAAI8R,EAAUA,CAC9C,CACJ,YAAA9a,GACO,OAAO5vC,KAAKsb,iBAAiBtb,KAAK4qD,eACrC,CACJ,YAAAA,GACO,MAAM5pD,IAAEA,EAAGD,IAAGA,GAASf,KACvB,OAAOgB,EAAM,GAAKD,EAAM,EAAIA,EAAMC,EAAM,GAAKD,EAAM,EAAIC,EAAM,CAChE,CACJ,UAAAunB,CAAWpoB,GACJ,MAAMwf,EAAQ3f,KAAK2f,OAAS,GAC5B,GAAIxf,GAAS,GAAKA,EAAQwf,EAAMrkB,OAAQ,CACpC,MAAM+iC,EAAO1e,EAAMxf,GACnB,OAAOk+B,EAAK4G,WAAa5G,EAAK4G,SAnkB1C,SAA2BhT,EAAQ9xB,EAAOk+B,GACtC,OAAO5P,GAAcwD,EAAQ,CACzBoM,OACAl+B,QACAD,KAAM,QAEd,CA6jBqD2qD,CAAkB7qD,KAAKuoB,aAAcpoB,EAAOk+B,GACxF,CACD,OAAOr+B,KAAKilC,WAAajlC,KAAKilC,SA1kB3BxW,GA0kByDzuB,KAAK4f,MAAM2I,aA1kB9C,CACzB5F,MAykBqF3iB,KAxkBrFE,KAAM,UAykBT,CACJ,SAAAmiD,GACO,MAAMyI,EAAc9qD,KAAKvH,QAAQknB,MAC3BorC,EAAM/zC,GAAUhX,KAAKilD,eACrB7nC,EAAMtc,KAAKsV,IAAItV,KAAKsc,IAAI2tC,IACxB5uC,EAAMrb,KAAKsV,IAAItV,KAAKqb,IAAI4uC,IACxBtC,EAAazoD,KAAK0oD,iBAClB9jC,EAAUkmC,EAAYpkC,iBAAmB,EACzC/jB,EAAI8lD,EAAaA,EAAWG,OAAO1iC,MAAQtB,EAAU,EACrD/jB,EAAI4nD,EAAaA,EAAWK,QAAQpgC,OAAS9D,EAAU,EAC7D,OAAO5kB,KAAK6vC,eAAiBhvC,EAAIuc,EAAMza,EAAIwZ,EAAMxZ,EAAIya,EAAMvc,EAAIsb,EAAMtb,EAAIsb,EAAMxZ,EAAIya,EAAMvc,EAAIuc,EAAMza,EAAIwZ,CAC1G,CACJ,UAAAqsC,GACO,MAAMvjC,EAAUjlB,KAAKvH,QAAQwsB,QAC7B,MAAgB,SAAZA,IACSA,EAENjlB,KAAKijC,0BAA0B3nC,OAAS,CAClD,CACJ,qBAAA0vD,CAAsB9gB,GACf,MAAMhvB,EAAOlb,KAAKkb,KACZ0E,EAAQ5f,KAAK4f,MACbnnB,EAAUuH,KAAKvH,SACf8sB,KAAEA,EAAOwzB,SAAAA,SAAWhzB,GAAYttB,EAChCysB,EAASK,EAAKL,OACd2qB,EAAe7vC,KAAK6vC,eAEpBiU,EADQ9jD,KAAK2f,MACOrkB,QAAU4pB,EAAS,EAAI,GAC3C+lC,EAAK3G,GAAkB/+B,GACvBxL,EAAQ,GACRmxC,EAAanlC,EAAOiL,WAAWhxB,KAAKuoB,cACpC4iC,EAAYD,EAAWjmC,QAAUimC,EAAWhlC,MAAQ,EACpDklC,EAAgBD,EAAY,EAC5BE,EAAmB,SAASnjC,GAC9B,OAAOD,GAAYrI,EAAOsI,EAAOijC,EAC7C,EACQ,IAAIG,EAAa5vD,EAAG2oD,EAAWkH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbhT,EACAuS,EAAcD,EAAiBrrD,KAAK+kB,QACpC0mC,EAAMzrD,KAAK+kB,OAASkmC,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBnhB,EAAUrlB,KAAOumC,EACvCW,EAAK7hB,EAAUnlB,YACZ,GAAiB,WAAbg0B,EACPuS,EAAcD,EAAiBrrD,KAAK6kB,KACpCgnC,EAAK3hB,EAAUrlB,IACfknC,EAAKV,EAAiBnhB,EAAUnlB,QAAUqmC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM3rD,KAAK6kB,IAAMomC,OACd,GAAiB,SAAblS,EACPuS,EAAcD,EAAiBrrD,KAAK8kB,OACpC0mC,EAAMxrD,KAAK8kB,MAAQmmC,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBnhB,EAAUllB,MAAQomC,EACxCU,EAAK5hB,EAAUplB,WACZ,GAAiB,UAAbi0B,EACPuS,EAAcD,EAAiBrrD,KAAKglB,MACpC4mC,EAAK1hB,EAAUllB,KACf8mC,EAAKT,EAAiBnhB,EAAUplB,OAASsmC,EACzCI,EAAMF,EAAcF,EACpBM,EAAM1rD,KAAKglB,KAAOimC,OACf,GAAa,MAAT/vC,EAAc,CACrB,GAAiB,WAAb69B,EACAuS,EAAcD,GAAkBnhB,EAAUrlB,IAAMqlB,EAAUnlB,QAAU,EAAI,SACrE,GAAI7S,GAAS6mC,GAAW,CAC3B,MAAMiT,EAAiBz1D,OAAOkK,KAAKs4C,GAAU,GACvCjgD,EAAQigD,EAASiT,GACvBV,EAAcD,EAAiBrrD,KAAK4f,MAAMgD,OAAOopC,GAAgB1wC,iBAAiBxiB,GACrF,CACD+yD,EAAK3hB,EAAUrlB,IACfknC,EAAK7hB,EAAUnlB,OACf0mC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CACxB,MAAe,GAAa,MAAT/vC,EAAc,CACrB,GAAiB,WAAb69B,EACAuS,EAAcD,GAAkBnhB,EAAUllB,KAAOklB,EAAUplB,OAAS,QACjE,GAAI5S,GAAS6mC,GAAW,CAC3B,MAAMiT,EAAiBz1D,OAAOkK,KAAKs4C,GAAU,GACvCjgD,EAAQigD,EAASiT,GACvBV,EAAcD,EAAiBrrD,KAAK4f,MAAMgD,OAAOopC,GAAgB1wC,iBAAiBxiB,GACrF,CACD0yD,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK1hB,EAAUllB,KACf8mC,EAAK5hB,EAAUplB,KAClB,CACD,MAAMmnC,EAAQz5C,GAAe/Z,EAAQknB,MAAMgjC,cAAemB,GACpDoI,EAAOprD,KAAKC,IAAI,EAAGD,KAAKoiD,KAAKY,EAAcmI,IACjD,IAAIvwD,EAAI,EAAGA,EAAIooD,EAAapoD,GAAKwwD,EAAK,CAClC,MAAMptD,EAAUkB,KAAKuoB,WAAW7sB,GAC1BywD,EAAc5mC,EAAKyL,WAAWlyB,GAC9BstD,EAAoBrmC,EAAOiL,WAAWlyB,GACtC0mB,EAAY2mC,EAAY3mC,UACxB6mC,EAAYF,EAAY77C,MACxBusB,EAAauvB,EAAkBpmC,MAAQ,GACvC8W,EAAmBsvB,EAAkBnmC,WACrCL,EAAYumC,EAAYvmC,UACxBE,EAAYqmC,EAAYrmC,UACxBwmC,EAAiBH,EAAYG,gBAAkB,GAC/CC,EAAuBJ,EAAYI,qBACzClI,EAAYH,GAAoBlkD,KAAMtE,EAAGwpB,QACvB5nB,IAAd+mD,IAGJkH,EAAmBtjC,GAAYrI,EAAOykC,EAAW7+B,GAC7CqqB,EACA2b,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAE1BxxC,EAAM1f,KAAK,CACPmxD,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACA7lC,MAAOV,EACPlV,MAAO+7C,EACPxvB,aACAC,mBACAlX,YACAE,YACAwmC,iBACAC,yBAEP,CAGD,OAFAvsD,KAAK2lD,aAAe7B,EACpB9jD,KAAK4lD,aAAe0F,EACbvxC,CACV,CACJ,kBAAAssC,CAAmBnc,GACZ,MAAMhvB,EAAOlb,KAAKkb,KACZziB,EAAUuH,KAAKvH,SACfsgD,SAAEA,EAAWp5B,MAAOmrC,GAAiBryD,EACrCo3C,EAAe7vC,KAAK6vC,eACpBlwB,EAAQ3f,KAAK2f,OACbpF,MAAEA,EAAKuM,WAAGA,EAAUlC,QAAGA,EAAO0B,OAAGA,GAAYwkC,EAC7CG,EAAK3G,GAAkB7rD,EAAQ8sB,MAC/BinC,EAAiBvB,EAAKrmC,EACtB6nC,EAAkBnmC,GAAU1B,EAAU4nC,EACtCrjC,GAAYnS,GAAUhX,KAAKilD,eAC3BlrC,EAAQ,GACd,IAAIre,EAAG4X,EAAM+qB,EAAMuL,EAAOlmC,EAAG8Q,EAAGgY,EAAWtE,EAAOzG,EAAME,EAAY+qC,EAAWC,EAC3ElgC,EAAe,SACnB,GAAiB,QAAbssB,EACAvkC,EAAIxU,KAAK+kB,OAAS0nC,EAClBjgC,EAAYxsB,KAAK4sD,+BACd,GAAiB,WAAb7T,EACPvkC,EAAIxU,KAAK6kB,IAAM4nC,EACfjgC,EAAYxsB,KAAK4sD,+BACd,GAAiB,SAAb7T,EAAqB,CAC5B,MAAM35C,EAAMY,KAAK6sD,wBAAwB5B,GACzCz+B,EAAYptB,EAAIotB,UAChB9oB,EAAItE,EAAIsE,CACpB,MAAe,GAAiB,UAAbq1C,EAAsB,CAC7B,MAAM35C,EAAMY,KAAK6sD,wBAAwB5B,GACzCz+B,EAAYptB,EAAIotB,UAChB9oB,EAAItE,EAAIsE,CACpB,MAAe,GAAa,MAATwX,EAAc,CACrB,GAAiB,WAAb69B,EACAvkC,GAAK01B,EAAUrlB,IAAMqlB,EAAUnlB,QAAU,EAAIynC,OAC1C,GAAIt6C,GAAS6mC,GAAW,CAC3B,MAAMiT,EAAiBz1D,OAAOkK,KAAKs4C,GAAU,GACvCjgD,EAAQigD,EAASiT,GACvBx3C,EAAIxU,KAAK4f,MAAMgD,OAAOopC,GAAgB1wC,iBAAiBxiB,GAAS0zD,CACnE,CACDhgC,EAAYxsB,KAAK4sD,yBAC7B,MAAe,GAAa,MAAT1xC,EAAc,CACrB,GAAiB,WAAb69B,EACAr1C,GAAKwmC,EAAUllB,KAAOklB,EAAUplB,OAAS,EAAI0nC,OAC1C,GAAIt6C,GAAS6mC,GAAW,CAC3B,MAAMiT,EAAiBz1D,OAAOkK,KAAKs4C,GAAU,GACvCjgD,EAAQigD,EAASiT,GACvBtoD,EAAI1D,KAAK4f,MAAMgD,OAAOopC,GAAgB1wC,iBAAiBxiB,EAC1D,CACD0zB,EAAYxsB,KAAK6sD,wBAAwB5B,GAAIz+B,SAChD,CACY,MAATtR,IACc,UAAVX,EACAkS,EAAe,MACE,QAAVlS,IACPkS,EAAe,WAGvB,MAAMg8B,EAAazoD,KAAK0oD,iBACxB,IAAIhtD,EAAI,EAAG4X,EAAOqM,EAAMrkB,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC1C2iC,EAAO1e,EAAMjkB,GACbkuC,EAAQvL,EAAKuL,MACb,MAAMuiB,EAAcrB,EAAY95B,WAAWhxB,KAAKuoB,WAAW7sB,IAC3DwsB,EAAQloB,KAAK4tC,gBAAgBlyC,GAAKovD,EAAYnkC,YAC9ClF,EAAOzhB,KAAKuqD,wBAAwB7uD,GACpCimB,EAAaF,EAAKE,WAClB+qC,EAAY1pD,GAAQ4mC,GAASA,EAAMtuC,OAAS,EAC5C,MAAMwxD,EAAYJ,EAAY,EACxBp8C,EAAQ67C,EAAY77C,MACpBgc,EAAc6/B,EAAY3lC,gBAC1B6F,EAAc8/B,EAAY5lC,gBAChC,IAuCIoG,EAvCAogC,EAAgBvgC,EAwCpB,GAvCIqjB,GACAnsC,EAAIwkB,EACc,UAAdsE,IAEIugC,EADArxD,IAAM4X,EAAO,EACItT,KAAKvH,QAAQya,QAAoB,OAAV,QAC3B,IAANxX,EACUsE,KAAKvH,QAAQya,QAAmB,QAAT,OAExB,UAKhBy5C,EAFS,QAAb5T,EACmB,SAAfjyB,GAAsC,IAAbqC,GACXujC,EAAY/qC,EAAaA,EAAa,EAC9B,WAAfmF,GACO2hC,EAAWK,QAAQpgC,OAAS,EAAIokC,EAAYnrC,EAAaA,GAEzD8mC,EAAWK,QAAQpgC,OAAS/G,EAAa,EAGxC,SAAfmF,GAAsC,IAAbqC,EACZxH,EAAa,EACJ,WAAfmF,EACM2hC,EAAWK,QAAQpgC,OAAS,EAAIokC,EAAYnrC,EAE5C8mC,EAAWK,QAAQpgC,OAASgkC,EAAY/qC,EAGzD2E,IACAqmC,IAAe,GAEF,IAAbxjC,GAAmBgjC,EAAYplC,oBAC/BrjB,GAAKie,EAAa,EAAI7gB,KAAKqb,IAAIgN,MAGnC3U,EAAI0T,EACJykC,GAAc,EAAID,GAAa/qC,EAAa,GAG5CwqC,EAAYplC,kBAAmB,CAC/B,MAAMimC,EAAeh/B,GAAUm+B,EAAYllC,iBACrCyB,EAAS+/B,EAAWwB,QAAQvuD,GAC5BwqB,EAAQuiC,EAAWuB,OAAOtuD,GAChC,IAAImpB,EAAM8nC,EAAaK,EAAanoC,IAChCG,EAAO,EAAIgoC,EAAahoC,KAC5B,OAAOyH,GACH,IAAK,SACD5H,GAAO6D,EAAS,EAChB,MACJ,IAAK,SACD7D,GAAO6D,EAGf,OAAO8D,GACH,IAAK,SACDxH,GAAQkB,EAAQ,EAChB,MACJ,IAAK,QACDlB,GAAQkB,EACR,MACJ,IAAK,QACGxqB,IAAM4X,EAAO,EACb0R,GAAQkB,EACDxqB,EAAI,IACXspB,GAAQkB,EAAQ,GAI5ByG,EAAW,CACP3H,OACAH,MACAqB,MAAOA,EAAQ8mC,EAAa9mC,MAC5BwC,OAAQA,EAASskC,EAAatkC,OAC9BpY,MAAO67C,EAAYnlC,cAE1B,CACDjN,EAAM1f,KAAK,CACPuvC,QACAnoB,OACAkrC,aACAl0D,QAAS,CACL0wB,WACA7Y,QACAgc,cACAD,cACAG,UAAWugC,EACXtgC,eACAF,YAAa,CACT7oB,EACA8Q,GAEJmY,aAGX,CACD,OAAO5S,CACV,CACD,uBAAA6yC,GACI,MAAM7T,SAAEA,EAAWp5B,MAAAA,GAAW3f,KAAKvH,QAEnC,IADkBue,GAAUhX,KAAKilD,eAE7B,MAAoB,QAAblM,EAAqB,OAAS,QAEzC,IAAIx+B,EAAQ,SAQZ,MAPoB,UAAhBoF,EAAMpF,MACNA,EAAQ,OACe,QAAhBoF,EAAMpF,MACbA,EAAQ,QACe,UAAhBoF,EAAMpF,QACbA,EAAQ,SAELA,CACV,CACD,uBAAAsyC,CAAwB5B,GACpB,MAAMlS,SAAEA,EAAWp5B,OAAOmH,WAAEA,EAAUR,OAAGA,EAAM1B,QAAGA,IAAgB5kB,KAAKvH,QAEjE+zD,EAAiBvB,EAAKrmC,EACtBgkC,EAFa5oD,KAAK0oD,iBAEEE,OAAO1iC,MACjC,IAAIsG,EACA9oB,EAoDJ,MAnDiB,SAAbq1C,EACIzyB,GACA5iB,EAAI1D,KAAK8kB,MAAQF,EACE,SAAfkC,EACA0F,EAAY,OACU,WAAf1F,GACP0F,EAAY,SACZ9oB,GAAKklD,EAAS,IAEdp8B,EAAY,QACZ9oB,GAAKklD,KAGTllD,EAAI1D,KAAK8kB,MAAQ0nC,EACE,SAAf1lC,EACA0F,EAAY,QACU,WAAf1F,GACP0F,EAAY,SACZ9oB,GAAKklD,EAAS,IAEdp8B,EAAY,OACZ9oB,EAAI1D,KAAKglB,OAGG,UAAb+zB,EACHzyB,GACA5iB,EAAI1D,KAAKglB,KAAOJ,EACG,SAAfkC,EACA0F,EAAY,QACU,WAAf1F,GACP0F,EAAY,SACZ9oB,GAAKklD,EAAS,IAEdp8B,EAAY,OACZ9oB,GAAKklD,KAGTllD,EAAI1D,KAAKglB,KAAOwnC,EACG,SAAf1lC,EACA0F,EAAY,OACU,WAAf1F,GACP0F,EAAY,SACZ9oB,GAAKklD,EAAS,IAEdp8B,EAAY,QACZ9oB,EAAI1D,KAAK8kB,QAIjB0H,EAAY,QAET,CACHA,YACA9oB,IAEP,CACJ,iBAAAupD,GACO,GAAIjtD,KAAKvH,QAAQknB,MAAM2G,OACnB,OAEJ,MAAM1G,EAAQ5f,KAAK4f,MACbm5B,EAAW/4C,KAAKvH,QAAQsgD,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAChB,CACHl0B,IAAK,EACLG,KAAMhlB,KAAKglB,KACXD,OAAQnF,EAAM8I,OACd5D,MAAO9kB,KAAK8kB,OAGH,QAAbi0B,GAAmC,WAAbA,EACf,CACHl0B,IAAK7kB,KAAK6kB,IACVG,KAAM,EACND,OAAQ/kB,KAAK+kB,OACbD,MAAOlF,EAAMsG,YALrB,CAQH,CACJ,cAAAgnC,GACO,MAAM/wD,IAAEA,EAAM1D,SAASwoB,gBAAEA,GAAkB+D,KAAGA,EAAOH,IAAAA,QAAMqB,EAAKwC,OAAGA,GAAY1oB,KAC3EihB,IACA9kB,EAAIyrB,OACJzrB,EAAI2vB,UAAY7K,EAChB9kB,EAAI+vB,SAASlH,EAAMH,EAAKqB,EAAOwC,GAC/BvsB,EAAI4rB,UAEX,CACD,oBAAA2pB,CAAqB54C,GACjB,MAAMysB,EAAOvlB,KAAKvH,QAAQ8sB,KAC1B,IAAKvlB,KAAKwoD,eAAiBjjC,EAAKN,QAC5B,OAAO,EAEX,MACM9kB,EADQH,KAAK2f,MACCwtC,WAAWt8C,GAAIA,EAAE/X,QAAUA,IAC/C,GAAIqH,GAAS,EAAG,CAEZ,OADaolB,EAAKyL,WAAWhxB,KAAKuoB,WAAWpoB,IACjCqlB,SACf,CACD,OAAO,CACV,CACJ,QAAA4nC,CAASljB,GACF,MAAM3kB,EAAOvlB,KAAKvH,QAAQ8sB,KACpBppB,EAAM6D,KAAK7D,IACX4d,EAAQ/Z,KAAKmlD,iBAAmBnlD,KAAKmlD,eAAiBnlD,KAAKgrD,sBAAsB9gB,IACvF,IAAIxuC,EAAG4X,EACP,MAAM+5C,EAAW,CAAC/pD,EAAIC,EAAI9J,KACjBA,EAAMysB,OAAUzsB,EAAM6W,QAG3BnU,EAAIyrB,OACJzrB,EAAIqpB,UAAY/rB,EAAMysB,MACtB/pB,EAAI0vB,YAAcpyB,EAAM6W,MACxBnU,EAAImxD,YAAY7zD,EAAMojC,YAAc,IACpC1gC,EAAIoxD,eAAiB9zD,EAAMqjC,iBAC3B3gC,EAAIqtB,YACJrtB,EAAIytB,OAAOtmB,EAAGI,EAAGJ,EAAGkR,GACpBrY,EAAI0tB,OAAOtmB,EAAGG,EAAGH,EAAGiR,GACpBrY,EAAI8tB,SACJ9tB,EAAI4rB,UAAS,EAEjB,GAAIxC,EAAKN,QACL,IAAIvpB,EAAI,EAAG4X,EAAOyG,EAAMze,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC1C,MAAM4Z,EAAOyE,EAAMre,GACf6pB,EAAKE,iBACL4nC,EAAS,CACL3pD,EAAG4R,EAAKs2C,GACRp3C,EAAGc,EAAKu2C,IACT,CACCnoD,EAAG4R,EAAKw2C,GACRt3C,EAAGc,EAAKy2C,IACTz2C,GAEHiQ,EAAKG,WACL2nC,EAAS,CACL3pD,EAAG4R,EAAKk2C,IACRh3C,EAAGc,EAAKm2C,KACT,CACC/nD,EAAG4R,EAAKo2C,IACRl3C,EAAGc,EAAKq2C,KACT,CACCr7C,MAAOgF,EAAKwQ,UACZI,MAAO5Q,EAAKsQ,UACZiX,WAAYvnB,EAAKg3C,eACjBxvB,iBAAkBxnB,EAAKi3C,sBAGlC,CAER,CACJ,UAAAiB,GACO,MAAM5tC,MAAEA,EAAQzjB,IAAAA,EAAM1D,SAASstB,OAAEA,OAASR,IAAavlB,KACjDkrD,EAAanlC,EAAOiL,WAAWhxB,KAAKuoB,cACpC4iC,EAAYplC,EAAOd,QAAUimC,EAAWhlC,MAAQ,EACtD,IAAKilC,EACD,OAEJ,MAAMsC,EAAgBloC,EAAKyL,WAAWhxB,KAAKuoB,WAAW,IAAI/C,UACpD8lC,EAActrD,KAAK4lD,aACzB,IAAIgG,EAAIE,EAAID,EAAIE,EACZ/rD,KAAK6vC,gBACL+b,EAAK3jC,GAAYrI,EAAO5f,KAAKglB,KAAMmmC,GAAaA,EAAY,EAC5DW,EAAK7jC,GAAYrI,EAAO5f,KAAK8kB,MAAO2oC,GAAiBA,EAAgB,EACrE5B,EAAKE,EAAKT,IAEVO,EAAK5jC,GAAYrI,EAAO5f,KAAK6kB,IAAKsmC,GAAaA,EAAY,EAC3DY,EAAK9jC,GAAYrI,EAAO5f,KAAK+kB,OAAQ0oC,GAAiBA,EAAgB,EACtE7B,EAAKE,EAAKR,GAEdnvD,EAAIyrB,OACJzrB,EAAIqpB,UAAY0lC,EAAWhlC,MAC3B/pB,EAAI0vB,YAAcq/B,EAAW56C,MAC7BnU,EAAIqtB,YACJrtB,EAAIytB,OAAOgiC,EAAIC,GACf1vD,EAAI0tB,OAAOiiC,EAAIC,GACf5vD,EAAI8tB,SACJ9tB,EAAI4rB,SACP,CACJ,UAAA2lC,CAAWxjB,GAEJ,IADoBlqC,KAAKvH,QAAQknB,MAChBsF,QACb,OAEJ,MAAM9oB,EAAM6D,KAAK7D,IACXiuB,EAAOpqB,KAAKitD,oBACd7iC,GACAE,GAASnuB,EAAKiuB,GAElB,MAAMrQ,EAAQ/Z,KAAKomD,cAAclc,GACjC,IAAK,MAAM50B,KAAQyE,EAAM,CACrB,MAAM4zC,EAAoBr4C,EAAK7c,QACzByxD,EAAW50C,EAAKmM,KAGtB0K,GAAWhwB,EAFGmZ,EAAKs0B,MAEI,EADbt0B,EAAKq3C,WACczC,EAAUyD,EAC1C,CACGvjC,GACAG,GAAWpuB,EAElB,CACJ,SAAAyxD,GACO,MAAMzxD,IAAEA,EAAM1D,SAASsgD,SAAEA,EAAW5yB,MAAAA,UAAQjT,IAAgBlT,KAC5D,IAAKmmB,EAAMlB,QACP,OAEJ,MAAMxD,EAAOwM,GAAO9H,EAAM1E,MACpBmD,EAAUoJ,GAAU7H,EAAMvB,SAC1BrK,EAAQ4L,EAAM5L,MACpB,IAAI2K,EAASzD,EAAKE,WAAa,EACd,WAAbo3B,GAAsC,WAAbA,GAAyB7mC,GAAS6mC,IAC3D7zB,GAAUN,EAAQG,OACd/hB,GAAQmjB,EAAMjuB,QACdgtB,GAAUzD,EAAKE,YAAcwE,EAAMjuB,KAAKoD,OAAS,KAGrD4pB,GAAUN,EAAQC,IAEtB,MAAMgpC,OAAEA,EAAMC,OAAGA,EAASjhC,SAAAA,WAAW1D,GAnlC7C,SAAmBxG,EAAOuC,EAAQ6zB,EAAUx+B,GACxC,MAAMsK,IAAEA,EAAGG,KAAGA,EAAOD,OAAAA,EAASD,MAAAA,EAAQlF,MAAAA,GAAW+C,GAC3CunB,UAAEA,EAAStnB,OAAGA,GAAYhD,EAChC,IACIiN,EAAUghC,EAAQC,EADlB3kC,EAAW,EAEf,MAAMT,EAAS3D,EAASF,EAClBqB,EAAQpB,EAAQE,EACtB,GAAIrC,EAAMktB,eAAgB,CAEtB,GADAge,EAASrzC,GAAeD,EAAOyK,EAAMF,GACjC5S,GAAS6mC,GAAW,CACpB,MAAMiT,EAAiBz1D,OAAOkK,KAAKs4C,GAAU,GACvCjgD,EAAQigD,EAASiT,GACvB8B,EAASlrC,EAAOopC,GAAgB1wC,iBAAiBxiB,GAAS4vB,EAASxD,CAC/E,MACY4oC,EADoB,WAAb/U,GACG7O,EAAUnlB,OAASmlB,EAAUrlB,KAAO,EAAI6D,EAASxD,EAElD0+B,GAAejhC,EAAOo2B,EAAU7zB,GAE7C2H,EAAW/H,EAAQE,CAC3B,KAAW,CACH,GAAI9S,GAAS6mC,GAAW,CACpB,MAAMiT,EAAiBz1D,OAAOkK,KAAKs4C,GAAU,GACvCjgD,EAAQigD,EAASiT,GACvB6B,EAASjrC,EAAOopC,GAAgB1wC,iBAAiBxiB,GAASotB,EAAQhB,CAC9E,MACY2oC,EADoB,WAAb9U,GACG7O,EAAUllB,KAAOklB,EAAUplB,OAAS,EAAIoB,EAAQhB,EAEjD0+B,GAAejhC,EAAOo2B,EAAU7zB,GAE7C4oC,EAAStzC,GAAeD,EAAOwK,EAAQF,GACvCsE,EAAwB,SAAb4vB,GAAuBljC,GAAUA,EAC/C,CACD,MAAO,CACHg4C,SACAC,SACAjhC,WACA1D,WAER,CA6iC2D4kC,CAAU/tD,KAAMklB,EAAQ6zB,EAAUx+B,GACrF4R,GAAWhwB,EAAKgqB,EAAMjuB,KAAM,EAAG,EAAGupB,EAAM,CACpCnR,MAAO6V,EAAM7V,MACbuc,WACA1D,WACAqD,UAAWg4B,GAAWjqC,EAAOw+B,EAAU7lC,GACvCuZ,aAAc,SACdF,YAAa,CACTshC,EACAC,IAGX,CACD,IAAA5vB,CAAKgM,GACIlqC,KAAKwoD,eAGVxoD,KAAKktD,iBACLltD,KAAKotD,SAASljB,GACdlqC,KAAKwtD,aACLxtD,KAAK4tD,YACL5tD,KAAK0tD,WAAWxjB,GACnB,CACJ,OAAA8S,GACO,MAAM5xB,EAAOprB,KAAKvH,QACZu1D,EAAK5iC,EAAKzL,OAASyL,EAAKzL,MAAMs9B,GAAK,EACnCgR,EAAKz7C,GAAe4Y,EAAK7F,MAAQ6F,EAAK7F,KAAK03B,GAAI,GAC/CiR,EAAK17C,GAAe4Y,EAAKrF,QAAUqF,EAAKrF,OAAOk3B,EAAG,GACxD,OAAKj9C,KAAKwoD,cAAgBxoD,KAAKk+B,OAASwmB,GAAM5yC,UAAUosB,KAUjD,CACH,CACI+e,EAAGgR,EACH/vB,KAAOgM,IACHlqC,KAAKktD,iBACLltD,KAAKotD,SAASljB,GACdlqC,KAAK4tD,WAAW,GAGxB,CACI3Q,EAAGiR,EACHhwB,KAAM,KACFl+B,KAAKwtD,YAAY,GAGzB,CACIvQ,EAAG+Q,EACH9vB,KAAOgM,IACHlqC,KAAK0tD,WAAWxjB,EAAU,IA3B3B,CACH,CACI+S,EAAG+Q,EACH9vB,KAAOgM,IACHlqC,KAAKk+B,KAAKgM,EAAU,GA2BvC,CACJ,uBAAAjH,CAAwB/iC,GACjB,MAAM8lD,EAAQhmD,KAAK4f,MAAMo5B,+BACnBmV,EAASnuD,KAAKkb,KAAO,SACrB/jB,EAAS,GACf,IAAIuE,EAAG4X,EACP,IAAI5X,EAAI,EAAG4X,EAAO0yC,EAAM1qD,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC1C,MAAMgf,EAAOsrC,EAAMtqD,GACfgf,EAAKyzC,KAAYnuD,KAAK4R,IAAQ1R,GAAQwa,EAAKxa,OAASA,GACpD/I,EAAOkD,KAAKqgB,EAEnB,CACD,OAAOvjB,CACV,CACJ,uBAAAozD,CAAwBpqD,GAEjB,OAAO8tB,GADMjuB,KAAKvH,QAAQknB,MAAMqR,WAAWhxB,KAAKuoB,WAAWpoB,IACxCshB,KACtB,CACJ,UAAA2sC,GACO,MAAMC,EAAWruD,KAAKuqD,wBAAwB,GAAG5oC,WACjD,OAAQ3hB,KAAK6vC,eAAiB7vC,KAAKkmB,MAAQlmB,KAAK0oB,QAAU2lC,CAC7D,EAGL,MAAMC,GACF,WAAAx+C,CAAY5P,EAAM0gB,EAAOoC,GACrBhjB,KAAKE,KAAOA,EACZF,KAAK4gB,MAAQA,EACb5gB,KAAKgjB,SAAWA,EAChBhjB,KAAK+Z,MAAQxjB,OAAOC,OAAO,KAC9B,CACD,SAAA+3D,CAAUruD,GACN,OAAO3J,OAAOub,UAAU08C,cAAcx8C,KAAKhS,KAAKE,KAAK4R,UAAW5R,EAAK4R,UACxE,CACJ,QAAA28C,CAASn5C,GACF,MAAM/F,EAAQhZ,OAAO65B,eAAe9a,GACpC,IAAIo5C,GAiEZ,SAA2Bn/C,GACvB,MAAO,OAAQA,GAAS,aAAcA,CAC1C,EAlEYo/C,CAAkBp/C,KAClBm/C,EAAc1uD,KAAKyuD,SAASl/C,IAEhC,MAAMwK,EAAQ/Z,KAAK+Z,MACbnI,EAAK0D,EAAK1D,GACVgP,EAAQ5gB,KAAK4gB,MAAQ,IAAMhP,EACjC,IAAKA,EACD,MAAM,IAAI3X,MAAM,2BAA6Bqb,GAEjD,OAAI1D,KAAMmI,IAGVA,EAAMnI,GAAM0D,EAyBpB,SAA0BA,EAAMsL,EAAO8tC,GACnC,MAAME,EAAe56C,GAAMzd,OAAOC,OAAO,MAAO,CAC5Ck4D,EAAc/qC,GAASzE,IAAIwvC,GAAe,CAAE,EAC5C/qC,GAASzE,IAAI0B,GACbtL,EAAKqO,WAETA,GAAShqB,IAAIinB,EAAOguC,GAChBt5C,EAAKu5C,eAOb,SAAuBjuC,EAAOkuC,GAC1Bv4D,OAAOkK,KAAKquD,GAAQn4D,SAASogB,IACzB,MAAMg4C,EAAgBh4C,EAASnC,MAAM,KAC/Bo6C,EAAaD,EAActzD,MAC3BwzD,EAAc,CAChBruC,GACF0sB,OAAOyhB,GAAe39B,KAAK,KACvBzc,EAAQm6C,EAAO/3C,GAAUnC,MAAM,KAC/BuO,EAAaxO,EAAMlZ,MACnBynB,EAAcvO,EAAMyc,KAAK,KAC/BzN,GAASV,MAAMgsC,EAAaD,EAAY9rC,EAAaC,EAAW,GAExE,CAlBQ+rC,CAActuC,EAAOtL,EAAKu5C,eAE1Bv5C,EAAKjc,aACLsqB,GAASZ,SAASnC,EAAOtL,EAAKjc,YAEtC,CArCQ81D,CAAiB75C,EAAMsL,EAAO8tC,GAC1B1uD,KAAKgjB,UACLW,GAASX,SAAS1N,EAAK1D,GAAI0D,EAAKoL,YALzBE,CAQd,CACJ,GAAA1B,CAAItN,GACG,OAAO5R,KAAK+Z,MAAMnI,EACrB,CACJ,UAAAw9C,CAAW95C,GACJ,MAAMyE,EAAQ/Z,KAAK+Z,MACbnI,EAAK0D,EAAK1D,GACVgP,EAAQ5gB,KAAK4gB,MACfhP,KAAMmI,UACCA,EAAMnI,GAEbgP,GAAShP,KAAM+R,GAAS/C,YACjB+C,GAAS/C,GAAOhP,GACnB5R,KAAKgjB,iBACEtC,GAAU9O,GAG5B,EAiCL,MAAMy9C,GACF,WAAAv/C,GACI9P,KAAK42C,YAAc,IAAI0X,GAAcjqB,GAAmB,YAAY,GACpErkC,KAAKuhB,SAAW,IAAI+sC,GAAc3J,GAAS,YAC3C3kD,KAAKyiB,QAAU,IAAI6rC,GAAc/3D,OAAQ,WACzCyJ,KAAK4iB,OAAS,IAAI0rC,GAAc5J,GAAO,UACvC1kD,KAAKsvD,iBAAmB,CACpBtvD,KAAK42C,YACL52C,KAAK4iB,OACL5iB,KAAKuhB,SAEZ,CACJ,GAAA1lB,IAAOgX,GACA7S,KAAKuvD,MAAM,WAAY18C,EAC1B,CACD,MAAAosB,IAAUpsB,GACN7S,KAAKuvD,MAAM,aAAc18C,EAC5B,CACJ,cAAA28C,IAAkB38C,GACX7S,KAAKuvD,MAAM,WAAY18C,EAAM7S,KAAK42C,YACrC,CACJ,WAAApR,IAAe3yB,GACR7S,KAAKuvD,MAAM,WAAY18C,EAAM7S,KAAKuhB,SACrC,CACJ,UAAAkuC,IAAc58C,GACP7S,KAAKuvD,MAAM,WAAY18C,EAAM7S,KAAKyiB,QACrC,CACJ,SAAAitC,IAAa78C,GACN7S,KAAKuvD,MAAM,WAAY18C,EAAM7S,KAAK4iB,OACrC,CACJ,aAAA+sC,CAAc/9C,GACP,OAAO5R,KAAK4vD,KAAKh+C,EAAI5R,KAAK42C,YAAa,aAC1C,CACJ,UAAAoB,CAAWpmC,GACJ,OAAO5R,KAAK4vD,KAAKh+C,EAAI5R,KAAKuhB,SAAU,UACvC,CACJ,SAAAsuC,CAAUj+C,GACH,OAAO5R,KAAK4vD,KAAKh+C,EAAI5R,KAAKyiB,QAAS,SACtC,CACJ,QAAAqtC,CAASl+C,GACF,OAAO5R,KAAK4vD,KAAKh+C,EAAI5R,KAAK4iB,OAAQ,QACrC,CACJ,iBAAAmtC,IAAqBl9C,GACd7S,KAAKuvD,MAAM,aAAc18C,EAAM7S,KAAK42C,YACvC,CACJ,cAAAoZ,IAAkBn9C,GACX7S,KAAKuvD,MAAM,aAAc18C,EAAM7S,KAAKuhB,SACvC,CACJ,aAAA0uC,IAAiBp9C,GACV7S,KAAKuvD,MAAM,aAAc18C,EAAM7S,KAAKyiB,QACvC,CACJ,YAAAytC,IAAgBr9C,GACT7S,KAAKuvD,MAAM,aAAc18C,EAAM7S,KAAK4iB,OACvC,CACJ,KAAA2sC,CAAM7uB,EAAQ7tB,EAAMs9C,GACb,IACOt9C,GACLlc,SAASy5D,IACP,MAAMC,EAAMF,GAAiBnwD,KAAKswD,oBAAoBF,GAClDD,GAAiBE,EAAI9B,UAAU6B,IAAQC,IAAQrwD,KAAKyiB,SAAW2tC,EAAIx+C,GACnE5R,KAAKuwD,MAAM7vB,EAAQ2vB,EAAKD,GAExBp9C,GAAKo9C,GAAM96C,IACP,MAAMk7C,EAAUL,GAAiBnwD,KAAKswD,oBAAoBh7C,GAC1DtV,KAAKuwD,MAAM7vB,EAAQ8vB,EAASl7C,EAAK,GAExC,GAER,CACJ,KAAAi7C,CAAM7vB,EAAQqX,EAAUh+C,GACjB,MAAM02D,EAAcz7C,GAAY0rB,GAChC/kC,GAAS5B,EAAU,SAAW02D,GAAc,GAAI12D,GAChDg+C,EAASrX,GAAQ3mC,GACjB4B,GAAS5B,EAAU,QAAU02D,GAAc,GAAI12D,EAClD,CACJ,mBAAAu2D,CAAoBpwD,GACb,IAAI,IAAIxE,EAAI,EAAGA,EAAIsE,KAAKsvD,iBAAiBh0D,OAAQI,IAAI,CACjD,MAAM20D,EAAMrwD,KAAKsvD,iBAAiB5zD,GAClC,GAAI20D,EAAI9B,UAAUruD,GACd,OAAOmwD,CAEd,CACD,OAAOrwD,KAAKyiB,OACf,CACJ,IAAAmtC,CAAKh+C,EAAIu+C,EAAejwD,GACjB,MAAMoV,EAAO66C,EAAcjxC,IAAItN,GAC/B,QAAatU,IAATgY,EACA,MAAM,IAAIrb,MAAM,IAAM2X,EAAK,yBAA2B1R,EAAO,KAEjE,OAAOoV,CACV,EAEL,IAAIyiC,GAA2B,IAAIsX,GAEnC,MAAMqB,GACF,WAAA5gD,GACI9P,KAAK2wD,MAAQ,EAChB,CACJ,MAAAC,CAAOhxC,EAAOixC,EAAMh+C,EAAMhV,GACN,eAATgzD,IACA7wD,KAAK2wD,MAAQ3wD,KAAK8wD,mBAAmBlxC,GAAO,GAC5C5f,KAAKs9B,QAAQt9B,KAAK2wD,MAAO/wC,EAAO,YAEpC,MAAMvmB,EAAcwE,EAASmC,KAAK8gB,aAAalB,GAAO/hB,OAAOA,GAAUmC,KAAK8gB,aAAalB,GACnFzoB,EAAS6I,KAAKs9B,QAAQjkC,EAAaumB,EAAOixC,EAAMh+C,GAKtD,MAJa,iBAATg+C,IACA7wD,KAAKs9B,QAAQjkC,EAAaumB,EAAO,QACjC5f,KAAKs9B,QAAQt9B,KAAK2wD,MAAO/wC,EAAO,cAE7BzoB,CACV,CACJ,OAAAmmC,CAAQjkC,EAAaumB,EAAOixC,EAAMh+C,GAC3BA,EAAOA,GAAQ,GACf,IAAK,MAAMk+C,KAAc13D,EAAY,CACjC,MAAM23D,EAASD,EAAWC,OAO1B,IAAyC,IAArCr1D,GANWq1D,EAAOH,GACP,CACXjxC,EACA/M,EACAk+C,EAAWt4D,SAEcu4D,IAAqBn+C,EAAKo+C,WACnD,OAAO,CAEd,CACD,OAAO,CACV,CACD,UAAAC,GACSr/C,GAAc7R,KAAKmtC,UACpBntC,KAAKmxD,UAAYnxD,KAAKmtC,OACtBntC,KAAKmtC,YAAS7vC,EAErB,CACJ,YAAAwjB,CAAalB,GACN,GAAI5f,KAAKmtC,OACL,OAAOntC,KAAKmtC,OAEhB,MAAM9zC,EAAc2G,KAAKmtC,OAASntC,KAAK8wD,mBAAmBlxC,GAE1D,OADA5f,KAAKoxD,oBAAoBxxC,GAClBvmB,CACV,CACD,kBAAAy3D,CAAmBlxC,EAAO8hB,GACtB,MAAMd,EAAShhB,GAASA,EAAMghB,OACxBnoC,EAAU+Z,GAAeouB,EAAOnoC,SAAWmoC,EAAOnoC,QAAQgqB,QAAS,CAAA,GACnEA,EAWb,SAAoBme,GACjB,MAAMywB,EAAW,CAAA,EACX5uC,EAAU,GACVhiB,EAAOlK,OAAOkK,KAAKs3C,GAASt1B,QAAQ1I,OAC1C,IAAI,IAAIre,EAAI,EAAGA,EAAI+E,EAAKnF,OAAQI,IAC5B+mB,EAAQpoB,KAAK09C,GAAS8X,UAAUpvD,EAAK/E,KAEzC,MAAMe,EAAQmkC,EAAOne,SAAW,GAChC,IAAI,IAAI/mB,EAAI,EAAGA,EAAIe,EAAMnB,OAAQI,IAAI,CACjC,MAAMs1D,EAASv0D,EAAMf,IACY,IAA7B+mB,EAAQ7oB,QAAQo3D,KAChBvuC,EAAQpoB,KAAK22D,GACbK,EAASL,EAAOp/C,KAAM,EAE7B,CACD,MAAO,CACH6Q,UACA4uC,WAER,CA9BwBC,CAAW1wB,GAC3B,OAAmB,IAAZnoC,GAAsBipC,EAuCrC,SAA2B9hB,GAAO6C,QAAEA,EAAU4uC,SAAAA,GAAa54D,EAASipC,GAChE,MAAMvqC,EAAS,GACT2H,EAAU8gB,EAAM2I,aACtB,IAAK,MAAMyoC,KAAUvuC,EAAQ,CACzB,MAAM7Q,EAAKo/C,EAAOp/C,GACZwZ,EAAOmmC,GAAQ94D,EAAQmZ,GAAK8vB,GACrB,OAATtW,GAGJj0B,EAAOkD,KAAK,CACR22D,SACAv4D,QAAS+4D,GAAW5xC,EAAMghB,OAAQ,CAC9BowB,SACAv0D,MAAO40D,EAASz/C,IACjBwZ,EAAMtsB,IAEhB,CACD,OAAO3H,CACX,CAzDgDs6D,CAAkB7xC,EAAO6C,EAAShqB,EAASipC,GAAhD,EACtC,CACJ,mBAAA0vB,CAAoBxxC,GACb,MAAM8xC,EAAsB1xD,KAAKmxD,WAAa,GACxC93D,EAAc2G,KAAKmtC,OACnBkL,EAAO,CAACthD,EAAGC,IAAID,EAAE8G,QAAQ6F,IAAK1M,EAAE26D,MAAMn9C,GAAI9Q,EAAEstD,OAAOp/C,KAAO4C,EAAEw8C,OAAOp/C,OACzE5R,KAAKs9B,QAAQ+a,EAAKqZ,EAAqBr4D,GAAcumB,EAAO,QAC5D5f,KAAKs9B,QAAQ+a,EAAKh/C,EAAaq4D,GAAsB9xC,EAAO,QAC/D,EAsBL,SAAS2xC,GAAQ94D,EAASipC,GACtB,OAAKA,IAAmB,IAAZjpC,GAGI,IAAZA,EACO,GAEJA,EALI,IAMf,CAoBA,SAAS+4D,GAAW5wB,GAAQowB,OAAEA,EAASv0D,MAAAA,GAAU2uB,EAAMtsB,GACnD,MAAM2B,EAAOmgC,EAAOgxB,gBAAgBZ,GAC9BpiC,EAASgS,EAAOmH,gBAAgB3c,EAAM3qB,GAI5C,OAHIhE,GAASu0D,EAAOrtC,UAChBiL,EAAOv0B,KAAK22D,EAAOrtC,UAEhBid,EAAOoH,eAAepZ,EAAQ9vB,EAAS,CAC1C,IACD,CACC8yB,YAAY,EACZC,WAAW,EACXH,SAAS,GAEjB,CAEA,SAASmgC,GAAa3xD,EAAMzH,GACxB,MAAMq5D,EAAkBnuC,GAASxC,SAASjhB,IAAS,CAAA,EAEnD,QADwBzH,EAAQ0oB,UAAY,CAAA,GAAIjhB,IAAS,IACnC8hB,WAAavpB,EAAQupB,WAAa8vC,EAAgB9vC,WAAa,GACzF,CAaA,SAAS+vC,GAAcngD,GACnB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC5B,OAAOA,CAEf,CASA,SAASogD,GAAcpgD,KAAOqgD,GAC1B,GAAIF,GAAcngD,GACd,OAAOA,EAEX,IAAK,MAAMwZ,KAAQ6mC,EAAa,CAC5B,MAAM/2C,EAAOkQ,EAAKlQ,OAZL,SADK69B,EAayB3tB,EAAK2tB,WAZb,WAAbA,EACf,IAEM,SAAbA,GAAoC,UAAbA,EAChB,SADX,IASiEnnC,EAAGtW,OAAS,GAAKy2D,GAAcngD,EAAG,GAAG7C,eAClG,GAAImM,EACA,OAAOA,CAEd,CAjBL,IAA0B69B,EAkBtB,MAAM,IAAI9+C,MAAM,6BAA6B2X,uDACjD,CACA,SAASsgD,GAAmBtgD,EAAIsJ,EAAMyqB,GAClC,GAAIA,EAAQzqB,EAAO,YAActJ,EAC7B,MAAO,CACHsJ,OAGZ,CAUA,SAASi3C,GAAiBvxB,EAAQnoC,GAC9B,MAAM25D,EAAgB1xC,GAAUkgB,EAAO1gC,OAAS,CAC5C0iB,OAAQ,CAAE,GAERyvC,EAAe55D,EAAQmqB,QAAU,GACjC0vC,EAAiBT,GAAajxB,EAAO1gC,KAAMzH,GAC3CmqB,EAASrsB,OAAOC,OAAO,MA8C7B,OA7CAD,OAAOkK,KAAK4xD,GAAc17D,SAASib,IAC/B,MAAM2gD,EAAYF,EAAazgD,GAC/B,IAAKM,GAASqgD,GACV,OAAOpkC,QAAQqkC,MAAM,0CAA0C5gD,KAEnE,GAAI2gD,EAAU3hC,OACV,OAAOzC,QAAQC,KAAK,kDAAkDxc,KAE1E,MAAMsJ,EAAO82C,GAAcpgD,EAAI2gD,EAxBvC,SAAkC3gD,EAAIgvB,GAClC,GAAIA,EAAOzoC,MAAQyoC,EAAOzoC,KAAKgpB,SAAU,CACrC,MAAMsxC,EAAU7xB,EAAOzoC,KAAKgpB,SAAStjB,QAAQf,GAAIA,EAAEipC,UAAYn0B,GAAM9U,EAAEmpC,UAAYr0B,IACnF,GAAI6gD,EAAQn3D,OACR,OAAO42D,GAAmBtgD,EAAI,IAAK6gD,EAAQ,KAAOP,GAAmBtgD,EAAI,IAAK6gD,EAAQ,GAE7F,CACD,MAAO,EACX,CAgBkDC,CAAyB9gD,EAAIgvB,GAASjd,GAASf,OAAO2vC,EAAUryD,OACpGyyD,EA5Dd,SAAmCz3C,EAAM8G,GACrC,OAAO9G,IAAS8G,EAAY,UAAY,SAC5C,CA0D0B4wC,CAA0B13C,EAAMo3C,GAC5CO,EAAsBT,EAAcxvC,QAAU,GACpDA,EAAOhR,GAAMwC,GAAQ7d,OAAOC,OAAO,MAAO,CACtC,CACI0kB,QAEJq3C,EACAM,EAAoB33C,GACpB23C,EAAoBF,IACtB,IAEN/xB,EAAOzoC,KAAKgpB,SAASxqB,SAASgvC,IAC1B,MAAMzlC,EAAOylC,EAAQzlC,MAAQ0gC,EAAO1gC,KAC9B8hB,EAAY2jB,EAAQ3jB,WAAa6vC,GAAa3xD,EAAMzH,GAEpDo6D,GADkBnyC,GAAUxgB,IAAS,CAAA,GACC0iB,QAAU,GACtDrsB,OAAOkK,KAAKoyD,GAAqBl8D,SAASm8D,IACtC,MAAM53C,EAtFlB,SAAmCtJ,EAAIoQ,GACnC,IAAI9G,EAAOtJ,EAMX,MALW,YAAPA,EACAsJ,EAAO8G,EACO,YAAPpQ,IACPsJ,EAAqB,MAAd8G,EAAoB,IAAM,KAE9B9G,CACX,CA8EyB63C,CAA0BD,EAAW9wC,GAC5CpQ,EAAK+zB,EAAQzqB,EAAO,WAAaA,EACvC0H,EAAOhR,GAAMgR,EAAOhR,IAAOrb,OAAOC,OAAO,MACzC4d,GAAQwO,EAAOhR,GAAK,CAChB,CACIsJ,QAEJm3C,EAAazgD,GACbihD,EAAoBC,IACtB,GACJ,IAENv8D,OAAOkK,KAAKmiB,GAAQjsB,SAAS6C,IACzB,MAAMmpB,EAAQC,EAAOppB,GACrB4a,GAAQuO,EAAO,CACXgB,GAASf,OAAOD,EAAMziB,MACtByjB,GAAShB,OACX,IAECC,CACX,CACA,SAASowC,GAAYpyB,GACjB,MAAMnoC,EAAUmoC,EAAOnoC,UAAYmoC,EAAOnoC,QAAU,CAAA,GACpDA,EAAQgqB,QAAUjQ,GAAe/Z,EAAQgqB,QAAS,CAAE,GACpDhqB,EAAQmqB,OAASuvC,GAAiBvxB,EAAQnoC,EAC9C,CACA,SAASw6D,GAAS96D,GAId,OAHAA,EAAOA,GAAQ,IACVgpB,SAAWhpB,EAAKgpB,UAAY,GACjChpB,EAAKmwC,OAASnwC,EAAKmwC,QAAU,GACtBnwC,CACX,CAOA,MAAM+6D,GAAW,IAAIn0D,IACfo0D,GAAa,IAAIj4D,IACvB,SAASk4D,GAAWt0C,EAAUu0C,GAC1B,IAAI5yD,EAAOyyD,GAASh0C,IAAIJ,GAMxB,OALKre,IACDA,EAAO4yD,IACPH,GAASv5D,IAAImlB,EAAUre,GACvB0yD,GAAWt3D,IAAI4E,IAEZA,CACX,CACA,MAAM6yD,GAAa,CAAC35D,EAAK4G,EAAK/G,KAC1B,MAAM4xB,EAAO3W,GAAiBlU,EAAK/G,QACtB8D,IAAT8tB,GACAzxB,EAAIkC,IAAIuvB,EACX,EAEL,MAAMmoC,GACF,WAAAzjD,CAAY8wB,GACR5gC,KAAKwzD,QAzBb,SAAoB5yB,GAIhB,OAHAA,EAASA,GAAU,IACZzoC,KAAO86D,GAASryB,EAAOzoC,MAC9B66D,GAAYpyB,GACLA,CACX,CAoBuB6yB,CAAW7yB,GAC1B5gC,KAAK0zD,YAAc,IAAI30D,IACvBiB,KAAK2zD,eAAiB,IAAI50D,GAC7B,CACD,YAAIsiB,GACA,OAAOrhB,KAAKwzD,QAAQnyC,QACvB,CACD,QAAInhB,GACA,OAAOF,KAAKwzD,QAAQtzD,IACvB,CACD,QAAIA,CAAKA,GACLF,KAAKwzD,QAAQtzD,KAAOA,CACvB,CACD,QAAI/H,GACA,OAAO6H,KAAKwzD,QAAQr7D,IACvB,CACD,QAAIA,CAAKA,GACL6H,KAAKwzD,QAAQr7D,KAAO86D,GAAS96D,EAChC,CACD,WAAIM,GACA,OAAOuH,KAAKwzD,QAAQ/6D,OACvB,CACD,WAAIA,CAAQA,GACRuH,KAAKwzD,QAAQ/6D,QAAUA,CAC1B,CACD,WAAIgqB,GACA,OAAOziB,KAAKwzD,QAAQ/wC,OACvB,CACD,MAAAlnB,GACI,MAAMqlC,EAAS5gC,KAAKwzD,QACpBxzD,KAAK4zD,aACLZ,GAAYpyB,EACf,CACD,UAAAgzB,GACI5zD,KAAK0zD,YAAY53D,QACjBkE,KAAK2zD,eAAe73D,OACvB,CACJ,gBAAAgsC,CAAiB+rB,GACV,OAAOT,GAAWS,GAAa,IAAI,CAC3B,CACI,YAAYA,IACZ,MAGf,CACJ,yBAAA5oB,CAA0B4oB,EAAa7oB,GAChC,OAAOooB,GAAW,GAAGS,gBAA0B7oB,KAAc,IAAI,CACzD,CACI,YAAY6oB,iBAA2B7oB,IACvC,eAAeA,KAEnB,CACI,YAAY6oB,IACZ,MAGf,CACJ,uBAAAjpB,CAAwBipB,EAAanpB,GAC9B,OAAO0oB,GAAW,GAAGS,KAAenpB,KAAe,IAAI,CAC/C,CACI,YAAYmpB,cAAwBnpB,IACpC,YAAYmpB,IACZ,YAAYnpB,IACZ,MAGf,CACJ,eAAAknB,CAAgBZ,GACT,MAAMp/C,EAAKo/C,EAAOp/C,GAElB,OAAOwhD,GAAW,GADLpzD,KAAKE,eACkB0R,KAAM,IAAI,CACtC,CACI,WAAWA,OACRo/C,EAAO8C,wBAA0B,MAGnD,CACJ,aAAAC,CAAcC,EAAWC,GAClB,MAAMP,EAAc1zD,KAAK0zD,YACzB,IAAIhsC,EAAQgsC,EAAYx0C,IAAI80C,GAK5B,OAJKtsC,IAASusC,IACVvsC,EAAQ,IAAI3oB,IACZ20D,EAAY/5D,IAAIq6D,EAAWtsC,IAExBA,CACV,CACJ,eAAAqgB,CAAgBisB,EAAWE,EAAUD,GAC9B,MAAMx7D,QAAEA,EAAOyH,KAAGA,GAAUF,KACtB0nB,EAAQ1nB,KAAK+zD,cAAcC,EAAWC,GACtC9vB,EAASzc,EAAMxI,IAAIg1C,GACzB,GAAI/vB,EACA,OAAOA,EAEX,MAAMvV,EAAS,IAAI1zB,IACnBg5D,EAASv9D,SAAS8J,IACVuzD,IACAplC,EAAO/yB,IAAIm4D,GACXvzD,EAAK9J,SAAS6C,GAAM85D,GAAW1kC,EAAQolC,EAAWx6D,MAEtDiH,EAAK9J,SAAS6C,GAAM85D,GAAW1kC,EAAQn2B,EAASe,KAChDiH,EAAK9J,SAAS6C,GAAM85D,GAAW1kC,EAAQlO,GAAUxgB,IAAS,GAAI1G,KAC9DiH,EAAK9J,SAAS6C,GAAM85D,GAAW1kC,EAAQjL,GAAUnqB,KACjDiH,EAAK9J,SAAS6C,GAAM85D,GAAW1kC,EAAQv1B,GAAaG,IAAK,IAE7D,MAAMsd,EAAQtX,MAAMC,KAAKmvB,GAOzB,OANqB,IAAjB9X,EAAMxb,QACNwb,EAAMzc,KAAK9D,OAAOC,OAAO,OAEzB28D,GAAWv3D,IAAIs4D,IACfxsC,EAAM/tB,IAAIu6D,EAAUp9C,GAEjBA,CACV,CACJ,iBAAAq9C,GACO,MAAM17D,QAAEA,EAAOyH,KAAGA,GAAUF,KAC5B,MAAO,CACHvH,EACAioB,GAAUxgB,IAAS,CAAE,EACrByjB,GAASxC,SAASjhB,IAAS,CAAE,EAC7B,CACIA,QAEJyjB,GACAtqB,GAEP,CACJ,mBAAAwxC,CAAoBjc,EAAQxgB,EAAOtP,EAAS+vB,EAAW,CAChD,KAEA,MAAM13B,EAAS,CACXkqC,SAAS,IAEP3sB,SAAEA,EAAW0/C,YAAAA,GAAiBC,GAAYr0D,KAAK2zD,eAAgB/kC,EAAQC,GAC7E,IAAIp2B,EAAUic,EACd,GAqCR,SAAqBkb,EAAOxhB,GACxB,MAAM8iB,aAAEA,EAAeI,YAAAA,GAAiBxQ,GAAa8O,GACrD,IAAK,MAAM/B,KAAQzf,EAAM,CACrB,MAAMwjB,EAAaV,EAAarD,GAC1BgE,EAAYP,EAAYzD,GACxB/0B,GAAS+4B,GAAaD,IAAehC,EAAM/B,GACjD,GAAI+D,IAAezc,GAAWrc,IAAUw7D,GAAYx7D,KAAW+4B,GAAa7uB,GAAQlK,GAChF,OAAO,CAEd,CACD,OAAO,CACX,CAhDYy7D,CAAY7/C,EAAUtG,GAAQ,CAC9BjX,EAAOkqC,SAAU,EAGjB5oC,EAAUg4B,GAAe/b,EAFzB5V,EAAUqW,GAAWrW,GAAWA,IAAYA,EACxBkB,KAAKgoC,eAAepZ,EAAQ9vB,EAASs1D,GAE5D,CACD,IAAK,MAAMvmC,KAAQzf,EACfjX,EAAO02B,GAAQp1B,EAAQo1B,GAE3B,OAAO12B,CACV,CACJ,cAAA6wC,CAAepZ,EAAQ9vB,EAAS+vB,EAAW,CACpC,IACD8B,GACC,MAAMjc,SAAEA,GAAc2/C,GAAYr0D,KAAK2zD,eAAgB/kC,EAAQC,GAC/D,OAAO3c,GAASpT,GAAW2xB,GAAe/b,EAAU5V,OAASxB,EAAWqzB,GAAsBjc,CACjG,EAEL,SAAS2/C,GAAYG,EAAe5lC,EAAQC,GACxC,IAAInH,EAAQ8sC,EAAct1C,IAAI0P,GACzBlH,IACDA,EAAQ,IAAI3oB,IACZy1D,EAAc76D,IAAIi1B,EAAQlH,IAE9B,MAAM5I,EAAW+P,EAASuC,OAC1B,IAAI+S,EAASzc,EAAMxI,IAAIJ,GACvB,IAAKqlB,EAAQ,CAETA,EAAS,CACLzvB,SAFaia,GAAgBC,EAAQC,GAGrCulC,YAAavlC,EAAShxB,QAAQ3B,IAAKA,EAAE6S,cAAcyR,SAAS,YAEhEkH,EAAM/tB,IAAImlB,EAAUqlB,EACvB,CACD,OAAOA,CACX,CACA,MAAMmwB,GAAex7D,GAAQoZ,GAASpZ,IAAUvC,OAAO0qC,oBAAoBnoC,GAAO64D,MAAMn4D,GAAM2b,GAAWrc,EAAMU,MAgB/G,MAAMi7D,GAAkB,CACpB,MACA,SACA,OACA,QACA,aAEJ,SAASC,GAAqB3b,EAAU79B,GACpC,MAAoB,QAAb69B,GAAmC,WAAbA,IAAgE,IAAvC0b,GAAgB76D,QAAQm/C,IAA6B,MAAT79B,CACtG,CACA,SAASy5C,GAAcC,EAAIC,GACvB,OAAO,SAAS99D,EAAGC,GACf,OAAOD,EAAE69D,KAAQ59D,EAAE49D,GAAM79D,EAAE89D,GAAM79D,EAAE69D,GAAM99D,EAAE69D,GAAM59D,EAAE49D,EAC3D,CACA,CACA,SAASE,GAAqBh2D,GAC1B,MAAM8gB,EAAQ9gB,EAAQ8gB,MAChBmhB,EAAmBnhB,EAAMnnB,QAAQuoB,UACvCpB,EAAMsoC,cAAc,eACpBvsD,GAASolC,GAAoBA,EAAiBg0B,WAAY,CACtDj2D,GACD8gB,EACP,CACA,SAASo1C,GAAoBl2D,GACzB,MAAM8gB,EAAQ9gB,EAAQ8gB,MAChBmhB,EAAmBnhB,EAAMnnB,QAAQuoB,UACvCrlB,GAASolC,GAAoBA,EAAiBk0B,WAAY,CACtDn2D,GACD8gB,EACP,CACC,SAASs1C,GAAU5/C,GAShB,OARImgB,MAAqC,iBAATngB,EAC5BA,EAAOtd,SAASm9D,eAAe7/C,GACxBA,GAAQA,EAAKha,SACpBga,EAAOA,EAAK,IAEZA,GAAQA,EAAKgT,SACbhT,EAAOA,EAAKgT,QAEThT,CACX,CACA,MAAM8/C,GAAY,CAAA,EACZC,GAAY77D,IACd,MAAM8uB,EAAS4sC,GAAU17D,GACzB,OAAOjD,OAAOipB,OAAO41C,IAAWv3D,QAAQhB,GAAIA,EAAEyrB,SAAWA,IAAQ7sB,KAAK,EAE1E,SAAS65D,GAAgB/0D,EAAK8X,EAAOi0B,GACjC,MAAM7rC,EAAOlK,OAAOkK,KAAKF,GACzB,IAAK,MAAM/G,KAAOiH,EAAK,CACnB,MAAM80D,GAAU/7D,EAChB,GAAI+7D,GAAUl9C,EAAO,CACjB,MAAMvf,EAAQyH,EAAI/G,UACX+G,EAAI/G,IACP8yC,EAAO,GAAKipB,EAASl9C,KACrB9X,EAAIg1D,EAASjpB,GAAQxzC,EAE5B,CACJ,CACL,CAUA,SAAS08D,GAAe7yC,EAAOunB,EAAWurB,GACtC,OAAO9yC,EAAMlqB,QAAQ4sB,KAAO1C,EAAM8yC,GAASvrB,EAAUurB,EACzD,CAaA,IAAAC,GAAA,MACIpxB,gBAAkB3gB,GAClB2gB,iBAAmB8wB,GACnB9wB,iBAAmB5jB,GACnB4jB,gBAAkByT,GAClBzT,eA1FU,QA2FVA,gBAAkB+wB,GAClB,eAAO5G,IAAY10C,GACfg+B,GAASl8C,OAAOke,GAChB47C,IACH,CACD,iBAAOvG,IAAcr1C,GACjBg+B,GAAS9Y,UAAUllB,GACnB47C,IACH,CACD,WAAA7lD,CAAYwF,EAAMsgD,GACd,MAAMh1B,EAAS5gC,KAAK4gC,OAAS,IAAI2yB,GAAOqC,GAClCC,EAAgBX,GAAU5/C,GAC1BwgD,EAAgBT,GAASQ,GAC/B,GAAIC,EACA,MAAM,IAAI77D,MAAM,4CAA+C67D,EAAclkD,GAA7D,kDAA6HkkD,EAAcxtC,OAAO1W,GAAK,oBAE3K,MAAMnZ,EAAUmoC,EAAOoH,eAAepH,EAAOuzB,oBAAqBn0D,KAAKuoB,cACvEvoB,KAAKqhB,SAAW,IAAKuf,EAAOvf,UAlnEpC,SAAyBiH,GACrB,OAAKmN,MAAgD,oBAApBsgC,iBAAmCztC,aAAkBytC,gBAC3EtX,GAEJ4C,EACX,CA6mEgD2U,CAAgBH,IACxD71D,KAAKqhB,SAASm9B,aAAa5d,GAC3B,MAAM9hC,EAAUkB,KAAKqhB,SAASg9B,eAAewX,EAAep9D,EAAQm/B,aAC9DtP,EAASxpB,GAAWA,EAAQwpB,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1BxC,EAAQoC,GAAUA,EAAOpC,MAC/BlmB,KAAK4R,GAAKD,KACV3R,KAAK7D,IAAM2C,EACXkB,KAAKsoB,OAASA,EACdtoB,KAAKkmB,MAAQA,EACblmB,KAAK0oB,OAASA,EACd1oB,KAAKi2D,SAAWx9D,EAChBuH,KAAKk2D,aAAel2D,KAAK43B,YACzB53B,KAAKg9C,QAAU,GACfh9C,KAAKm2D,UAAY,GACjBn2D,KAAKqjC,aAAU/lC,EACf0C,KAAKy8C,MAAQ,GACbz8C,KAAKmoB,6BAA0B7qB,EAC/B0C,KAAKkqC,eAAY5sC,EACjB0C,KAAKm+B,QAAU,GACfn+B,KAAKo2D,gBAAa94D,EAClB0C,KAAKq2D,WAAa,GACjBr2D,KAAKs2D,0BAAuBh5D,EAC7B0C,KAAKu2D,gBAAkB,GACvBv2D,KAAK4iB,OAAS,GACd5iB,KAAKw2D,SAAW,IAAI9F,GACpB1wD,KAAK4hD,SAAW,GAChB5hD,KAAKy2D,eAAiB,GACtBz2D,KAAK02D,UAAW,EAChB12D,KAAKqrC,yBAAsB/tC,EAC3B0C,KAAKilC,cAAW3nC,EAChB0C,KAAK22D,UD18JT,SAAkBtgE,EAAI2tB,GACtB,IAAI4yC,EACJ,OAAO,YAAY/jD,GAOf,OANImR,GACA6yC,aAAaD,GACbA,EAAUE,WAAWzgE,EAAI2tB,EAAOnR,IAEhCxc,EAAG0c,MAAM/S,KAAM6S,GAEZmR,CACf,CACA,CC+7JyB+yC,EAAU70C,GAAOliB,KAAKzE,OAAO2mB,IAAOzpB,EAAQu+D,aAAe,GAC5Eh3D,KAAK0sC,aAAe,GACpB0oB,GAAUp1D,KAAK4R,IAAM5R,KAChBlB,GAAYwpB,GAIjB4W,GAAS5mC,OAAO0H,KAAM,WAAY80D,IAClC51B,GAAS5mC,OAAO0H,KAAM,WAAYg1D,IAClCh1D,KAAKi3D,cACDj3D,KAAK02D,UACL12D,KAAKzE,UAPL4yB,QAAQqkC,MAAM,oEASrB,CACD,eAAI56B,GACA,MAAQn/B,SAASm/B,YAAEA,sBAAcvV,GAAyB6D,MAAAA,SAAQwC,EAAMwtC,aAAGA,GAAkBl2D,KAC7F,OAAK6R,GAAc+lB,GAGfvV,GAAuB6zC,EAChBA,EAEJxtC,EAASxC,EAAQwC,EAAS,KALtBkP,CAMd,CACD,QAAIz/B,GACA,OAAO6H,KAAK4gC,OAAOzoC,IACtB,CACD,QAAIA,CAAKA,GACL6H,KAAK4gC,OAAOzoC,KAAOA,CACtB,CACD,WAAIM,GACA,OAAOuH,KAAKi2D,QACf,CACD,WAAIx9D,CAAQA,GACRuH,KAAK4gC,OAAOnoC,QAAUA,CACzB,CACD,YAAIs/C,GACA,OAAOA,EACV,CACJ,WAAAkf,GASO,OARAj3D,KAAKkoD,cAAc,cACfloD,KAAKvH,QAAQiqB,WACb1iB,KAAKskB,SAELiU,GAAYv4B,KAAMA,KAAKvH,QAAQ2oB,kBAEnCphB,KAAKk3D,aACLl3D,KAAKkoD,cAAc,aACZloD,IACV,CACD,KAAAlE,GAEI,OADAusB,GAAYroB,KAAKsoB,OAAQtoB,KAAK7D,KACvB6D,IACV,CACD,IAAA++B,GAEI,OADAG,GAASH,KAAK/+B,MACPA,IACV,CACJ,MAAAskB,CAAO4B,EAAOwC,GACFwW,GAASjB,QAAQj+B,MAGlBA,KAAKm3D,kBAAoB,CACrBjxC,QACAwC,UAJJ1oB,KAAKo3D,QAAQlxC,EAAOwC,EAO3B,CACD,OAAA0uC,CAAQlxC,EAAOwC,GACX,MAAMjwB,EAAUuH,KAAKvH,QACf6vB,EAAStoB,KAAKsoB,OACdsP,EAAcn/B,EAAQ4pB,qBAAuBriB,KAAK43B,YAClDy/B,EAAUr3D,KAAKqhB,SAASoW,eAAenP,EAAQpC,EAAOwC,EAAQkP,GAC9D0/B,EAAW7+D,EAAQ2oB,kBAAoBphB,KAAKqhB,SAASC,sBACrDY,EAAOliB,KAAKkmB,MAAQ,SAAW,SACrClmB,KAAKkmB,MAAQmxC,EAAQnxC,MACrBlmB,KAAK0oB,OAAS2uC,EAAQ3uC,OACtB1oB,KAAKk2D,aAAel2D,KAAK43B,YACpBW,GAAYv4B,KAAMs3D,GAAU,KAGjCt3D,KAAKkoD,cAAc,SAAU,CACzB7yC,KAAMgiD,IAEV17D,GAASlD,EAAQ8+D,SAAU,CACvBv3D,KACAq3D,GACDr3D,MACCA,KAAK02D,UACD12D,KAAK22D,UAAUz0C,IACfliB,KAAKw3D,SAGhB,CACD,mBAAAC,GAGIzkD,GAFgBhT,KAAKvH,QACSmqB,QAAU,IACpB,CAAC80C,EAAavJ,KAC9BuJ,EAAY9lD,GAAKu8C,CAAM,GAE9B,CACJ,mBAAAwJ,GACO,MAAMl/D,EAAUuH,KAAKvH,QACfm/D,EAAYn/D,EAAQmqB,OACpBA,EAAS5iB,KAAK4iB,OACdi1C,EAAUthE,OAAOkK,KAAKmiB,GAAQ+b,QAAO,CAACp+B,EAAKqR,KAC7CrR,EAAIqR,IAAM,EACHrR,IACR,CAAE,GACL,IAAIwZ,EAAQ,GACR69C,IACA79C,EAAQA,EAAMuzB,OAAO/2C,OAAOkK,KAAKm3D,GAAWh6D,KAAKgU,IAC7C,MAAMqgD,EAAe2F,EAAUhmD,GACzBsJ,EAAO82C,GAAcpgD,EAAIqgD,GACzB6F,EAAoB,MAAT58C,EACX20B,EAAwB,MAAT30B,EACrB,MAAO,CACHziB,QAASw5D,EACT8F,UAAWD,EAAW,YAAcjoB,EAAe,SAAW,OAC9DmoB,MAAOF,EAAW,eAAiBjoB,EAAe,WAAa,SAClE,MAGT78B,GAAK+G,GAAQzE,IACT,MAAM28C,EAAe38C,EAAK7c,QACpBmZ,EAAKqgD,EAAargD,GAClBsJ,EAAO82C,GAAcpgD,EAAIqgD,GACzBgG,EAAYzlD,GAAey/C,EAAa/xD,KAAMoV,EAAK0iD,YAC3B16D,IAA1B20D,EAAalZ,UAA0B2b,GAAqBzC,EAAalZ,SAAU79B,KAAUw5C,GAAqBp/C,EAAKyiD,aACvH9F,EAAalZ,SAAWzjC,EAAKyiD,WAEjCF,EAAQjmD,IAAM,EACd,IAAI+Q,EAAQ,KACZ,GAAI/Q,KAAMgR,GAAUA,EAAOhR,GAAI1R,OAAS+3D,EACpCt1C,EAAQC,EAAOhR,OACZ,CAEH+Q,EAAQ,IADWo1B,GAAS+X,SAASmI,GAC7B,CAAe,CACnBrmD,KACA1R,KAAM+3D,EACN97D,IAAK6D,KAAK7D,IACVyjB,MAAO5f,OAEX4iB,EAAOD,EAAM/Q,IAAM+Q,CACtB,CACDA,EAAMrkB,KAAK2zD,EAAcx5D,EAAQ,IAErCua,GAAK6kD,GAAS,CAACK,EAAYtmD,KAClBsmD,UACMt1C,EAAOhR,EACjB,IAELoB,GAAK4P,GAASD,IACVi4B,GAAQ9Z,UAAU9gC,KAAM2iB,EAAOA,EAAMlqB,SACrCmiD,GAAQmC,OAAO/8C,KAAM2iB,EAAM,GAElC,CACJ,eAAAw1C,GACO,MAAMn2B,EAAWhiC,KAAKm2D,UAChBhqB,EAAUnsC,KAAK7H,KAAKgpB,SAAS7lB,OAC7B4wC,EAAUlK,EAAS1mC,OAEzB,GADA0mC,EAASuL,MAAK,CAACx2C,EAAGC,IAAID,EAAEoJ,MAAQnJ,EAAEmJ,QAC9B+rC,EAAUC,EAAS,CACnB,IAAI,IAAIzwC,EAAIywC,EAASzwC,EAAIwwC,IAAWxwC,EAChCsE,KAAKo4D,oBAAoB18D,GAE7BsmC,EAAS5hC,OAAO+rC,EAASD,EAAUC,EACtC,CACDnsC,KAAKu2D,gBAAkBv0B,EAAS/vB,MAAM,GAAGs7B,KAAKonB,GAAc,QAAS,SACxE,CACJ,2BAAA0D,GACO,MAAQlC,UAAWn0B,EAAW7pC,MAAMgpB,SAAEA,IAAiBnhB,KACnDgiC,EAAS1mC,OAAS6lB,EAAS7lB,eACpB0E,KAAKqjC,QAEhBrB,EAASrrC,SAAQ,CAAC+jB,EAAMva,KACqC,IAArDghB,EAAStjB,QAAQ6F,GAAIA,IAAMgX,EAAKq8B,WAAUz7C,QAC1C0E,KAAKo4D,oBAAoBj4D,EAC5B,GAER,CACD,wBAAAm4D,GACI,MAAMC,EAAiB,GACjBp3C,EAAWnhB,KAAK7H,KAAKgpB,SAC3B,IAAIzlB,EAAG4X,EAEP,IADAtT,KAAKq4D,8BACD38D,EAAI,EAAG4X,EAAO6N,EAAS7lB,OAAQI,EAAI4X,EAAM5X,IAAI,CAC7C,MAAMiqC,EAAUxkB,EAASzlB,GACzB,IAAIgf,EAAO1a,KAAK0mC,eAAehrC,GAC/B,MAAMwE,EAAOylC,EAAQzlC,MAAQF,KAAK4gC,OAAO1gC,KAWzC,GAVIwa,EAAKxa,MAAQwa,EAAKxa,OAASA,IAC3BF,KAAKo4D,oBAAoB18D,GACzBgf,EAAO1a,KAAK0mC,eAAehrC,IAE/Bgf,EAAKxa,KAAOA,EACZwa,EAAKsH,UAAY2jB,EAAQ3jB,WAAa6vC,GAAa3xD,EAAMF,KAAKvH,SAC9DiiB,EAAK89C,MAAQ7yB,EAAQ6yB,OAAS,EAC9B99C,EAAKva,MAAQzE,EACbgf,EAAKkvB,MAAQ,GAAKjE,EAAQiE,MAC1BlvB,EAAK+J,QAAUzkB,KAAKqzC,iBAAiB33C,GACjCgf,EAAKyoB,WACLzoB,EAAKyoB,WAAWuC,YAAYhqC,GAC5Bgf,EAAKyoB,WAAWmC,iBACb,CACH,MAAMmzB,EAAkB1gB,GAAS4X,cAAczvD,IACzCilC,mBAAEA,EAAkBC,gBAAGA,GAAqBzhB,GAASxC,SAASjhB,GACpE3J,OAAOP,OAAOyiE,EAAiB,CAC3BrzB,gBAAiB2S,GAASC,WAAW5S,GACrCD,mBAAoBA,GAAsB4S,GAASC,WAAW7S,KAElEzqB,EAAKyoB,WAAa,IAAIs1B,EAAgBz4D,KAAMtE,GAC5C68D,EAAel+D,KAAKqgB,EAAKyoB,WAC5B,CACJ,CAED,OADAnjC,KAAKm4D,kBACEI,CACV,CACJ,cAAAG,GACO1lD,GAAKhT,KAAK7H,KAAKgpB,UAAU,CAACwkB,EAASlyB,KAC/BzT,KAAK0mC,eAAejzB,GAAc0vB,WAAW0D,OAAO,GACrD7mC,KACN,CACJ,KAAA6mC,GACO7mC,KAAK04D,iBACL14D,KAAKkoD,cAAc,QACtB,CACD,MAAA3sD,CAAO2mB,GACH,MAAM0e,EAAS5gC,KAAK4gC,OACpBA,EAAOrlC,SACP,MAAM9C,EAAUuH,KAAKi2D,SAAWr1B,EAAOoH,eAAepH,EAAOuzB,oBAAqBn0D,KAAKuoB,cACjFowC,EAAgB34D,KAAKqrC,qBAAuB5yC,EAAQuoB,UAK1D,GAJAhhB,KAAK44D,gBACL54D,KAAK64D,sBACL74D,KAAK84D,uBACL94D,KAAKw2D,SAAStF,cAIP,IAHHlxD,KAAKkoD,cAAc,eAAgB,CACnChmC,OACA+uC,YAAY,IAEZ,OAEJ,MAAMsH,EAAiBv4D,KAAKs4D,2BAC5Bt4D,KAAKkoD,cAAc,wBACnB,IAAI9K,EAAa,EACjB,IAAI,IAAI1hD,EAAI,EAAG4X,EAAOtT,KAAK7H,KAAKgpB,SAAS7lB,OAAQI,EAAI4X,EAAM5X,IAAI,CAC3D,MAAMynC,WAAEA,GAAgBnjC,KAAK0mC,eAAehrC,GACtCmrC,GAAS8xB,IAAyD,IAAxCJ,EAAe3+D,QAAQupC,GACvDA,EAAWqE,sBAAsBX,GACjCuW,EAAat8C,KAAKC,KAAKoiC,EAAWuG,iBAAkB0T,EACvD,CACDA,EAAap9C,KAAK+4D,YAActgE,EAAQ2iD,OAAOz2B,YAAcy4B,EAAa,EAC1Ep9C,KAAKg5D,cAAc5b,GACdub,GACD3lD,GAAKulD,GAAiBp1B,IAClBA,EAAW0D,OAAO,IAG1B7mC,KAAKi5D,gBAAgB/2C,GACrBliB,KAAKkoD,cAAc,cAAe,CAC9BhmC,SAEJliB,KAAKg9C,QAAQzP,KAAKonB,GAAc,IAAK,SACrC,MAAMx2B,QAAEA,EAAOi4B,WAAGA,GAAgBp2D,KAC9Bo2D,EACAp2D,KAAKk5D,cAAc9C,GAAY,GACxBj4B,EAAQ7iC,QACf0E,KAAKm5D,mBAAmBh7B,EAASA,GAAS,GAE9Cn+B,KAAKw3D,QACR,CACJ,aAAAoB,GACO5lD,GAAKhT,KAAK4iB,QAASD,IACfi4B,GAAQsC,UAAUl9C,KAAM2iB,EAAM,IAElC3iB,KAAKy3D,sBACLz3D,KAAK23D,qBACR,CACJ,mBAAAkB,GACO,MAAMpgE,EAAUuH,KAAKvH,QACf2gE,EAAiB,IAAIl+D,IAAI3E,OAAOkK,KAAKT,KAAKq2D,aAC1CgD,EAAY,IAAIn+D,IAAIzC,EAAQ+oB,QAC7BpM,GAAUgkD,EAAgBC,MAAgBr5D,KAAKs2D,uBAAyB79D,EAAQiqB,aACjF1iB,KAAKs5D,eACLt5D,KAAKk3D,aAEZ,CACJ,oBAAA4B,GACO,MAAMrC,eAAEA,GAAoBz2D,KACtBu5D,EAAUv5D,KAAKw5D,0BAA4B,GACjD,IAAK,MAAM94B,OAAEA,EAAMroB,MAAGA,EAAKyC,MAAGA,KAAYy+C,EAAQ,CAE9CjE,GAAgBmB,EAAgBp+C,EADR,oBAAXqoB,GAAgC5lB,EAAQA,EAExD,CACJ,CACJ,sBAAA0+C,GACO,MAAM9sB,EAAe1sC,KAAK0sC,aAC1B,IAAKA,IAAiBA,EAAapxC,OAC/B,OAEJ0E,KAAK0sC,aAAe,GACpB,MAAM+sB,EAAez5D,KAAK7H,KAAKgpB,SAAS7lB,OAClCo+D,EAAWjP,GAAM,IAAIvvD,IAAIwxC,EAAa7uC,QAAQhB,GAAIA,EAAE,KAAO4tD,IAAK7sD,KAAI,CAACf,EAAGnB,IAAIA,EAAI,IAAMmB,EAAEuD,OAAO,GAAGgxB,KAAK,QACvGuoC,EAAYD,EAAQ,GAC1B,IAAI,IAAIh+D,EAAI,EAAGA,EAAI+9D,EAAc/9D,IAC7B,IAAK0Z,GAAUukD,EAAWD,EAAQh+D,IAC9B,OAGR,OAAO8D,MAAMC,KAAKk6D,GAAW/7D,KAAKf,GAAIA,EAAE+X,MAAM,OAAMhX,KAAK7G,IAAK,CACtD2pC,OAAQ3pC,EAAE,GACVshB,OAAQthB,EAAE,GACV+jB,OAAQ/jB,EAAE,MAErB,CACJ,aAAAiiE,CAAc5b,GACP,IAEO,IAFHp9C,KAAKkoD,cAAc,eAAgB,CACnC+I,YAAY,IAEZ,OAEJrW,GAAQr/C,OAAOyE,KAAMA,KAAKkmB,MAAOlmB,KAAK0oB,OAAQ00B,GAC9C,MAAMhzB,EAAOpqB,KAAKkqC,UACZ0vB,EAASxvC,EAAKlE,OAAS,GAAKkE,EAAK1B,QAAU,EACjD1oB,KAAKg9C,QAAU,GACfhqC,GAAKhT,KAAKy8C,OAAQzlB,IACV4iC,GAA2B,cAAjB5iC,EAAI+hB,WAGd/hB,EAAI8J,WACJ9J,EAAI8J,YAER9gC,KAAKg9C,QAAQ3iD,QAAQ28B,EAAIgmB,WAAU,GACpCh9C,MACHA,KAAKg9C,QAAQrmD,SAAQ,CAAC2e,EAAMnV,KACxBmV,EAAKukD,KAAO15D,CAAK,IAErBH,KAAKkoD,cAAc,cACtB,CACJ,eAAA+Q,CAAgB/2C,GACT,IAGO,IAHHliB,KAAKkoD,cAAc,uBAAwB,CAC3ChmC,OACA+uC,YAAY,IAFhB,CAMA,IAAI,IAAIv1D,EAAI,EAAG4X,EAAOtT,KAAK7H,KAAKgpB,SAAS7lB,OAAQI,EAAI4X,IAAQ5X,EACzDsE,KAAK0mC,eAAehrC,GAAGynC,WAAWrC,YAEtC,IAAI,IAAIplC,EAAI,EAAG4X,EAAOtT,KAAK7H,KAAKgpB,SAAS7lB,OAAQI,EAAI4X,IAAQ5X,EACzDsE,KAAK85D,eAAep+D,EAAGyZ,GAAW+M,GAAQA,EAAK,CAC3CzO,aAAc/X,IACbwmB,GAETliB,KAAKkoD,cAAc,sBAAuB,CACtChmC,QAVH,CAYJ,CACJ,cAAA43C,CAAe35D,EAAO+hB,GACf,MAAMxH,EAAO1a,KAAK0mC,eAAevmC,GAC3B0S,EAAO,CACT6H,OACAva,QACA+hB,OACA+uC,YAAY,IAEwC,IAApDjxD,KAAKkoD,cAAc,sBAAuBr1C,KAG9C6H,EAAKyoB,WAAWtF,QAAQ3b,GACxBrP,EAAKo+C,YAAa,EAClBjxD,KAAKkoD,cAAc,qBAAsBr1C,GAC5C,CACD,MAAA2kD,IAGW,IAFHx3D,KAAKkoD,cAAc,eAAgB,CACnC+I,YAAY,MAIZ/xB,GAAStjC,IAAIoE,MACTA,KAAK02D,WAAax3B,GAASjB,QAAQj+B,OACnCk/B,GAAS7mB,MAAMrY,OAGnBA,KAAKk+B,OACL42B,GAAqB,CACjBl1C,MAAO5f,QAGlB,CACD,IAAAk+B,GACI,IAAIxiC,EACJ,GAAIsE,KAAKm3D,kBAAmB,CACxB,MAAMjxC,MAAEA,EAAQwC,OAAAA,GAAY1oB,KAAKm3D,kBACjCn3D,KAAKo3D,QAAQlxC,EAAOwC,GACpB1oB,KAAKm3D,kBAAoB,IAC5B,CAED,GADAn3D,KAAKlE,QACDkE,KAAKkmB,OAAS,GAAKlmB,KAAK0oB,QAAU,EAClC,OAEJ,IAEO,IAFH1oB,KAAKkoD,cAAc,aAAc,CACjC+I,YAAY,IAEZ,OAEJ,MAAM8I,EAAS/5D,KAAKg9C,QACpB,IAAIthD,EAAI,EAAGA,EAAIq+D,EAAOz+D,QAAUy+D,EAAOr+D,GAAGuhD,GAAK,IAAKvhD,EAChDq+D,EAAOr+D,GAAGwiC,KAAKl+B,KAAKkqC,WAGxB,IADAlqC,KAAKg6D,gBACCt+D,EAAIq+D,EAAOz+D,SAAUI,EACvBq+D,EAAOr+D,GAAGwiC,KAAKl+B,KAAKkqC,WAExBlqC,KAAKkoD,cAAc,YACtB,CACJ,sBAAAjmB,CAAuBF,GAChB,MAAMC,EAAWhiC,KAAKu2D,gBAChBp/D,EAAS,GACf,IAAIuE,EAAG4X,EACP,IAAI5X,EAAI,EAAG4X,EAAO0uB,EAAS1mC,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC7C,MAAMgf,EAAOsnB,EAAStmC,GACjBqmC,IAAiBrnB,EAAK+J,SACvBttB,EAAOkD,KAAKqgB,EAEnB,CACD,OAAOvjB,CACV,CACJ,4BAAA6hD,GACO,OAAOh5C,KAAKiiC,wBAAuB,EACtC,CACJ,aAAA+3B,GACO,IAEO,IAFHh6D,KAAKkoD,cAAc,qBAAsB,CACzC+I,YAAY,IAEZ,OAEJ,MAAMjvB,EAAWhiC,KAAKg5C,+BACtB,IAAI,IAAIt9C,EAAIsmC,EAAS1mC,OAAS,EAAGI,GAAK,IAAKA,EACvCsE,KAAKi6D,aAAaj4B,EAAStmC,IAE/BsE,KAAKkoD,cAAc,oBACtB,CACJ,YAAA+R,CAAav/C,GACN,MAAMve,EAAM6D,KAAK7D,IACXkpB,EAAO3K,EAAKovB,MACZowB,GAAW70C,EAAK0kB,SAChB3f,EAhgBd,SAAwB1P,EAAMwvB,GAC1B,MAAM1uB,OAAEA,EAAMC,OAAGA,GAAYf,EAC7B,OAAIc,GAAUC,EACH,CACHuJ,KAAMwwC,GAAeh6C,EAAQ0uB,EAAW,QACxCplB,MAAO0wC,GAAeh6C,EAAQ0uB,EAAW,SACzCrlB,IAAK2wC,GAAe/5C,EAAQyuB,EAAW,OACvCnlB,OAAQywC,GAAe/5C,EAAQyuB,EAAW,WAG3CA,CACX,CAqfqBiwB,CAAez/C,EAAM1a,KAAKkqC,WACjCr3B,EAAO,CACT6H,OACAva,MAAOua,EAAKva,MACZ8wD,YAAY,IAEsC,IAAlDjxD,KAAKkoD,cAAc,oBAAqBr1C,KAGxCqnD,GACA5vC,GAASnuB,EAAK,CACV6oB,MAAoB,IAAdK,EAAKL,KAAiB,EAAIoF,EAAKpF,KAAOK,EAAKL,KACjDF,OAAsB,IAAfO,EAAKP,MAAkB9kB,KAAKkmB,MAAQkE,EAAKtF,MAAQO,EAAKP,MAC7DD,KAAkB,IAAbQ,EAAKR,IAAgB,EAAIuF,EAAKvF,IAAMQ,EAAKR,IAC9CE,QAAwB,IAAhBM,EAAKN,OAAmB/kB,KAAK0oB,OAAS0B,EAAKrF,OAASM,EAAKN,SAGzErK,EAAKyoB,WAAWjF,OACZg8B,GACA3vC,GAAWpuB,GAEf0W,EAAKo+C,YAAa,EAClBjxD,KAAKkoD,cAAc,mBAAoBr1C,GAC1C,CACJ,aAAAsmC,CAAchvB,GACP,OAAOD,GAAeC,EAAOnqB,KAAKkqC,UAAWlqC,KAAK+4D,YACrD,CACD,yBAAAqB,CAA0B5+D,EAAG0mB,EAAMzpB,EAASygD,GACxC,MAAMxY,EAAS0Z,GAAYC,MAAMn4B,GACjC,MAAsB,mBAAXwe,EACAA,EAAO1gC,KAAMxE,EAAG/C,EAASygD,GAE7B,EACV,CACD,cAAAxS,CAAejzB,GACX,MAAMkyB,EAAU3lC,KAAK7H,KAAKgpB,SAAS1N,GAC7BuuB,EAAWhiC,KAAKm2D,UACtB,IAAIz7C,EAAOsnB,EAASnkC,QAAQ6F,GAAIA,GAAKA,EAAEqzC,WAAapR,IAASlqC,MAkB7D,OAjBKif,IACDA,EAAO,CACHxa,KAAM,KACN/H,KAAM,GACNwtC,QAAS,KACTxC,WAAY,KACZgG,OAAQ,KACRpD,QAAS,KACTE,QAAS,KACTuyB,MAAO7yB,GAAWA,EAAQ6yB,OAAS,EACnCr4D,MAAOsT,EACPsjC,SAAUpR,EACV1qB,QAAS,GACTF,SAAS,GAEbinB,EAAS3nC,KAAKqgB,IAEXA,CACV,CACD,UAAA6N,GACI,OAAOvoB,KAAKilC,WAAajlC,KAAKilC,SAAWxW,GAAc,KAAM,CACzD7O,MAAO5f,KACPE,KAAM,UAEb,CACD,sBAAAi2C,GACI,OAAOn2C,KAAKg5C,+BAA+B19C,MAC9C,CACD,gBAAA+3C,CAAiB5/B,GACb,MAAMkyB,EAAU3lC,KAAK7H,KAAKgpB,SAAS1N,GACnC,IAAKkyB,EACD,OAAO,EAEX,MAAMjrB,EAAO1a,KAAK0mC,eAAejzB,GACjC,MAA8B,kBAAhBiH,EAAKyuB,QAAwBzuB,EAAKyuB,QAAUxD,EAAQwD,MACrE,CACD,oBAAAkxB,CAAqB5mD,EAAcgR,GAClBzkB,KAAK0mC,eAAejzB,GAC5B01B,QAAU1kB,CAClB,CACD,oBAAAquB,CAAqB3yC,GACjBH,KAAKy2D,eAAet2D,IAAUH,KAAKy2D,eAAet2D,EACrD,CACD,iBAAAgxC,CAAkBhxC,GACd,OAAQH,KAAKy2D,eAAet2D,EAC/B,CACJ,iBAAAm6D,CAAkB7mD,EAAc42B,EAAW5lB,GACpC,MAAMvC,EAAOuC,EAAU,OAAS,OAC1B/J,EAAO1a,KAAK0mC,eAAejzB,GAC3B8pB,EAAQ7iB,EAAKyoB,WAAW4H,wBAAmBztC,EAAW4kB,GACxDhN,GAAQm1B,IACR3vB,EAAKviB,KAAKkyC,GAAWlB,QAAU1kB,EAC/BzkB,KAAKzE,WAELyE,KAAKq6D,qBAAqB5mD,EAAcgR,GACxC8Y,EAAMhiC,OAAOmf,EAAM,CACf+J,YAEJzkB,KAAKzE,QAAQY,GAAMA,EAAIsX,eAAiBA,EAAeyO,OAAO5kB,IAErE,CACD,IAAAonB,CAAKjR,EAAc42B,GACfrqC,KAAKs6D,kBAAkB7mD,EAAc42B,GAAW,EACnD,CACD,IAAA9lB,CAAK9Q,EAAc42B,GACfrqC,KAAKs6D,kBAAkB7mD,EAAc42B,GAAW,EACnD,CACJ,mBAAA+tB,CAAoB3kD,GACb,MAAMiH,EAAO1a,KAAKm2D,UAAU1iD,GACxBiH,GAAQA,EAAKyoB,YACbzoB,EAAKyoB,WAAW2D,kBAEb9mC,KAAKm2D,UAAU1iD,EACzB,CACD,KAAA8mD,GACI,IAAI7+D,EAAG4X,EAGP,IAFAtT,KAAK++B,OACLG,GAASD,OAAOj/B,MACZtE,EAAI,EAAG4X,EAAOtT,KAAK7H,KAAKgpB,SAAS7lB,OAAQI,EAAI4X,IAAQ5X,EACrDsE,KAAKo4D,oBAAoB18D,EAEhC,CACD,OAAA8+D,GACIx6D,KAAKkoD,cAAc,iBACnB,MAAM5/B,OAAEA,EAAMnsB,IAAGA,GAAS6D,KAC1BA,KAAKu6D,QACLv6D,KAAK4gC,OAAOgzB,aACRtrC,IACAtoB,KAAKs5D,eACLjxC,GAAYC,EAAQnsB,GACpB6D,KAAKqhB,SAASi9B,eAAeniD,GAC7B6D,KAAKsoB,OAAS,KACdtoB,KAAK7D,IAAM,aAERi5D,GAAUp1D,KAAK4R,IACtB5R,KAAKkoD,cAAc,eACtB,CACD,aAAAuS,IAAiB5nD,GACb,OAAO7S,KAAKsoB,OAAOoyC,aAAa7nD,EACnC,CACJ,UAAAqkD,GACOl3D,KAAK26D,iBACD36D,KAAKvH,QAAQiqB,WACb1iB,KAAK46D,uBAEL56D,KAAK02D,UAAW,CAEvB,CACJ,cAAAiE,GACO,MAAM9gD,EAAY7Z,KAAKq2D,WACjBh1C,EAAWrhB,KAAKqhB,SAChBw5C,EAAO,CAAC36D,EAAMwZ,KAChB2H,EAAS3oB,iBAAiBsH,KAAME,EAAMwZ,GACtCG,EAAU3Z,GAAQwZ,CAAQ,EAExBA,EAAW,CAACle,EAAGkI,EAAG8Q,KACpBhZ,EAAE07B,QAAUxzB,EACZlI,EAAE27B,QAAU3iB,EACZxU,KAAKk5D,cAAc19D,EAAE,EAEzBwX,GAAKhT,KAAKvH,QAAQ+oB,QAASthB,GAAO26D,EAAK36D,EAAMwZ,IAChD,CACJ,oBAAAkhD,GACY56D,KAAKs2D,uBACNt2D,KAAKs2D,qBAAuB,IAEhC,MAAMz8C,EAAY7Z,KAAKs2D,qBACjBj1C,EAAWrhB,KAAKqhB,SAChBw5C,EAAO,CAAC36D,EAAMwZ,KAChB2H,EAAS3oB,iBAAiBsH,KAAME,EAAMwZ,GACtCG,EAAU3Z,GAAQwZ,CAAQ,EAExBohD,EAAU,CAAC56D,EAAMwZ,KACfG,EAAU3Z,KACVmhB,EAAS1oB,oBAAoBqH,KAAME,EAAMwZ,UAClCG,EAAU3Z,GACpB,EAECwZ,EAAW,CAACwM,EAAOwC,KACjB1oB,KAAKsoB,QACLtoB,KAAKskB,OAAO4B,EAAOwC,EACtB,EAEL,IAAIqyC,EACJ,MAAMrE,EAAW,KACboE,EAAQ,SAAUpE,GAClB12D,KAAK02D,UAAW,EAChB12D,KAAKskB,SACLu2C,EAAK,SAAUnhD,GACfmhD,EAAK,SAAUE,EAAS,EAE5BA,EAAW,KACP/6D,KAAK02D,UAAW,EAChBoE,EAAQ,SAAUphD,GAClB1Z,KAAKu6D,QACLv6D,KAAKo3D,QAAQ,EAAG,GAChByD,EAAK,SAAUnE,EAAS,EAExBr1C,EAASk9B,WAAWv+C,KAAKsoB,QACzBouC,IAEAqE,GAEP,CACJ,YAAAzB,GACOtmD,GAAKhT,KAAKq2D,YAAY,CAAC38C,EAAUxZ,KAC7BF,KAAKqhB,SAAS1oB,oBAAoBqH,KAAME,EAAMwZ,EAAS,IAE3D1Z,KAAKq2D,WAAa,GAClBrjD,GAAKhT,KAAKs2D,sBAAsB,CAAC58C,EAAUxZ,KACvCF,KAAKqhB,SAAS1oB,oBAAoBqH,KAAME,EAAMwZ,EAAS,IAE3D1Z,KAAKs2D,0BAAuBh5D,CAC/B,CACD,gBAAA09D,CAAiBjhD,EAAOmI,EAAM2gC,GAC1B,MAAMhzB,EAASgzB,EAAU,MAAQ,SACjC,IAAInoC,EAAMpF,EAAM5Z,EAAG4X,EAKnB,IAJa,YAAT4O,IACAxH,EAAO1a,KAAK0mC,eAAe3sB,EAAM,GAAGtG,cACpCiH,EAAKyoB,WAAW,IAAMtT,EAAS,wBAE/Bn0B,EAAI,EAAG4X,EAAOyG,EAAMze,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC1C4Z,EAAOyE,EAAMre,GACb,MAAMynC,EAAa7tB,GAAQtV,KAAK0mC,eAAepxB,EAAK7B,cAAc0vB,WAC9DA,GACAA,EAAWtT,EAAS,cAAcva,EAAKxd,QAASwd,EAAK7B,aAAc6B,EAAKnV,MAE/E,CACJ,CACJ,iBAAA86D,GACO,OAAOj7D,KAAKm+B,SAAW,EAC1B,CACJ,iBAAA+8B,CAAkBC,GACX,MAAMC,EAAap7D,KAAKm+B,SAAW,GAC7B9Z,EAAS82C,EAAev9D,KAAI,EAAG6V,eAAetT,YAChD,MAAMua,EAAO1a,KAAK0mC,eAAejzB,GACjC,IAAKiH,EACD,MAAM,IAAIzgB,MAAM,6BAA+BwZ,GAEnD,MAAO,CACHA,eACA3b,QAAS4iB,EAAKviB,KAAKgI,GACnBA,QACH,KAEYgT,GAAekR,EAAQ+2C,KAEpCp7D,KAAKm+B,QAAU9Z,EACfrkB,KAAKo2D,WAAa,KAClBp2D,KAAKm5D,mBAAmB90C,EAAQ+2C,GAEvC,CACJ,aAAAlT,CAAc2I,EAAMh+C,EAAMhV,GACnB,OAAOmC,KAAKw2D,SAAS5F,OAAO5wD,KAAM6wD,EAAMh+C,EAAMhV,EACjD,CACJ,eAAA4nC,CAAgB41B,GACT,OAA6E,IAAtEr7D,KAAKw2D,SAASrpB,OAAOtvC,QAAQ3B,GAAIA,EAAE80D,OAAOp/C,KAAOypD,IAAU//D,MACrE,CACJ,kBAAA69D,CAAmB90C,EAAQ+2C,EAAYE,GAChC,MAAMC,EAAev7D,KAAKvH,QAAQmpB,MAC5By2B,EAAO,CAACthD,EAAGC,IAAID,EAAE8G,QAAQ6F,IAAK1M,EAAE26D,MAAMn9C,GAAI9Q,EAAE+P,eAAiBe,EAAEf,cAAgB/P,EAAEvD,QAAUqU,EAAErU,UAC7Fq7D,EAAcnjB,EAAK+iB,EAAY/2C,GAC/Bo3C,EAAYH,EAASj3C,EAASg0B,EAAKh0B,EAAQ+2C,GAC7CI,EAAYlgE,QACZ0E,KAAKg7D,iBAAiBQ,EAAaD,EAAar5C,MAAM,GAEtDu5C,EAAUngE,QAAUigE,EAAar5C,MACjCliB,KAAKg7D,iBAAiBS,EAAWF,EAAar5C,MAAM,EAE3D,CACJ,aAAAg3C,CAAc19D,EAAG8/D,GACV,MAAMzoD,EAAO,CACTta,MAAOiD,EACP8/D,SACArK,YAAY,EACZyK,YAAa17D,KAAKm5C,cAAc39C,IAE9BmgE,EAAe3K,IAAUA,EAAOv4D,QAAQ+oB,QAAUxhB,KAAKvH,QAAQ+oB,QAAQhB,SAAShlB,EAAE0lD,OAAOhhD,MAC/F,IAA6D,IAAzDF,KAAKkoD,cAAc,cAAer1C,EAAM8oD,GACxC,OAEJ,MAAM3/C,EAAUhc,KAAK47D,aAAapgE,EAAG8/D,EAAQzoD,EAAK6oD,aAMlD,OALA7oD,EAAKo+C,YAAa,EAClBjxD,KAAKkoD,cAAc,aAAcr1C,EAAM8oD,IACnC3/C,GAAWnJ,EAAKmJ,UAChBhc,KAAKw3D,SAEFx3D,IACV,CACJ,YAAA47D,CAAapgE,EAAG8/D,EAAQI,GACjB,MAAQv9B,QAASi9B,EAAa,GAAE3iE,QAAGA,GAAauH,KAC1Ck5C,EAAmBoiB,EACnBj3C,EAASrkB,KAAK67D,mBAAmBrgE,EAAG4/D,EAAYM,EAAaxiB,GAC7D4iB,EDl+LV,SAAuBtgE,GACvB,MAAkB,YAAXA,EAAE0E,MAAiC,UAAX1E,EAAE0E,MAA+B,gBAAX1E,EAAE0E,IAC3D,CCg+LwB67D,CAAcvgE,GACxBwgE,EAhzBb,SAA4BxgE,EAAGwgE,EAAWN,EAAaI,GACpD,OAAKJ,GAA0B,aAAXlgE,EAAE0E,KAGlB47D,EACOE,EAEJxgE,EALI,IAMf,CAwyB0BygE,CAAmBzgE,EAAGwE,KAAKo2D,WAAYsF,EAAaI,GAClEJ,IACA17D,KAAKo2D,WAAa,KAClBz6D,GAASlD,EAAQ6pB,QAAS,CACtB9mB,EACA6oB,EACArkB,MACDA,MACC87D,GACAngE,GAASlD,EAAQ8pB,QAAS,CACtB/mB,EACA6oB,EACArkB,MACDA,OAGX,MAAMgc,GAAW7I,GAAekR,EAAQ+2C,GAMxC,OALIp/C,GAAWs/C,KACXt7D,KAAKm+B,QAAU9Z,EACfrkB,KAAKm5D,mBAAmB90C,EAAQ+2C,EAAYE,IAEhDt7D,KAAKo2D,WAAa4F,EACXhgD,CACV,CACJ,kBAAA6/C,CAAmBrgE,EAAG4/D,EAAYM,EAAaxiB,GACxC,GAAe,aAAX19C,EAAE0E,KACF,MAAO,GAEX,IAAKw7D,EACD,OAAON,EAEX,MAAMG,EAAev7D,KAAKvH,QAAQmpB,MAClC,OAAO5hB,KAAKo6D,0BAA0B5+D,EAAG+/D,EAAar5C,KAAMq5C,EAAcriB,EAC7E,GAEL,SAASyc,KACL,OAAO3iD,GAAKkpD,GAAM9G,WAAYx1C,GAAQA,EAAM42C,SAAStF,cACzD,CA4BI,SAASiL,GAAoBzyC,EAAKqpB,EAAaC,EAAaopB,GAC5D,MAAMx/D,EAVC8wB,GAUmBhE,EAAIjxB,QAAQ4jE,aAVN,CAC5B,aACA,WACA,aACA,aAOJ,MAAMC,GAAiBtpB,EAAcD,GAAe,EAC9CwpB,EAAaz7D,KAAKE,IAAIs7D,EAAeF,EAAarpB,EAAc,GAQhEypB,EAAqBtrD,IACvB,MAAMurD,GAAiBzpB,EAAclyC,KAAKE,IAAIs7D,EAAeprD,IAAQkrD,EAAa,EAClF,OAAOxjD,GAAY1H,EAAK,EAAGpQ,KAAKE,IAAIs7D,EAAeG,GAAe,EAEtE,MAAO,CACHC,WAAYF,EAAkB5/D,EAAE8/D,YAChCC,SAAUH,EAAkB5/D,EAAE+/D,UAC9BC,WAAYhkD,GAAYhc,EAAEggE,WAAY,EAAGL,GACzCM,SAAUjkD,GAAYhc,EAAEigE,SAAU,EAAGN,GAE7C,CAGI,SAASO,GAAW56D,EAAG66D,EAAOr5D,EAAG8Q,GACjC,MAAO,CACH9Q,EAAGA,EAAIxB,EAAIpB,KAAKsc,IAAI2/C,GACpBvoD,EAAGA,EAAItS,EAAIpB,KAAKqb,IAAI4gD,GAE5B,CAcI,SAASC,GAAQ7gE,EAAKrE,EAASotB,EAAQutB,EAASn6B,EAAKu9B,GACrD,MAAMnyC,EAAEA,IAAI8Q,EAAIs/B,WAAYz7B,EAAQ4kD,YAAAA,EAAclqB,YAAamqB,GAAYplE,EACrEk7C,EAAclyC,KAAKC,IAAIjJ,EAAQk7C,YAAcP,EAAUvtB,EAAS+3C,EAAa,GAC7ElqB,EAAcmqB,EAAS,EAAIA,EAASzqB,EAAUvtB,EAAS+3C,EAAc,EAC3E,IAAIE,EAAgB,EACpB,MAAM96D,EAAQiW,EAAMD,EACpB,GAAIo6B,EAAS,CAIT,MAEM2qB,IAFuBF,EAAS,EAAIA,EAASzqB,EAAU,IAChCO,EAAc,EAAIA,EAAcP,EAAU,IACI,EAE3E0qB,GAAiB96D,GAD4B,IAAvB+6D,EAA2B/6D,EAAQ+6D,GAAsBA,EAAqB3qB,GAAWpwC,IACrE,CAC7C,CACD,MACMg7D,GAAeh7D,EADRvB,KAAKC,IAAI,KAAOsB,EAAQ2wC,EAAc9tB,EAAS3P,IAAMy9B,GAC7B,EAC/Bc,EAAaz7B,EAAQglD,EAAcF,EACnCppB,EAAWz7B,EAAM+kD,EAAcF,GAC/BT,WAAEA,EAAUC,SAAGA,EAAWC,WAAAA,EAAaC,SAAAA,GAAcV,GAAoBrkE,EAASi7C,EAAaC,EAAae,EAAWD,GACvHwpB,EAA2BtqB,EAAc0pB,EACzCa,EAAyBvqB,EAAc2pB,EACvCa,EAA0B1pB,EAAa4oB,EAAaY,EACpDG,EAAwB1pB,EAAW4oB,EAAWY,EAC9CG,EAA2B3qB,EAAc6pB,EACzCe,EAAyB5qB,EAAc8pB,EACvCe,EAA0B9pB,EAAa8oB,EAAac,EACpDG,EAAwB9pB,EAAW8oB,EAAWc,EAEpD,GADAxhE,EAAIqtB,YACAqsB,EAAU,CAEV,MAAMioB,GAAyBN,EAA0BC,GAAyB,EAIlF,GAHAthE,EAAIutB,IAAIhmB,EAAG8Q,EAAGw+B,EAAawqB,EAAyBM,GACpD3hE,EAAIutB,IAAIhmB,EAAG8Q,EAAGw+B,EAAa8qB,EAAuBL,GAE9Cd,EAAW,EAAG,CACd,MAAMoB,EAAUjB,GAAWS,EAAwBE,EAAuB/5D,EAAG8Q,GAC7ErY,EAAIutB,IAAIq0C,EAAQr6D,EAAGq6D,EAAQvpD,EAAGmoD,EAAUc,EAAuB1pB,EAAWl+B,GAC7E,CAED,MAAMmoD,EAAKlB,GAAWa,EAAwB5pB,EAAUrwC,EAAG8Q,GAG3D,GAFArY,EAAI0tB,OAAOm0C,EAAGt6D,EAAGs6D,EAAGxpD,GAEhBqoD,EAAW,EAAG,CACd,MAAMkB,EAAUjB,GAAWa,EAAwBE,EAAuBn6D,EAAG8Q,GAC7ErY,EAAIutB,IAAIq0C,EAAQr6D,EAAGq6D,EAAQvpD,EAAGqoD,EAAU9oB,EAAWl+B,GAASgoD,EAAwB/8D,KAAKyU,GAC5F,CAED,MAAM0oD,GAAyBlqB,EAAW8oB,EAAW9pB,GAAee,EAAa8oB,EAAa7pB,IAAgB,EAI9G,GAHA52C,EAAIutB,IAAIhmB,EAAG8Q,EAAGu+B,EAAagB,EAAW8oB,EAAW9pB,EAAakrB,GAAuB,GACrF9hE,EAAIutB,IAAIhmB,EAAG8Q,EAAGu+B,EAAakrB,EAAuBnqB,EAAa8oB,EAAa7pB,GAAa,GAErF6pB,EAAa,EAAG,CAChB,MAAMmB,EAAUjB,GAAWY,EAA0BE,EAAyBl6D,EAAG8Q,GACjFrY,EAAIutB,IAAIq0C,EAAQr6D,EAAGq6D,EAAQvpD,EAAGooD,EAAYgB,EAA0B98D,KAAKyU,GAAIu+B,EAAaj+B,GAC7F,CAED,MAAMqoD,EAAKpB,GAAWQ,EAA0BxpB,EAAYpwC,EAAG8Q,GAG/D,GAFArY,EAAI0tB,OAAOq0C,EAAGx6D,EAAGw6D,EAAG1pD,GAEhBkoD,EAAa,EAAG,CAChB,MAAMqB,EAAUjB,GAAWQ,EAA0BE,EAAyB95D,EAAG8Q,GACjFrY,EAAIutB,IAAIq0C,EAAQr6D,EAAGq6D,EAAQvpD,EAAGkoD,EAAY5oB,EAAaj+B,GAAS2nD,EACnE,CACT,KAAW,CACHrhE,EAAIytB,OAAOlmB,EAAG8Q,GACd,MAAM2pD,EAAcr9D,KAAKsc,IAAIogD,GAA2BxqB,EAActvC,EAChE06D,EAAct9D,KAAKqb,IAAIqhD,GAA2BxqB,EAAcx+B,EACtErY,EAAI0tB,OAAOs0C,EAAaC,GACxB,MAAMC,EAAYv9D,KAAKsc,IAAIqgD,GAAyBzqB,EAActvC,EAC5D46D,EAAYx9D,KAAKqb,IAAIshD,GAAyBzqB,EAAcx+B,EAClErY,EAAI0tB,OAAOw0C,EAAWC,EACzB,CACDniE,EAAIwtB,WACR,CAiBA,SAAS6jC,GAAWrxD,EAAKrE,EAASotB,EAAQutB,EAASoD,GAC/C,MAAM0oB,YAAEA,EAAWzqB,WAAGA,EAAUtB,cAAGA,EAAa/5C,QAAGA,GAAaX,GAC1DkyB,YAAEA,EAAW+S,gBAAGA,EAAeF,WAAGA,EAAUC,iBAAGA,GAAsBrkC,EACrE+lE,EAAgC,UAAxB/lE,EAAQ88C,YACtB,IAAKvrB,EACD,OAEJ7tB,EAAImxD,YAAYzwB,GAAc,IAC9B1gC,EAAIoxD,eAAiBzwB,EACjB0hC,GACAriE,EAAIqpB,UAA0B,EAAdwE,EAChB7tB,EAAIsiE,SAAW1hC,GAAmB,UAElC5gC,EAAIqpB,UAAYwE,EAChB7tB,EAAIsiE,SAAW1hC,GAAmB,SAEtC,IAAIgX,EAAWj8C,EAAQi8C,SACvB,GAAIwqB,EAAa,CACbvB,GAAQ7gE,EAAKrE,EAASotB,EAAQutB,EAASsB,EAAU8B,GACjD,IAAI,IAAIn6C,EAAI,EAAGA,EAAI6iE,IAAe7iE,EAC9BS,EAAI8tB,SAEHrT,MAAM47B,KACPuB,EAAWD,GAActB,EAAgBh9B,IAAOA,IAEvD,CACGgpD,GA3LR,SAAiBriE,EAAKrE,EAASi8C,GAC3B,MAAMD,WAAEA,EAAampB,YAAAA,IAAcv5D,EAAC8Q,EAAGA,EAACw+B,YAAGA,EAAcD,YAAAA,GAAiBj7C,EAC1E,IAAI4mE,EAAczB,EAAcjqB,EAGhC72C,EAAIqtB,YACJrtB,EAAIutB,IAAIhmB,EAAG8Q,EAAGw+B,EAAac,EAAa4qB,EAAa3qB,EAAW2qB,GAC5D3rB,EAAckqB,GACdyB,EAAczB,EAAclqB,EAC5B52C,EAAIutB,IAAIhmB,EAAG8Q,EAAGu+B,EAAagB,EAAW2qB,EAAa5qB,EAAa4qB,GAAa,IAE7EviE,EAAIutB,IAAIhmB,EAAG8Q,EAAGyoD,EAAalpB,EAAWl+B,GAASi+B,EAAaj+B,IAEhE1Z,EAAIwtB,YACJxtB,EAAIkpB,MACR,CA6KQs5C,CAAQxiE,EAAKrE,EAASi8C,GAErBwqB,IACDvB,GAAQ7gE,EAAKrE,EAASotB,EAAQutB,EAASsB,EAAU8B,GACjD15C,EAAI8tB,SAEZ,CA6GA,SAAS20C,GAASziE,EAAK1D,EAASgB,EAAQhB,GACpC0D,EAAI0iE,QAAUrsD,GAAe/Y,EAAMmjC,eAAgBnkC,EAAQmkC,gBAC3DzgC,EAAImxD,YAAY96C,GAAe/Y,EAAMojC,WAAYpkC,EAAQokC,aACzD1gC,EAAIoxD,eAAiB/6C,GAAe/Y,EAAMqjC,iBAAkBrkC,EAAQqkC,kBACpE3gC,EAAIsiE,SAAWjsD,GAAe/Y,EAAMsjC,gBAAiBtkC,EAAQskC,iBAC7D5gC,EAAIqpB,UAAYhT,GAAe/Y,EAAMuwB,YAAavxB,EAAQuxB,aAC1D7tB,EAAI0vB,YAAcrZ,GAAe/Y,EAAMynB,YAAazoB,EAAQyoB,YAChE,CACA,SAAS2I,GAAO1tB,EAAKsuB,EAAUpzB,GAC3B8E,EAAI0tB,OAAOxyB,EAAOqM,EAAGrM,EAAOmd,EAChC,CAUA,SAASsqD,GAASnkD,EAAQqgB,EAAS6f,EAAS,CAAA,GACxC,MAAM//B,EAAQH,EAAOrf,QACb+c,MAAO0mD,EAAc,EAAIzmD,IAAK0mD,EAAYlkD,EAAQ,GAAO+/B,GACzDxiC,MAAO4mD,EAAe3mD,IAAK4mD,GAAgBlkC,EAC7C3iB,EAAQvX,KAAKC,IAAIg+D,EAAaE,GAC9B3mD,EAAMxX,KAAKE,IAAIg+D,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACHpkD,QACAzC,QACA8L,KAAM6W,EAAQ7W,KACd7Q,KAAMgF,EAAMD,IAAU8mD,EAAUrkD,EAAQxC,EAAMD,EAAQC,EAAMD,EAEpE,CACC,SAAS+mD,GAAYjjE,EAAKgvB,EAAM6P,EAAS6f,GACtC,MAAMlgC,OAAEA,EAAMliB,QAAGA,GAAa0yB,GACxBrQ,MAAEA,QAAQzC,EAAK8L,KAAGA,EAAO7Q,KAAAA,GAAUwrD,GAASnkD,EAAQqgB,EAAS6f,GAC7DwkB,EA1BT,SAAuB5mE,GACpB,OAAIA,EAAQ6mE,QACD90C,GAEP/xB,EAAQ28B,SAA8C,aAAnC38B,EAAQy8B,uBACpBtK,GAEJf,EACX,CAkBuB01C,CAAc9mE,GACjC,IACIiD,EAAGyuB,EAAOgL,GADVmX,KAAEA,GAAM,EAAIp5B,QAAGA,GAAa2nC,GAAU,CAAA,EAE1C,IAAIn/C,EAAI,EAAGA,GAAK4X,IAAQ5X,EACpByuB,EAAQxP,GAAQtC,GAASnF,EAAUI,EAAO5X,EAAIA,IAAMof,GAChDqP,EAAM4I,OAECuZ,GACPnwC,EAAIytB,OAAOO,EAAMzmB,EAAGymB,EAAM3V,GAC1B83B,GAAO,GAEP+yB,EAAWljE,EAAKg5B,EAAMhL,EAAOjX,EAASza,EAAQ6mE,SAElDnqC,EAAOhL,GAMX,OAJIhG,IACAgG,EAAQxP,GAAQtC,GAASnF,EAAUI,EAAO,IAAMwH,GAChDukD,EAAWljE,EAAKg5B,EAAMhL,EAAOjX,EAASza,EAAQ6mE,YAEzCn7C,CACb,CACC,SAASq7C,GAAgBrjE,EAAKgvB,EAAM6P,EAAS6f,GAC1C,MAAMlgC,EAASwQ,EAAKxQ,QACdG,MAAEA,EAAQzC,MAAAA,OAAQ/E,GAAUwrD,GAASnkD,EAAQqgB,EAAS6f,IACtDvO,KAAEA,GAAM,EAAIp5B,QAAGA,GAAa2nC,GAAU,CAAA,EAC5C,IAEIn/C,EAAGyuB,EAAOs1C,EAAOhrB,EAAMF,EAAMmrB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAc1/D,IAASkY,GAASnF,EAAUI,EAAOnT,EAAQA,IAAU2a,EACnEglD,EAAQ,KACNrrB,IAASF,IACTp4C,EAAI0tB,OAAO81C,EAAMprB,GACjBp4C,EAAI0tB,OAAO81C,EAAMlrB,GACjBt4C,EAAI0tB,OAAO81C,EAAMD,GACpB,EAML,IAJIpzB,IACAniB,EAAQxP,EAAOklD,EAAW,IAC1B1jE,EAAIytB,OAAOO,EAAMzmB,EAAGymB,EAAM3V,IAE1B9Y,EAAI,EAAGA,GAAK4X,IAAQ5X,EAAE,CAEtB,GADAyuB,EAAQxP,EAAOklD,EAAWnkE,IACtByuB,EAAM4I,KACN,SAEJ,MAAMrvB,EAAIymB,EAAMzmB,EACV8Q,EAAI2V,EAAM3V,EACVurD,EAAa,EAAJr8D,EACXq8D,IAAWN,GACPjrD,EAAIigC,EACJA,EAAOjgC,EACAA,EAAI+/B,IACXA,EAAO//B,GAEXmrD,GAAQC,EAASD,EAAOj8D,KAAOk8D,IAE/BE,IACA3jE,EAAI0tB,OAAOnmB,EAAG8Q,GACdirD,EAAQM,EACRH,EAAS,EACTnrB,EAAOF,EAAO//B,GAElBkrD,EAAQlrD,CACX,CACDsrD,GACJ,CACC,SAASE,GAAkB70C,GACxB,MAAMC,EAAOD,EAAK1yB,QACZokC,EAAazR,EAAKyR,YAAczR,EAAKyR,WAAWvhC,OAEtD,QADqB6vB,EAAK6rB,YAAe7rB,EAAK2U,OAAU1U,EAAKgK,SAA2C,aAAhChK,EAAK8J,wBAA0C9J,EAAKk0C,SAAYziC,GACnH2iC,GAAkBJ,EAC3C,CAoCA,MAAMa,GAA8B,mBAAXC,OACzB,SAAShiC,GAAK/hC,EAAKgvB,EAAM9S,EAAOyC,GACxBmlD,KAAc90C,EAAK1yB,QAAQuiC,QA5BnC,SAA6B7+B,EAAKgvB,EAAM9S,EAAOyC,GAC3C,IAAIqlD,EAAOh1C,EAAKi1C,MACXD,IACDA,EAAOh1C,EAAKi1C,MAAQ,IAAIF,OACpB/0C,EAAKg1C,KAAKA,EAAM9nD,EAAOyC,IACvBqlD,EAAKx2C,aAGbi1C,GAASziE,EAAKgvB,EAAK1yB,SACnB0D,EAAI8tB,OAAOk2C,EACf,CAmBQE,CAAoBlkE,EAAKgvB,EAAM9S,EAAOyC,GAlB9C,SAA0B3e,EAAKgvB,EAAM9S,EAAOyC,GACxC,MAAM4gB,SAAEA,EAAQjjC,QAAGA,GAAa0yB,EAC1Bm1C,EAAgBN,GAAkB70C,GACxC,IAAK,MAAM6P,KAAWU,EAClBkjC,GAASziE,EAAK1D,EAASuiC,EAAQvhC,OAC/B0C,EAAIqtB,YACA82C,EAAcnkE,EAAKgvB,EAAM6P,EAAS,CAClC3iB,QACAC,IAAKD,EAAQyC,EAAQ,KAErB3e,EAAIwtB,YAERxtB,EAAI8tB,QAEZ,CAMQs2C,CAAiBpkE,EAAKgvB,EAAM9S,EAAOyC,EAE3C,CACA,MAAM0lD,WAAoB7b,GACtBrgB,UAAY,OACfA,gBAAkB,CACX1H,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjB/S,YAAa,EACbqL,iBAAiB,EACjBH,uBAAwB,UACxB72B,MAAM,EACN42B,UAAU,EACVqqC,SAAS,EACTlqC,QAAS,GAEhBkP,qBAAuB,CAChBrjB,gBAAiB,kBACjBC,YAAa,eAEjBojB,mBAAqB,CACjB1gB,aAAa,EACbE,WAAa/rB,GAAgB,eAATA,GAAkC,SAATA,GAEjD,WAAA+X,CAAY2vB,GACRiQ,QACA1vC,KAAKi3C,UAAW,EAChBj3C,KAAKvH,aAAU6E,EACf0C,KAAK+7B,YAASz+B,EACd0C,KAAK8/B,WAAQxiC,EACb0C,KAAK23C,eAAYr6C,EACjB0C,KAAKogE,WAAQ9iE,EACb0C,KAAKygE,aAAUnjE,EACf0C,KAAK0gE,eAAYpjE,EACjB0C,KAAKg3C,YAAa,EAClBh3C,KAAK2gE,gBAAiB,EACtB3gE,KAAKk8B,mBAAgB5+B,EACjBmiC,GACAlpC,OAAOP,OAAOgK,KAAMy/B,EAE3B,CACD,mBAAA+X,CAAoBtN,EAAWloB,GAC3B,MAAMvpB,EAAUuH,KAAKvH,QACrB,IAAKA,EAAQ28B,SAA8C,aAAnC38B,EAAQy8B,0BAA2Cz8B,EAAQ6mE,UAAYt/D,KAAK2gE,eAAgB,CAChH,MAAMx8C,EAAO1rB,EAAQw8B,SAAWj1B,KAAK8/B,MAAQ9/B,KAAK23C,UAClD5iB,GAA2B/0B,KAAKygE,QAAShoE,EAASyxC,EAAW/lB,EAAMnC,GACnEhiB,KAAK2gE,gBAAiB,CACzB,CACJ,CACD,UAAIhmD,CAAOA,GACP3a,KAAKygE,QAAU9lD,SACR3a,KAAK0gE,iBACL1gE,KAAKogE,MACZpgE,KAAK2gE,gBAAiB,CACzB,CACD,UAAIhmD,GACA,OAAO3a,KAAKygE,OACf,CACD,YAAI/kC,GACA,OAAO17B,KAAK0gE,YAAc1gE,KAAK0gE,UDxtItC,SAA0Bv1C,EAAM0Q,GAC7B,MAAMlhB,EAASwQ,EAAKxQ,OACdsa,EAAW9J,EAAK1yB,QAAQw8B,SACxBna,EAAQH,EAAOrf,OACrB,IAAKwf,EACD,MAAO,GAEX,MAAMqJ,IAASgH,EAAK2U,OACdznB,MAAEA,EAAQC,IAAAA,GAnEnB,SAAyBqC,EAAQG,EAAOqJ,EAAM8Q,GAC3C,IAAI5c,EAAQ,EACRC,EAAMwC,EAAQ,EAClB,GAAIqJ,IAAS8Q,EACT,KAAM5c,EAAQyC,IAAUH,EAAOtC,GAAO0a,MAClC1a,IAGR,KAAMA,EAAQyC,GAASH,EAAOtC,GAAO0a,MACjC1a,IAMJ,IAJAA,GAASyC,EACLqJ,IACA7L,GAAOD,GAELC,EAAMD,GAASsC,EAAOrC,EAAMwC,GAAOiY,MACrCza,IAGJ,OADAA,GAAOwC,EACA,CACHzC,QACAC,MAER,CA4C6BsoD,CAAgBjmD,EAAQG,EAAOqJ,EAAM8Q,GAC9D,OACW2G,GAAczQ,GADR,IAAb8J,EAC2B,CACvB,CACI5c,QACAC,MACA6L,SAjDf,SAAuBxJ,EAAQtC,EAAOtX,EAAKojB,GACxC,MAAMrJ,EAAQH,EAAOrf,OACfnE,EAAS,GACf,IAEImhB,EAFAe,EAAOhB,EACP8c,EAAOxa,EAAOtC,GAElB,IAAIC,EAAMD,EAAQ,EAAGC,GAAOvX,IAAOuX,EAAI,CACnC,MAAMumB,EAAMlkB,EAAOrC,EAAMwC,GACrB+jB,EAAI9L,MAAQ8L,EAAIE,KACX5J,EAAKpC,OACN5O,GAAO,EACPhtB,EAAOkD,KAAK,CACRge,MAAOA,EAAQyC,EACfxC,KAAMA,EAAM,GAAKwC,EACjBqJ,SAEJ9L,EAAQgB,EAAOwlB,EAAIE,KAAOzmB,EAAM,OAGpCe,EAAOf,EACH6c,EAAKpC,OACL1a,EAAQC,IAGhB6c,EAAO0J,CACV,CAQD,OAPa,OAATxlB,GACAliB,EAAOkD,KAAK,CACRge,MAAOA,EAAQyC,EACfxC,IAAKe,EAAOyB,EACZqJ,SAGDhtB,CACX,CAqB+B0pE,CAAclmD,EAAQtC,EAFrCC,EAAMD,EAAQC,EAAMwC,EAAQxC,IACjB6S,EAAKwsB,WAAuB,IAAVt/B,GAAeC,IAAQwC,EAAQ,GAHjEH,EAAQkhB,EAKnB,CCmsImDilC,CAAiB9gE,KAAMA,KAAKvH,QAAQuiC,SAClF,CACJ,KAAAgoB,GACO,MAAMtnB,EAAW17B,KAAK07B,SAChB/gB,EAAS3a,KAAK2a,OACpB,OAAO+gB,EAASpgC,QAAUqf,EAAO+gB,EAAS,GAAGrjB,MAChD,CACJ,IAAAgB,GACO,MAAMqiB,EAAW17B,KAAK07B,SAChB/gB,EAAS3a,KAAK2a,OACdG,EAAQ4gB,EAASpgC,OACvB,OAAOwf,GAASH,EAAO+gB,EAAS5gB,EAAQ,GAAGxC,IAC9C,CACJ,WAAA1H,CAAYuZ,EAAOpT,GACZ,MAAMte,EAAUuH,KAAKvH,QACfK,EAAQqxB,EAAMpT,GACd4D,EAAS3a,KAAK2a,OACd+gB,EAAWD,GAAez7B,KAAM,CAClC+W,WACAsB,MAAOvf,EACPwf,IAAKxf,IAET,IAAK4iC,EAASpgC,OACV,OAEJ,MAAMnE,EAAS,GACT4pE,EA/Hb,SAAiCtoE,GAC9B,OAAIA,EAAQ6mE,QACDhmC,GAEP7gC,EAAQ28B,SAA8C,aAAnC38B,EAAQy8B,uBACpBqE,GAEJF,EACX,CAuH6B2nC,CAAwBvoE,GAC7C,IAAIiD,EAAG4X,EACP,IAAI5X,EAAI,EAAG4X,EAAOooB,EAASpgC,OAAQI,EAAI4X,IAAQ5X,EAAE,CAC7C,MAAM2c,MAAEA,EAAQC,IAAAA,GAASojB,EAAShgC,GAC5B4H,EAAKqX,EAAOtC,GACZ9U,EAAKoX,EAAOrC,GAClB,GAAIhV,IAAOC,EAAI,CACXpM,EAAOkD,KAAKiJ,GACZ,QACH,CACD,MACM29D,EAAeF,EAAaz9D,EAAIC,EAD5BzC,KAAKsV,KAAKtd,EAAQwK,EAAGyT,KAAcxT,EAAGwT,GAAYzT,EAAGyT,KAClBte,EAAQ6mE,SACrD2B,EAAalqD,GAAYoT,EAAMpT,GAC/B5f,EAAOkD,KAAK4mE,EACf,CACD,OAAyB,IAAlB9pE,EAAOmE,OAAenE,EAAO,GAAKA,CAC5C,CACJ,WAAAioE,CAAYjjE,EAAK6+B,EAAS6f,GAEnB,OADsBmlB,GAAkBhgE,KACjCsgE,CAAcnkE,EAAK6D,KAAMg7B,EAAS6f,EAC5C,CACJ,IAAAslB,CAAKhkE,EAAKkc,EAAOyC,GACV,MAAM4gB,EAAW17B,KAAK07B,SAChB4kC,EAAgBN,GAAkBhgE,MACxC,IAAImkB,EAAOnkB,KAAK8/B,MAChBznB,EAAQA,GAAS,EACjByC,EAAQA,GAAS9a,KAAK2a,OAAOrf,OAAS+c,EACtC,IAAK,MAAM2iB,KAAWU,EAClBvX,GAAQm8C,EAAcnkE,EAAK6D,KAAMg7B,EAAS,CACtC3iB,QACAC,IAAKD,EAAQyC,EAAQ,IAG7B,QAASqJ,CACZ,CACJ,IAAA+Z,CAAK/hC,EAAK+tC,EAAW7xB,EAAOyC,GACrB,MAAMriB,EAAUuH,KAAKvH,SAAW,IACjBuH,KAAK2a,QAAU,IACnBrf,QAAU7C,EAAQuxB,cACzB7tB,EAAIyrB,OACJsW,GAAK/hC,EAAK6D,KAAMqY,EAAOyC,GACvB3e,EAAI4rB,WAEJ/nB,KAAKi3C,WACLj3C,KAAK2gE,gBAAiB,EACtB3gE,KAAKogE,WAAQ9iE,EAEpB,EAGL,SAAS4jE,GAAUhoC,EAAI1C,EAAKtb,EAAMg+B,GAC9B,MAAMzgD,EAAUygC,EAAGzgC,SACXyiB,CAACA,GAAOpiB,GAAWogC,EAAG6gB,SAAS,CACnC7+B,GACDg+B,GACH,OAAOp4C,KAAKsV,IAAIogB,EAAM19B,GAASL,EAAQ2wB,OAAS3wB,EAAQ0oE,SAC5D,CAiFA,SAASC,GAAaC,EAAKnoB,GACvB,MAAMx1C,EAAEA,EAAI8Q,EAAAA,OAAI8yB,EAAIphB,MAAGA,EAAKwC,OAAGA,GAAa24C,EAAItnB,SAAS,CACrD,IACA,IACA,OACA,QACA,UACDb,GACH,IAAIl0B,EAAMF,EAAOD,EAAKE,EAAQu8C,EAc9B,OAbID,EAAI1yB,YACJ2yB,EAAO54C,EAAS,EAChB1D,EAAOlkB,KAAKE,IAAI0C,EAAG4jC,GACnBxiB,EAAQhkB,KAAKC,IAAI2C,EAAG4jC,GACpBziB,EAAMrQ,EAAI8sD,EACVv8C,EAASvQ,EAAI8sD,IAEbA,EAAOp7C,EAAQ,EACflB,EAAOthB,EAAI49D,EACXx8C,EAAQphB,EAAI49D,EACZz8C,EAAM/jB,KAAKE,IAAIwT,EAAG8yB,GAClBviB,EAASjkB,KAAKC,IAAIyT,EAAG8yB,IAElB,CACHtiB,OACAH,MACAC,QACAC,SAER,CACA,SAASw8C,GAAYxuC,EAAMj6B,EAAOkI,EAAKD,GACnC,OAAOgyB,EAAO,EAAIna,GAAY9f,EAAOkI,EAAKD,EAC9C,CA4BA,SAASygE,GAAcH,GACnB,MAAMj8C,EAASg8C,GAAaC,GACtBn7C,EAAQd,EAAON,MAAQM,EAAOJ,KAC9B0D,EAAStD,EAAOL,OAASK,EAAOP,IAChCkB,EA/BV,SAA0Bs7C,EAAKI,EAAMC,GACjC,MAAM5oE,EAAQuoE,EAAI5oE,QAAQuxB,YACpB+I,EAAOsuC,EAAI3yB,cACX9xC,EAAIkxB,GAAOh1B,GACjB,MAAO,CACH+X,EAAG0wD,GAAYxuC,EAAKlO,IAAKjoB,EAAEioB,IAAK,EAAG68C,GACnCx/D,EAAGq/D,GAAYxuC,EAAKjO,MAAOloB,EAAEkoB,MAAO,EAAG28C,GACvCzqE,EAAGuqE,GAAYxuC,EAAKhO,OAAQnoB,EAAEmoB,OAAQ,EAAG28C,GACzC9hE,EAAG2hE,GAAYxuC,EAAK/N,KAAMpoB,EAAEooB,KAAM,EAAGy8C,GAE7C,CAqBmBE,CAAiBN,EAAKn7C,EAAQ,EAAGwC,EAAS,GACnDU,EArBV,SAA2Bi4C,EAAKI,EAAMC,GAClC,MAAM7yB,mBAAEA,GAAwBwyB,EAAItnB,SAAS,CACzC,uBAEEjhD,EAAQuoE,EAAI5oE,QAAQ4jE,aACpBz/D,EAAImxB,GAAcj1B,GAClB8oE,EAAO9gE,KAAKE,IAAIygE,EAAMC,GACtB3uC,EAAOsuC,EAAI3yB,cACXmzB,EAAehzB,GAAsB38B,GAASpZ,GACpD,MAAO,CACHk0B,QAASu0C,IAAaM,GAAgB9uC,EAAKlO,KAAOkO,EAAK/N,KAAMpoB,EAAEowB,QAAS,EAAG40C,GAC3Ez0C,SAAUo0C,IAAaM,GAAgB9uC,EAAKlO,KAAOkO,EAAKjO,MAAOloB,EAAEuwB,SAAU,EAAGy0C,GAC9E30C,WAAYs0C,IAAaM,GAAgB9uC,EAAKhO,QAAUgO,EAAK/N,KAAMpoB,EAAEqwB,WAAY,EAAG20C,GACpF10C,YAAaq0C,IAAaM,GAAgB9uC,EAAKhO,QAAUgO,EAAKjO,MAAOloB,EAAEswB,YAAa,EAAG00C,GAE/F,CAMmBE,CAAkBT,EAAKn7C,EAAQ,EAAGwC,EAAS,GAC1D,MAAO,CACHq5C,MAAO,CACHr+D,EAAG0hB,EAAOJ,KACVxQ,EAAG4Q,EAAOP,IACVliB,EAAGujB,EACHrlB,EAAG6nB,EACHU,UAEJo1C,MAAO,CACH96D,EAAG0hB,EAAOJ,KAAOe,EAAOnmB,EACxB4U,EAAG4Q,EAAOP,IAAMkB,EAAOlV,EACvBlO,EAAGujB,EAAQH,EAAOnmB,EAAImmB,EAAO7jB,EAC7BrB,EAAG6nB,EAAS3C,EAAOlV,EAAIkV,EAAO/uB,EAC9BoyB,OAAQ,CACJ4D,QAASlsB,KAAKC,IAAI,EAAGqoB,EAAO4D,QAAUlsB,KAAKC,IAAIglB,EAAOlV,EAAGkV,EAAOnmB,IAChEutB,SAAUrsB,KAAKC,IAAI,EAAGqoB,EAAO+D,SAAWrsB,KAAKC,IAAIglB,EAAOlV,EAAGkV,EAAO7jB,IAClE+qB,WAAYnsB,KAAKC,IAAI,EAAGqoB,EAAO6D,WAAansB,KAAKC,IAAIglB,EAAO/uB,EAAG+uB,EAAOnmB,IACtEstB,YAAapsB,KAAKC,IAAI,EAAGqoB,EAAO8D,YAAcpsB,KAAKC,IAAIglB,EAAO/uB,EAAG+uB,EAAO7jB,MAIxF,CACA,SAASk3C,GAAQioB,EAAK39D,EAAG8Q,EAAG0kC,GACxB,MAAM8oB,EAAc,OAANt+D,EACRu+D,EAAc,OAANztD,EAER4Q,EAASi8C,KADEW,GAASC,IACSb,GAAaC,EAAKnoB,GACrD,OAAO9zB,IAAW48C,GAASnpD,GAAWnV,EAAG0hB,EAAOJ,KAAMI,EAAON,UAAYm9C,GAASppD,GAAWrE,EAAG4Q,EAAOP,IAAKO,EAAOL,QACvH,CAIC,SAASm9C,GAAkB/lE,EAAK4tB,GAC7B5tB,EAAI4tB,KAAKA,EAAKrmB,EAAGqmB,EAAKvV,EAAGuV,EAAKpnB,EAAGonB,EAAKlpB,EAC1C,CACA,SAASshE,GAAYp4C,EAAMq4C,EAAQC,EAAU,CAAA,GACzC,MAAM3+D,EAAIqmB,EAAKrmB,IAAM2+D,EAAQ3+D,GAAK0+D,EAAS,EACrC5tD,EAAIuV,EAAKvV,IAAM6tD,EAAQ7tD,GAAK4tD,EAAS,EACrCz/D,GAAKonB,EAAKrmB,EAAIqmB,EAAKpnB,IAAM0/D,EAAQ3+D,EAAI2+D,EAAQ1/D,EAAIy/D,EAAS,GAAK1+D,EAC/D7C,GAAKkpB,EAAKvV,EAAIuV,EAAKlpB,IAAMwhE,EAAQ7tD,EAAI6tD,EAAQxhE,EAAIuhE,EAAS,GAAK5tD,EACrE,MAAO,CACH9Q,EAAGqmB,EAAKrmB,EAAIA,EACZ8Q,EAAGuV,EAAKvV,EAAIA,EACZ7R,EAAGonB,EAAKpnB,EAAIA,EACZ9B,EAAGkpB,EAAKlpB,EAAIA,EACZuoB,OAAQW,EAAKX,OAErB,CAuEA,IAAI7H,GAAwBhrB,OAAOu0C,OAAO,CAC1CvxC,UAAW,KACX+oE,WA1pBA,cAAyB3d,GACrBrgB,UAAY,MACZA,gBAAkB,CACdiR,YAAa,SACbr0B,YAAa,OACb2b,WAAY,GACZC,iBAAkB,EAClBC,qBAAiBz/B,EACjB++D,aAAc,EACdryC,YAAa,EACb9E,OAAQ,EACRutB,QAAS,EACT76B,WAAOta,EACPu4C,UAAU,GAEdvR,qBAAuB,CACnBrjB,gBAAiB,mBAErBqjB,mBAAqB,CACjB1gB,aAAa,EACbE,WAAa/rB,GAAgB,eAATA,GAExBy6C,cACAuB,SACAwqB,YACAxrB,YACAC,YACAiqB,YACAnpB,WACA,WAAAhkC,CAAY2vB,GACRiQ,QACA1vC,KAAKvH,aAAU6E,EACf0C,KAAKwyC,mBAAgBl1C,EACrB0C,KAAK8zC,gBAAax2C,EAClB0C,KAAK+zC,cAAWz2C,EAChB0C,KAAK+yC,iBAAcz1C,EACnB0C,KAAKgzC,iBAAc11C,EACnB0C,KAAKi9D,YAAc,EACnBj9D,KAAKu+D,YAAc,EACf9+B,GACAlpC,OAAOP,OAAOgK,KAAMy/B,EAE3B,CACD,OAAA2Z,CAAQmpB,EAAQC,EAAQtpB,GACpB,MAAM/uB,EAAQnqB,KAAK+5C,SAAS,CACxB,IACA,KACDb,IACGthC,MAAEA,EAAQE,SAAAA,GAAcT,GAAkB8S,EAAO,CACnDzmB,EAAG6+D,EACH/tD,EAAGguD,KAED1uB,WAAEA,EAAaC,SAAAA,cAAWhB,EAAWC,YAAGA,EAAWR,cAAGA,GAAmBxyC,KAAK+5C,SAAS,CACzF,aACA,WACA,cACA,cACA,iBACDb,GACGupB,GAAWziE,KAAKvH,QAAQg6C,QAAUzyC,KAAKvH,QAAQuxB,aAAe,EAE9D04C,EADiBlwD,GAAeggC,EAAeuB,EAAWD,IACxBt+B,IAAO4C,GAAcR,EAAOk8B,EAAYC,GAC1E4uB,EAAe9pD,GAAWf,EAAUi7B,EAAc0vB,EAASzvB,EAAcyvB,GAC/E,OAAOC,GAAiBC,CAC3B,CACD,cAAA9oB,CAAeX,GACX,MAAMx1C,EAAEA,IAAI8Q,EAACs/B,WAAGA,EAAaC,SAAAA,EAAWhB,YAAAA,cAAcC,GAAiBhzC,KAAK+5C,SAAS,CACjF,IACA,IACA,aACA,WACA,cACA,eACDb,IACGh0B,OAAEA,EAASutB,QAAAA,GAAazyC,KAAKvH,QAC7BmqE,GAAa9uB,EAAaC,GAAY,EACtC8uB,GAAc9vB,EAAcC,EAAcP,EAAUvtB,GAAU,EACpE,MAAO,CACHxhB,EAAGA,EAAI5C,KAAKsc,IAAIwlD,GAAaC,EAC7BruD,EAAGA,EAAI1T,KAAKqb,IAAIymD,GAAaC,EAEpC,CACD,eAAA7gB,CAAgB9I,GACZ,OAAOl5C,KAAK65C,eAAeX,EAC9B,CACD,IAAAhb,CAAK/hC,GACD,MAAM1D,QAAEA,EAAO+5C,cAAGA,GAAmBxyC,KAC/BklB,GAAUzsB,EAAQysB,QAAU,GAAK,EACjCutB,GAAWh6C,EAAQg6C,SAAW,GAAK,EACnCoD,EAAWp9C,EAAQo9C,SAGzB,GAFA71C,KAAKi9D,YAAsC,UAAxBxkE,EAAQ88C,YAA0B,IAAO,EAC5Dv1C,KAAKu+D,YAAc/rB,EAAgBh9B,GAAM1U,KAAK2V,MAAM+7B,EAAgBh9B,IAAO,EACrD,IAAlBg9B,GAAuBxyC,KAAK+yC,YAAc,GAAK/yC,KAAKgzC,YAAc,EAClE,OAEJ72C,EAAIyrB,OACJ,MAAMg7C,GAAa5iE,KAAK8zC,WAAa9zC,KAAK+zC,UAAY,EACtD53C,EAAImtB,UAAUxoB,KAAKsc,IAAIwlD,GAAa19C,EAAQpkB,KAAKqb,IAAIymD,GAAa19C,GAClE,MACM49C,EAAe59C,GADT,EAAIpkB,KAAKqb,IAAIrb,KAAKE,IAAIuU,GAAIi9B,GAAiB,KAEvDr2C,EAAI2vB,UAAYrzB,EAAQwoB,gBACxB9kB,EAAI0vB,YAAcpzB,EAAQyoB,YAvJlC,SAAiB/kB,EAAKrE,EAASotB,EAAQutB,EAASoD,GAC5C,MAAM0oB,YAAEA,EAAczqB,WAAAA,gBAAatB,GAAmB16C,EACtD,IAAIi8C,EAAWj8C,EAAQi8C,SACvB,GAAIwqB,EAAa,CACbvB,GAAQ7gE,EAAKrE,EAASotB,EAAQutB,EAASsB,EAAU8B,GACjD,IAAI,IAAIn6C,EAAI,EAAGA,EAAI6iE,IAAe7iE,EAC9BS,EAAIkC,OAEHuY,MAAM47B,KACPuB,EAAWD,GAActB,EAAgBh9B,IAAOA,IAEvD,CACDwnD,GAAQ7gE,EAAKrE,EAASotB,EAAQutB,EAASsB,EAAU8B,GACjD15C,EAAIkC,MAER,CAyIQ0kE,CAAQ5mE,EAAK6D,KAAM8iE,EAAcrwB,EAASoD,GAC1C2X,GAAWrxD,EAAK6D,KAAM8iE,EAAcrwB,EAASoD,GAC7C15C,EAAI4rB,SACP,GAkjBLi7C,WAzEA,cAAyBre,GACrBrgB,UAAY,MACfA,gBAAkB,CACXoK,cAAe,QACf1kB,YAAa,EACbqyC,aAAc,EACdltB,cAAe,OACfjmB,gBAAY5rB,GAEnBgnC,qBAAuB,CAChBrjB,gBAAiB,kBACjBC,YAAa,eAEjB,WAAApR,CAAY2vB,GACRiQ,QACA1vC,KAAKvH,aAAU6E,EACf0C,KAAK2uC,gBAAarxC,EAClB0C,KAAKsnC,UAAOhqC,EACZ0C,KAAKkmB,WAAQ5oB,EACb0C,KAAK0oB,YAASprB,EACd0C,KAAKmvC,mBAAgB7xC,EACjBmiC,GACAlpC,OAAOP,OAAOgK,KAAMy/B,EAE3B,CACD,IAAAvB,CAAK/hC,GACD,MAAMgzC,cAAEA,EAAgB12C,SAASyoB,YAAEA,EAAWD,gBAAGA,IAAwBjhB,MACnEw+D,MAAEA,EAAQuD,MAAAA,GAAWP,GAAcxhE,MACnCijE,GA/CK75C,EA+CmB24C,EAAM34C,QA9C1B4D,SAAW5D,EAAO+D,UAAY/D,EAAO6D,YAAc7D,EAAO8D,YA8CtBH,GAAqBm1C,GA/C3E,IAAmB94C,EAgDXjtB,EAAIyrB,OACAm6C,EAAMp/D,IAAM67D,EAAM77D,GAAKo/D,EAAMlhE,IAAM29D,EAAM39D,IACzC1E,EAAIqtB,YACJy5C,EAAY9mE,EAAKgmE,GAAYJ,EAAO5yB,EAAeqvB,IACnDriE,EAAIkpB,OACJ49C,EAAY9mE,EAAKgmE,GAAY3D,GAAQrvB,EAAe4yB,IACpD5lE,EAAI2vB,UAAY5K,EAChB/kB,EAAIkC,KAAK,YAEblC,EAAIqtB,YACJy5C,EAAY9mE,EAAKgmE,GAAY3D,EAAOrvB,IACpChzC,EAAI2vB,UAAY7K,EAChB9kB,EAAIkC,OACJlC,EAAI4rB,SACP,CACD,OAAAqxB,CAAQ8pB,EAAQC,EAAQjqB,GACpB,OAAOE,GAAQp5C,KAAMkjE,EAAQC,EAAQjqB,EACxC,CACD,QAAAkqB,CAASF,EAAQhqB,GACb,OAAOE,GAAQp5C,KAAMkjE,EAAQ,KAAMhqB,EACtC,CACD,QAAAmqB,CAASF,EAAQjqB,GACb,OAAOE,GAAQp5C,KAAM,KAAMmjE,EAAQjqB,EACtC,CACD,cAAAW,CAAeX,GACX,MAAMx1C,EAAEA,EAAC8Q,EAAGA,EAAI8yB,KAAAA,EAAOqH,WAAAA,GAAiB3uC,KAAK+5C,SAAS,CAClD,IACA,IACA,OACA,cACDb,GACH,MAAO,CACHx1C,EAAGirC,GAAcjrC,EAAI4jC,GAAQ,EAAI5jC,EACjC8Q,EAAGm6B,EAAan6B,GAAKA,EAAI8yB,GAAQ,EAExC,CACD,QAAAuR,CAAS39B,GACL,MAAgB,MAATA,EAAelb,KAAKkmB,MAAQ,EAAIlmB,KAAK0oB,OAAS,CACxD,GAOL83C,YAAaA,GACb8C,aA5QA,cAA2B3e,GACvBrgB,UAAY,QACZ3R,OACAI,KACAgM,KAGEuF,gBAAkB,CAChBta,YAAa,EACbm3C,UAAW,EACX3rB,iBAAkB,EAClB+tB,YAAa,EACbr6C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAIZmb,qBAAuB,CACrBrjB,gBAAiB,kBACjBC,YAAa,eAEjB,WAAApR,CAAY2vB,GACRiQ,QACA1vC,KAAKvH,aAAU6E,EACf0C,KAAK2yB,YAASr1B,EACd0C,KAAK+yB,UAAOz1B,EACZ0C,KAAK++B,UAAOzhC,EACRmiC,GACAlpC,OAAOP,OAAOgK,KAAMy/B,EAE3B,CACD,OAAA2Z,CAAQ8pB,EAAQC,EAAQjqB,GACpB,MAAMzgD,EAAUuH,KAAKvH,SACfiL,EAAEA,EAAI8Q,EAAAA,GAAOxU,KAAK+5C,SAAS,CAC7B,IACA,KACDb,GACH,OAAOp4C,KAAKoO,IAAIg0D,EAASx/D,EAAG,GAAK5C,KAAKoO,IAAIi0D,EAAS3uD,EAAG,GAAK1T,KAAKoO,IAAIzW,EAAQ0oE,UAAY1oE,EAAQ2wB,OAAQ,EAC3G,CACD,QAAAg6C,CAASF,EAAQhqB,GACb,OAAOgoB,GAAUlhE,KAAMkjE,EAAQ,IAAKhqB,EACvC,CACD,QAAAmqB,CAASF,EAAQjqB,GACb,OAAOgoB,GAAUlhE,KAAMmjE,EAAQ,IAAKjqB,EACvC,CACD,cAAAW,CAAeX,GACX,MAAMx1C,EAAEA,EAAI8Q,EAAAA,GAAOxU,KAAK+5C,SAAS,CAC7B,IACA,KACDb,GACH,MAAO,CACHx1C,IACA8Q,IAEP,CACD,IAAAa,CAAK5c,GAED,IAAI2wB,GADJ3wB,EAAUA,GAAWuH,KAAKvH,SAAW,CAAA,GAChB2wB,QAAU,EAC/BA,EAAStoB,KAAKC,IAAIqoB,EAAQA,GAAU3wB,EAAQ8qE,aAAe,GAE3D,OAAgC,GAAxBn6C,GADYA,GAAU3wB,EAAQuxB,aAAe,GAExD,CACD,IAAAkU,CAAK/hC,EAAKiuB,GACN,MAAM3xB,EAAUuH,KAAKvH,QACjBuH,KAAK+yB,MAAQt6B,EAAQ2wB,OAAS,KAAQc,GAAelqB,KAAMoqB,EAAMpqB,KAAKqV,KAAK5c,GAAW,KAG1F0D,EAAI0vB,YAAcpzB,EAAQyoB,YAC1B/kB,EAAIqpB,UAAY/sB,EAAQuxB,YACxB7tB,EAAI2vB,UAAYrzB,EAAQwoB,gBACxB0H,GAAUxsB,EAAK1D,EAASuH,KAAK0D,EAAG1D,KAAKwU,GACxC,CACD,QAAAqkC,GACI,MAAMpgD,EAAUuH,KAAKvH,SAAW,GAEhC,OAAOA,EAAQ2wB,OAAS3wB,EAAQ0oE,SACnC,KAkML,MAAMqC,GAAgB,CAClB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAGEC,GAAoCD,GAAc5lE,KAAK0S,GAAQA,EAAM3B,QAAQ,OAAQ,SAASA,QAAQ,IAAK,YACjH,SAAS+0D,GAAehoE,GACpB,OAAO8nE,GAAc9nE,EAAI8nE,GAAcloE,OAC3C,CACA,SAASqoE,GAAmBjoE,GACxB,OAAO+nE,GAAkB/nE,EAAI+nE,GAAkBnoE,OACnD,CAcA,SAASsoE,GAAahkD,GAClB,IAAIlkB,EAAI,EACR,MAAO,CAACiqC,EAASlyB,KACb,MAAM0vB,EAAavjB,EAAM8mB,eAAejzB,GAAc0vB,WAClDA,aAAsBiP,GACtB12C,EAbZ,SAAiCiqC,EAASjqC,GAEtC,OADAiqC,EAAQ1kB,gBAAkB0kB,EAAQxtC,KAAKyF,KAAI,IAAI8lE,GAAehoE,OACvDA,CACX,CAUgBmoE,CAAwBl+B,EAASjqC,GAC9BynC,aAAsBwS,GAC7Bj6C,EAXZ,SAAkCiqC,EAASjqC,GAEvC,OADAiqC,EAAQ1kB,gBAAkB0kB,EAAQxtC,KAAKyF,KAAI,IAAI+lE,GAAmBjoE,OAC3DA,CACX,CAQgBooE,CAAyBn+B,EAASjqC,GAC/BynC,IACPznC,EAtBZ,SAAgCiqC,EAASjqC,GAGrC,OAFAiqC,EAAQzkB,YAAcwiD,GAAehoE,GACrCiqC,EAAQ1kB,gBAAkB0iD,GAAmBjoE,KACpCA,CACb,CAkBgBqoE,CAAuBp+B,EAASjqC,GACvC,CAET,CACA,SAASsoE,GAA0B3qE,GAC/B,IAAIlD,EACJ,IAAIA,KAAKkD,EACL,GAAIA,EAAYlD,GAAG+qB,aAAe7nB,EAAYlD,GAAG8qB,gBAC7C,OAAO,EAGf,OAAO,CACX,CAIA,IAAIgjD,GAAgB,CAChBryD,GAAI,SACJ+R,SAAU,CACNk/B,SAAS,EACTqhB,eAAe,GAEnB,YAAAnmB,CAAcn+B,EAAOukD,EAAO1rE,GACxB,IAAKA,EAAQoqD,QACT,OAEJ,MAAQ1qD,MAAMgpB,SAAEA,GAAc1oB,QAAS2rE,GAAkBxkD,EAAMghB,QACzDrf,SAAEA,GAAc6iD,EACtB,IAAK3rE,EAAQyrE,gBAAkBF,GAA0B7iD,KAf/B4vC,EAeqEqT,KAd7ErT,EAAW7vC,aAAe6vC,EAAW9vC,kBAcyDM,GAAYyiD,GAA0BziD,IAClJ,OAhBZ,IAAkCwvC,EAkB1B,MAAMsT,EAAYT,GAAahkD,GAC/BuB,EAASxqB,QAAQ0tE,EACpB,GAmGL,SAASC,GAAsB3+B,GAC3B,GAAIA,EAAQqR,WAAY,CACpB,MAAM7+C,EAAOwtC,EAAQjB,aACdiB,EAAQqR,kBACRrR,EAAQjB,MACfnuC,OAAO8wC,eAAe1B,EAAS,OAAQ,CACnChU,cAAc,EACdlO,YAAY,EACZD,UAAU,EACV1qB,MAAOX,GAEd,CACL,CACA,SAASosE,GAAmB3kD,GACxBA,EAAMznB,KAAKgpB,SAASxqB,SAASgvC,IACzB2+B,GAAsB3+B,EAAQ,GAEtC,CAoBA,IAAI6+B,GAAoB,CACpB5yD,GAAI,aACJ+R,SAAU,CACN8gD,UAAW,UACX5hB,SAAS,GAEb6hB,qBAAsB,CAAC9kD,EAAO/M,EAAMpa,KAChC,IAAKA,EAAQoqD,QAET,YADA0hB,GAAmB3kD,GAGvB,MAAM07B,EAAiB17B,EAAMsG,MAC7BtG,EAAMznB,KAAKgpB,SAASxqB,SAAQ,CAACgvC,EAASlyB,KAClC,MAAMixB,MAAEA,EAAK1iB,UAAGA,GAAe2jB,EACzBjrB,EAAOkF,EAAM8mB,eAAejzB,GAC5Btb,EAAOusC,GAASiB,EAAQxtC,KAC9B,GAGO,MAHH2C,GAAQ,CACRknB,EACApC,EAAMnnB,QAAQupB,YAEd,OAEJ,IAAKtH,EAAKyoB,WAAW6B,mBACjB,OAEJ,MAAM2/B,EAAQ/kD,EAAMgD,OAAOlI,EAAKqrB,SAChC,GAAmB,WAAf4+B,EAAMzkE,MAAoC,SAAfykE,EAAMzkE,KACjC,OAEJ,GAAI0f,EAAMnnB,QAAQ+pB,QACd,OAEJ,IAAInK,MAAEA,EAAKyC,MAAGA,GAnD1B,SAAmDJ,EAAMC,GACrD,MAAME,EAAaF,EAAOrf,OAC1B,IACIwf,EADAzC,EAAQ,EAEZ,MAAM2C,OAAEA,GAAYN,GACd1Z,IAAEA,EAAGD,IAAGA,EAAMoa,WAAAA,EAAaC,WAAAA,GAAgBJ,EAAOK,gBASxD,OARIF,IACA9C,EAAQO,GAAYQ,GAAauB,EAAQK,EAAOE,KAAMla,GAAKmY,GAAI,EAAG0B,EAAa,IAG/EC,EADAM,EACQxC,GAAYQ,GAAauB,EAAQK,EAAOE,KAAMna,GAAKmY,GAAK,EAAGb,EAAOwC,GAAcxC,EAEhFwC,EAAaxC,EAElB,CACHA,QACAyC,QAER,CAiCqC8pD,CAA0ClqD,EAAMviB,GAEzE,GAAI2iB,IADcriB,EAAQosE,WAAa,EAAIvpB,GAGvC,YADAgpB,GAAsB3+B,GAiB1B,IAAIm/B,EACJ,OAfIjzD,GAAc6yB,KACdiB,EAAQjB,MAAQvsC,SACTwtC,EAAQxtC,KACf5B,OAAO8wC,eAAe1B,EAAS,OAAQ,CACnChU,cAAc,EACdlO,YAAY,EACZvE,IAAK,WACD,OAAOlf,KAAKg3C,UACf,EACDr9C,IAAK,SAASmD,GACVkD,KAAK0kC,MAAQ5nC,CAChB,KAIFrE,EAAQgsE,WACX,IAAK,OACDK,EA5LpB,SAAwB3sE,EAAMkgB,EAAOyC,EAAOwgC,EAAgB7iD,GAC3D,MAAMssE,EAAUtsE,EAAQssE,SAAWzpB,EAChC,GAAIypB,GAAWjqD,EACX,OAAO3iB,EAAK8Z,MAAMoG,EAAOA,EAAQyC,GAErC,MAAMgqD,EAAY,GACZE,GAAelqD,EAAQ,IAAMiqD,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAW7sD,EAAQyC,EAAQ,EACjC,IACIpf,EAAGypE,EAAcC,EAASh7C,EAAMi7C,EADhCtuE,EAAIshB,EAGR,IADAysD,EAAUG,KAAkB9sE,EAAKpB,GAC7B2E,EAAI,EAAGA,EAAIqpE,EAAU,EAAGrpE,IAAI,CAC5B,IAEI8S,EAFAmxD,EAAO,EACP2F,EAAO,EAEX,MAAMC,EAAgBzkE,KAAK2V,OAAO/a,EAAI,GAAKspE,GAAe,EAAI3sD,EACxDmtD,EAAc1kE,KAAKE,IAAIF,KAAK2V,OAAO/a,EAAI,GAAKspE,GAAe,EAAGlqD,GAASzC,EACvEotD,EAAiBD,EAAcD,EACrC,IAAI/2D,EAAI+2D,EAAe/2D,EAAIg3D,EAAah3D,IACpCmxD,GAAQxnE,EAAKqW,GAAG9K,EAChB4hE,GAAQntE,EAAKqW,GAAGgG,EAEpBmrD,GAAQ8F,EACRH,GAAQG,EACR,MAAMC,EAAY5kE,KAAK2V,MAAM/a,EAAIspE,GAAe,EAAI3sD,EAC9CstD,EAAU7kE,KAAKE,IAAIF,KAAK2V,OAAO/a,EAAI,GAAKspE,GAAe,EAAGlqD,GAASzC,GACjE3U,EAAGkiE,EAAUpxD,EAAGqxD,GAAa1tE,EAAKpB,GAE1C,IADAquE,EAAUh7C,GAAQ,EACd5b,EAAIk3D,EAAWl3D,EAAIm3D,EAASn3D,IAC5B4b,EAAO,GAAMtpB,KAAKsV,KAAKwvD,EAAUjG,IAASxnE,EAAKqW,GAAGgG,EAAIqxD,IAAYD,EAAUztE,EAAKqW,GAAG9K,IAAM4hE,EAAOO,IAC7Fz7C,EAAOg7C,IACPA,EAAUh7C,EACV+6C,EAAehtE,EAAKqW,GACpB62D,EAAQ72D,GAGhBs2D,EAAUG,KAAkBE,EAC5BpuE,EAAIsuE,CACP,CAED,OADAP,EAAUG,KAAkB9sE,EAAK+sE,GAC1BJ,CACX,CAkJgCgB,CAAe3tE,EAAMkgB,EAAOyC,EAAOwgC,EAAgB7iD,GAC/D,MACJ,IAAK,UACDqsE,EApJpB,SAA0B3sE,EAAMkgB,EAAOyC,EAAOwgC,GAC1C,IAEI5/C,EAAGyuB,EAAOzmB,EAAG8Q,EAAGirD,EAAOsG,EAAUC,EAAUC,EAAYxxB,EAAMF,EAF7DorB,EAAO,EACPC,EAAS,EAEb,MAAMkF,EAAY,GACZI,EAAW7sD,EAAQyC,EAAQ,EAC3BorD,EAAO/tE,EAAKkgB,GAAO3U,EAEnByiE,EADOhuE,EAAK+sE,GAAUxhE,EACVwiE,EAClB,IAAIxqE,EAAI2c,EAAO3c,EAAI2c,EAAQyC,IAASpf,EAAE,CAClCyuB,EAAQhyB,EAAKuD,GACbgI,GAAKymB,EAAMzmB,EAAIwiE,GAAQC,EAAK7qB,EAC5B9mC,EAAI2V,EAAM3V,EACV,MAAMurD,EAAa,EAAJr8D,EACf,GAAIq8D,IAAWN,EACPjrD,EAAIigC,GACJA,EAAOjgC,EACPuxD,EAAWrqE,GACJ8Y,EAAI+/B,IACXA,EAAO//B,EACPwxD,EAAWtqE,GAEfikE,GAAQC,EAASD,EAAOx1C,EAAMzmB,KAAOk8D,MAClC,CACH,MAAMwG,EAAY1qE,EAAI,EACtB,IAAKmW,GAAck0D,KAAcl0D,GAAcm0D,GAAW,CACtD,MAAMK,EAAqBvlE,KAAKE,IAAI+kE,EAAUC,GACxCM,EAAqBxlE,KAAKC,IAAIglE,EAAUC,GAC1CK,IAAuBJ,GAAcI,IAAuBD,GAC5DtB,EAAUzqE,KAAK,IACRlC,EAAKkuE,GACR3iE,EAAGi8D,IAGP2G,IAAuBL,GAAcK,IAAuBF,GAC5DtB,EAAUzqE,KAAK,IACRlC,EAAKmuE,GACR5iE,EAAGi8D,GAGd,CACGjkE,EAAI,GAAK0qE,IAAcH,GACvBnB,EAAUzqE,KAAKlC,EAAKiuE,IAExBtB,EAAUzqE,KAAK8vB,GACfs1C,EAAQM,EACRH,EAAS,EACTnrB,EAAOF,EAAO//B,EACduxD,EAAWC,EAAWC,EAAavqE,CACtC,CACJ,CACD,OAAOopE,CACX,CAgGgCyB,CAAiBpuE,EAAMkgB,EAAOyC,EAAOwgC,GACjD,MACJ,QACI,MAAM,IAAIrhD,MAAM,qCAAqCxB,EAAQgsE,cAErE9+B,EAAQqR,WAAa8tB,CAAS,GAChC,EAEN,OAAAtK,CAAS56C,GACL2kD,GAAmB3kD,EACtB,GAyCL,SAAS4mD,GAAWzvD,EAAUisC,EAAO3pC,EAAM8K,GACvC,GAAIA,EACA,OAEJ,IAAI9L,EAAQ2qC,EAAMjsC,GACduB,EAAMe,EAAKtC,GAKf,MAJiB,UAAbA,IACAsB,EAAQF,GAAgBE,GACxBC,EAAMH,GAAgBG,IAEnB,CACHvB,WACAsB,QACAC,MAER,CA+BA,SAASmuD,GAAgBpuD,EAAOC,EAAKqC,GACjC,KAAMrC,EAAMD,EAAOC,IAAM,CACrB,MAAM6R,EAAQxP,EAAOrC,GACrB,IAAK1B,MAAMuT,EAAMzmB,KAAOkT,MAAMuT,EAAM3V,GAChC,KAEP,CACD,OAAO8D,CACX,CACA,SAASouD,GAAS3vE,EAAGC,EAAG62B,EAAMx3B,GAC1B,OAAIU,GAAKC,EACEX,EAAGU,EAAE82B,GAAO72B,EAAE62B,IAElB92B,EAAIA,EAAE82B,GAAQ72B,EAAIA,EAAE62B,GAAQ,CACvC,CAEA,SAAS84C,GAAoBC,EAAUz7C,GACnC,IAAIxQ,EAAS,GACTmlB,GAAQ,EAOZ,OANI98B,GAAQ4jE,IACR9mC,GAAQ,EACRnlB,EAASisD,GAETjsD,EArDR,SAA6BisD,EAAUz7C,GACnC,MAAMznB,EAAEA,EAAG,KAAO8Q,EAAAA,EAAG,MAAUoyD,GAAY,GACrCC,EAAa17C,EAAKxQ,OAClBA,EAAS,GAyBf,OAxBAwQ,EAAKuQ,SAAS/kC,SAAQ,EAAG0hB,QAAQC,UAC7BA,EAAMmuD,GAAgBpuD,EAAOC,EAAKuuD,GAClC,MAAM7jB,EAAQ6jB,EAAWxuD,GACnBgB,EAAOwtD,EAAWvuD,GACd,OAAN9D,GACAmG,EAAOtgB,KAAK,CACRqJ,EAAGs/C,EAAMt/C,EACT8Q,MAEJmG,EAAOtgB,KAAK,CACRqJ,EAAG2V,EAAK3V,EACR8Q,OAES,OAAN9Q,IACPiX,EAAOtgB,KAAK,CACRqJ,IACA8Q,EAAGwuC,EAAMxuC,IAEbmG,EAAOtgB,KAAK,CACRqJ,IACA8Q,EAAG6E,EAAK7E,IAEf,IAEEmG,CACX,CAwBiBmsD,CAAoBF,EAAUz7C,GAEpCxQ,EAAOrf,OAAS,IAAIklE,GAAY,CACnC7lD,SACAliB,QAAS,CACL28B,QAAS,GAEb0K,QACA6X,UAAW7X,IACV,IACT,CACA,SAASinC,GAAiBrzD,GACtB,OAAOA,IAA0B,IAAhBA,EAAOrV,IAC5B,CAEA,SAAS2oE,GAAe/yD,EAAS9T,EAAO8mE,GAEpC,IAAI5oE,EADW4V,EAAQ9T,GACL9B,KAClB,MAAM6oE,EAAU,CACZ/mE,GAEJ,IAAI9I,EACJ,IAAK4vE,EACD,OAAO5oE,EAEX,MAAe,IAATA,IAA6C,IAA3B6oE,EAAQttE,QAAQyE,IAAa,CACjD,IAAK8T,GAAe9T,GAChB,OAAOA,EAGX,GADAhH,EAAS4c,EAAQ5V,IACZhH,EACD,OAAO,EAEX,GAAIA,EAAOotB,QACP,OAAOpmB,EAEX6oE,EAAQ7sE,KAAKgE,GACbA,EAAOhH,EAAOgH,IACjB,CACD,OAAO,CACX,CACC,SAAS8oE,GAAYh8C,EAAMhrB,EAAO2a,GAC9B,MAAMzc,EAmDV,SAAyB8sB,GACtB,MAAM1yB,EAAU0yB,EAAK1yB,QACf2uE,EAAa3uE,EAAQ4F,KAC3B,IAAIA,EAAOmU,GAAe40D,GAAcA,EAAW/vE,OAAQ+vE,QAC9C9pE,IAATe,IACAA,IAAS5F,EAAQwoB,iBAErB,IAAa,IAAT5iB,GAA2B,OAATA,EAClB,OAAO,EAEX,IAAa,IAATA,EACA,MAAO,SAEX,OAAOA,CACX,CAjEkBgpE,CAAgBl8C,GAC9B,GAAIjZ,GAAS7T,GACT,OAAOuY,MAAMvY,EAAKvF,QAAiBuF,EAEvC,IAAIhH,EAASub,WAAWvU,GACxB,OAAI8T,GAAe9a,IAAWyJ,KAAK2V,MAAMpf,KAAYA,EAWzD,SAA2BiwE,EAASnnE,EAAO9I,EAAQyjB,GAC/B,MAAZwsD,GAA+B,MAAZA,IACnBjwE,EAAS8I,EAAQ9I,GAErB,GAAIA,IAAW8I,GAAS9I,EAAS,GAAKA,GAAUyjB,EAC5C,OAAO,EAEX,OAAOzjB,CACX,CAlBekwE,CAAkBlpE,EAAK,GAAI8B,EAAO9I,EAAQyjB,GAE9C,CACH,SACA,QACA,MACA,QACA,SACFlhB,QAAQyE,IAAS,GAAKA,CAC5B,CAuFC,SAASmpE,GAAe7sD,EAAQ8sD,EAAaC,GAC1C,MAAMC,EAAY,GAClB,IAAI,IAAIn5D,EAAI,EAAGA,EAAIk5D,EAAWpsE,OAAQkT,IAAI,CACtC,MAAM2c,EAAOu8C,EAAWl5D,IAClBw0C,MAAEA,EAAQ3pC,KAAAA,QAAO8Q,GAAWy9C,GAAUz8C,EAAMs8C,EAAa,KAC/D,MAAKt9C,GAAS64B,GAAS3pC,GAGvB,GAAI2pC,EACA2kB,EAAUE,QAAQ19C,QAGlB,GADAxP,EAAOtgB,KAAK8vB,IACP9Q,EACD,KAGX,CACDsB,EAAOtgB,QAAQstE,EACnB,CACC,SAASC,GAAUz8C,EAAMs8C,EAAa1wD,GACnC,MAAMoT,EAAQgB,EAAKva,YAAY62D,EAAa1wD,GAC5C,IAAKoT,EACD,MAAO,GAEX,MAAM29C,EAAa39C,EAAMpT,GACnB2kB,EAAWvQ,EAAKuQ,SAChBmrC,EAAa17C,EAAKxQ,OACxB,IAAIqoC,GAAQ,EACR3pC,GAAO,EACX,IAAI,IAAI3d,EAAI,EAAGA,EAAIggC,EAASpgC,OAAQI,IAAI,CACpC,MAAMs/B,EAAUU,EAAShgC,GACnBqsE,EAAalB,EAAW7rC,EAAQ3iB,OAAOtB,GACvCixD,EAAYnB,EAAW7rC,EAAQ1iB,KAAKvB,GAC1C,GAAI8B,GAAWivD,EAAYC,EAAYC,GAAY,CAC/ChlB,EAAQ8kB,IAAeC,EACvB1uD,EAAOyuD,IAAeE,EACtB,KACH,CACJ,CACD,MAAO,CACHhlB,QACA3pC,OACA8Q,QAER,CAEA,MAAM89C,GACF,WAAAn4D,CAAYsb,GACRprB,KAAK0D,EAAI0nB,EAAK1nB,EACd1D,KAAKwU,EAAI4W,EAAK5W,EACdxU,KAAKopB,OAASgC,EAAKhC,MACtB,CACD,WAAAg2C,CAAYjjE,EAAKipB,EAAQgG,GACrB,MAAM1nB,EAAEA,EAAI8Q,EAAAA,SAAI4U,GAAYppB,KAM5B,OALAolB,EAASA,GAAU,CACf/M,MAAO,EACPC,IAAK9C,IAETrZ,EAAIutB,IAAIhmB,EAAG8Q,EAAG4U,EAAQhE,EAAO9M,IAAK8M,EAAO/M,OAAO,IACxC+S,EAAKhG,MAChB,CACD,WAAAxU,CAAYuZ,GACR,MAAMzmB,EAAEA,EAAI8Q,EAAAA,SAAI4U,GAAYppB,KACtB4X,EAAQuS,EAAMvS,MACpB,MAAO,CACHlU,EAAGA,EAAI5C,KAAKsc,IAAIxF,GAASwR,EACzB5U,EAAGA,EAAI1T,KAAKqb,IAAIvE,GAASwR,EACzBxR,QAEP,EAGL,SAAS2X,GAAW7b,GAChB,MAAMkM,MAAEA,EAAQvhB,KAAAA,OAAO8sB,GAAUzX,EACjC,GAAIvB,GAAe9T,GACf,OAcP,SAAwBuhB,EAAOzf,GAC5B,MAAMua,EAAOkF,EAAM8mB,eAAevmC,GAC5BskB,EAAU/J,GAAQkF,EAAMyzB,iBAAiBlzC,GAC/C,OAAOskB,EAAU/J,EAAKirB,QAAU,IACpC,CAlBeuiC,CAAetoD,EAAOvhB,GAEjC,GAAa,UAATA,EACA,OAjHR,SAAyBqV,GACrB,MAAMiP,MAAEA,EAAQxiB,MAAAA,OAAQgrB,GAAUzX,EAC5BiH,EAAS,GACT+gB,EAAWvQ,EAAKuQ,SAChBysC,EAAeh9C,EAAKxQ,OACpB+sD,EAgBT,SAAuB/kD,EAAOxiB,GAC3B,MAAMioE,EAAQ,GACRpiB,EAAQrjC,EAAMsgB,wBAAwB,QAC5C,IAAI,IAAIvnC,EAAI,EAAGA,EAAIsqD,EAAM1qD,OAAQI,IAAI,CACjC,MAAMgf,EAAOsrC,EAAMtqD,GACnB,GAAIgf,EAAKva,QAAUA,EACf,MAECua,EAAKyuB,QACNi/B,EAAMP,QAAQntD,EAAKirB,QAE1B,CACD,OAAOyiC,CACX,CA7BuBC,CAAc1lD,EAAOxiB,GACxCunE,EAAWrtE,KAAKssE,GAAoB,CAChCjjE,EAAG,KACH8Q,EAAGmO,EAAMoC,QACVoG,IACH,IAAI,IAAIzvB,EAAI,EAAGA,EAAIggC,EAASpgC,OAAQI,IAAI,CACpC,MAAMs/B,EAAUU,EAAShgC,GACzB,IAAI,IAAI8S,EAAIwsB,EAAQ3iB,MAAO7J,GAAKwsB,EAAQ1iB,IAAK9J,IACzCg5D,GAAe7sD,EAAQwtD,EAAa35D,GAAIk5D,EAE/C,CACD,OAAO,IAAIlH,GAAY,CACnB7lD,SACAliB,QAAS,CAAE,GAEnB,CA6Fe6vE,CAAgB50D,GAE3B,GAAa,UAATrV,EACA,OAAO,EAEX,MAAMuoE,EAWV,SAAyBlzD,GACrB,MAAMiP,EAAQjP,EAAOiP,OAAS,GAC9B,GAAIA,EAAMk1B,yBACN,OAgBR,SAAiCnkC,GAC7B,MAAMiP,MAAEA,EAAKtkB,KAAGA,GAAUqV,EACpBjb,EAAUkqB,EAAMlqB,QAChB6C,EAASqnB,EAAM4lB,YAAYjtC,OAC3B+c,EAAQ5f,EAAQya,QAAUyP,EAAM5hB,IAAM4hB,EAAM3hB,IAC5ClI,EAtLT,SAAyBuF,EAAMskB,EAAOorB,GACnC,IAAIj1C,EAUJ,OARIA,EADS,UAATuF,EACQ0vC,EACQ,QAAT1vC,EACCskB,EAAMlqB,QAAQya,QAAUyP,EAAM3hB,IAAM2hB,EAAM5hB,IAC3CmR,GAAS7T,GACRA,EAAKvF,MAEL6pB,EAAMioC,eAEX9xD,CACX,CA0KkByvE,CAAgBlqE,EAAMskB,EAAOtK,GACrChhB,EAAS,GACf,GAAIoB,EAAQ8sB,KAAKswB,SAAU,CACvB,MAAMxF,EAAS1tB,EAAMk1B,yBAAyB,EAAGx/B,GACjD,OAAO,IAAI4vD,GAAU,CACjBvkE,EAAG2sC,EAAO3sC,EACV8Q,EAAG67B,EAAO77B,EACV4U,OAAQzG,EAAMg0B,8BAA8B79C,IAEnD,CACD,IAAI,IAAI4C,EAAI,EAAGA,EAAIJ,IAAUI,EACzBrE,EAAOgD,KAAKsoB,EAAMk1B,yBAAyBn8C,EAAG5C,IAElD,OAAOzB,CACX,CAnCemxE,CAAwB90D,GAEnC,OAEJ,SAA+BA,GAC3B,MAAMiP,MAAEA,EAAO,CAAA,OAAKtkB,GAAUqV,EACxBwU,EApLT,SAAyB7pB,EAAMskB,GAC5B,IAAIuF,EAAQ,KAUZ,MATa,UAAT7pB,EACA6pB,EAAQvF,EAAMoC,OACE,QAAT1mB,EACP6pB,EAAQvF,EAAMkC,IACP3S,GAAS7T,GAChB6pB,EAAQvF,EAAMrH,iBAAiBjd,EAAKvF,OAC7B6pB,EAAMitB,eACb1nB,EAAQvF,EAAMitB,gBAEX1nB,CACX,CAwKkBugD,CAAgBpqE,EAAMskB,GACpC,GAAIxQ,GAAe+V,GAAQ,CACvB,MAAMymB,EAAahsB,EAAMktB,eACzB,MAAO,CACHnsC,EAAGirC,EAAazmB,EAAQ,KACxB1T,EAAGm6B,EAAa,KAAOzmB,EAE9B,CACD,OAAO,IACX,CAbWwgD,CAAsBh1D,EACjC,CAjBqBi1D,CAAgBj1D,GACjC,OAAIkzD,aAAoBqB,GACbrB,EAEJD,GAAoBC,EAAUz7C,EACzC,CA8CA,SAASy9C,GAAUzsE,EAAKuX,EAAQ0W,GAC5B,MAAM/yB,EAASk4B,GAAW7b,IACpByX,KAAEA,EAAOxI,MAAAA,OAAQzH,GAAUxH,EAC3Bm1D,EAAW19C,EAAK1yB,QAChB2uE,EAAayB,EAASxqE,KACtBiS,EAAQu4D,EAAS5nD,iBACjB6nD,MAAEA,EAAOx4D,EAAQ83D,MAAAA,EAAO93D,GAAW82D,GAAc,GACnD/vE,GAAU8zB,EAAKxQ,OAAOrf,SACtBgvB,GAASnuB,EAAKiuB,GAatB,SAAgBjuB,EAAKsjC,GACjB,MAAMtU,KAAEA,EAAO9zB,OAAAA,QAASyxE,EAAKV,MAAGA,EAAKh+C,KAAGA,EAAOzH,MAAAA,GAAW8c,EACpD1oB,EAAWoU,EAAK2U,MAAQ,QAAUL,EAAIvkB,KAC5C/e,EAAIyrB,OACa,MAAb7Q,GAAoBqxD,IAAUU,IAC9BC,GAAa5sE,EAAK9E,EAAQ+yB,EAAKvF,KAC/BxmB,GAAKlC,EAAK,CACNgvB,OACA9zB,SACAiZ,MAAOw4D,EACPnmD,QACA5L,aAEJ5a,EAAI4rB,UACJ5rB,EAAIyrB,OACJmhD,GAAa5sE,EAAK9E,EAAQ+yB,EAAKrF,SAEnC1mB,GAAKlC,EAAK,CACNgvB,OACA9zB,SACAiZ,MAAO83D,EACPzlD,QACA5L,aAEJ5a,EAAI4rB,SACR,CArCQihD,CAAO7sE,EAAK,CACRgvB,OACA9zB,SACAyxE,QACAV,QACAh+C,OACAzH,QACAzH,SAEJqP,GAAWpuB,GAEnB,CA2BA,SAAS4sE,GAAa5sE,EAAK9E,EAAQ4xE,GAC/B,MAAMvtC,SAAEA,EAAQ/gB,OAAGA,GAAYtjB,EAC/B,IAAI2rD,GAAQ,EACRkmB,GAAW,EACf/sE,EAAIqtB,YACJ,IAAK,MAAMwR,KAAWU,EAAS,CAC3B,MAAMrjB,MAAEA,EAAKC,IAAGA,GAAS0iB,EACnB9H,EAAavY,EAAOtC,GACpBk/B,EAAY58B,EAAO8rD,GAAgBpuD,EAAOC,EAAKqC,IACjDqoC,GACA7mD,EAAIytB,OAAOsJ,EAAWxvB,EAAGwvB,EAAW1e,GACpCwuC,GAAQ,IAER7mD,EAAI0tB,OAAOqJ,EAAWxvB,EAAGulE,GACzB9sE,EAAI0tB,OAAOqJ,EAAWxvB,EAAGwvB,EAAW1e,IAExC00D,IAAa7xE,EAAO+nE,YAAYjjE,EAAK6+B,EAAS,CAC1CsR,KAAM48B,IAENA,EACA/sE,EAAIwtB,YAEJxtB,EAAI0tB,OAAO0tB,EAAU7zC,EAAGulE,EAE/B,CACD9sE,EAAI0tB,OAAOxyB,EAAO2rD,QAAQt/C,EAAGulE,GAC7B9sE,EAAIwtB,YACJxtB,EAAIkpB,MACR,CACA,SAAShnB,GAAKlC,EAAKsjC,GACf,MAAMtU,KAAEA,EAAI9zB,OAAGA,EAAS0f,SAAAA,EAAWzG,MAAAA,EAAQqS,MAAAA,GAAW8c,EAChD/D,EA/cV,SAAmBvQ,EAAM9zB,EAAQ0f,GAC7B,MAAM2kB,EAAWvQ,EAAKuQ,SAChB/gB,EAASwQ,EAAKxQ,OACdwuD,EAAU9xE,EAAOsjB,OACjBhG,EAAQ,GACd,IAAK,MAAMqmB,KAAWU,EAAS,CAC3B,IAAIrjB,MAAEA,EAAKC,IAAGA,GAAS0iB,EACvB1iB,EAAMmuD,GAAgBpuD,EAAOC,EAAKqC,GAClC,MAAMyK,EAASohD,GAAWzvD,EAAU4D,EAAOtC,GAAQsC,EAAOrC,GAAM0iB,EAAQ7W,MACxE,IAAK9sB,EAAOqkC,SAAU,CAClB/mB,EAAMta,KAAK,CACPqZ,OAAQsnB,EACR3jC,OAAQ+tB,EACR/M,MAAOsC,EAAOtC,GACdC,IAAKqC,EAAOrC,KAEhB,QACH,CACD,MAAM8wD,EAAiB3tC,GAAepkC,EAAQ+tB,GAC9C,IAAK,MAAMikD,KAAOD,EAAe,CAC7B,MAAME,EAAY9C,GAAWzvD,EAAUoyD,EAAQE,EAAIhxD,OAAQ8wD,EAAQE,EAAI/wD,KAAM+wD,EAAIllD,MAC3EolD,EAAcxuC,GAAcC,EAASrgB,EAAQ2uD,GACnD,IAAK,MAAME,KAAcD,EACrB50D,EAAMta,KAAK,CACPqZ,OAAQ81D,EACRnyE,OAAQgyE,EACRhxD,MAAO,CACHtB,CAACA,GAAW2vD,GAASthD,EAAQkkD,EAAW,QAASxoE,KAAKC,MAE1DuX,IAAK,CACDvB,CAACA,GAAW2vD,GAASthD,EAAQkkD,EAAW,MAAOxoE,KAAKE,OAInE,CACJ,CACD,OAAO2T,CACX,CA0aqB+rD,CAAUv1C,EAAM9zB,EAAQ0f,GACzC,IAAK,MAAQrD,OAAQxd,EAAMmB,OAAQgyE,QAAMhxD,EAAKC,IAAGA,KAAUojB,EAAS,CAChE,MAAQjiC,OAAOwnB,gBAAEA,EAAiB3Q,GAAW,CAAA,GAAQpa,EAC/CuzE,GAAsB,IAAXpyE,EACjB8E,EAAIyrB,OACJzrB,EAAI2vB,UAAY7K,EAChByoD,GAAWvtE,EAAKwmB,EAAO8mD,GAAYjD,GAAWzvD,EAAUsB,EAAOC,IAC/Dnc,EAAIqtB,YACJ,MAAM0/C,IAAa/9C,EAAKi0C,YAAYjjE,EAAKjG,GACzC,IAAIiuB,EACJ,GAAIslD,EAAU,CACNP,EACA/sE,EAAIwtB,YAEJggD,GAAmBxtE,EAAK9E,EAAQihB,EAAKvB,GAEzC,MAAM6yD,IAAevyE,EAAO+nE,YAAYjjE,EAAKktE,EAAK,CAC9C/8B,KAAM48B,EACNh2D,SAAS,IAEbiR,EAAO+kD,GAAYU,EACdzlD,GACDwlD,GAAmBxtE,EAAK9E,EAAQghB,EAAOtB,EAE9C,CACD5a,EAAIwtB,YACJxtB,EAAIkC,KAAK8lB,EAAO,UAAY,WAC5BhoB,EAAI4rB,SACP,CACL,CACA,SAAS2hD,GAAWvtE,EAAKwmB,EAAOyC,GAC5B,MAAMP,IAAEA,EAAGE,OAAGA,GAAYpC,EAAM/C,MAAMsqB,WAChCnzB,SAAEA,EAAQsB,MAAGA,EAAKC,IAAGA,GAAS8M,GAAU,CAAA,EAC7B,MAAbrO,IACA5a,EAAIqtB,YACJrtB,EAAI4tB,KAAK1R,EAAOwM,EAAKvM,EAAMD,EAAO0M,EAASF,GAC3C1oB,EAAIkpB,OAEZ,CACA,SAASskD,GAAmBxtE,EAAK9E,EAAQ8yB,EAAOpT,GAC5C,MAAM8yD,EAAoBxyE,EAAOuZ,YAAYuZ,EAAOpT,GAChD8yD,GACA1tE,EAAI0tB,OAAOggD,EAAkBnmE,EAAGmmE,EAAkBr1D,EAE1D,CAEA,IAAIrU,GAAQ,CACRyR,GAAI,SACJ,mBAAAk4D,CAAqBlqD,EAAOukD,EAAO1rE,GAC/B,MAAMqiB,GAAS8E,EAAMznB,KAAKgpB,UAAY,IAAI7lB,OACpC2Y,EAAU,GAChB,IAAIyG,EAAMhf,EAAGyvB,EAAMzX,EACnB,IAAIhY,EAAI,EAAGA,EAAIof,IAASpf,EACpBgf,EAAOkF,EAAM8mB,eAAehrC,GAC5ByvB,EAAOzQ,EAAKirB,QACZjyB,EAAS,KACLyX,GAAQA,EAAK1yB,SAAW0yB,aAAgBq1C,KACxC9sD,EAAS,CACL+Q,QAAS7E,EAAMyzB,iBAAiB33C,GAChCyE,MAAOzE,EACP2C,KAAM8oE,GAAYh8C,EAAMzvB,EAAGof,GAC3B8E,QACA1E,KAAMR,EAAKyoB,WAAW1qC,QAAQupB,UAC9BW,MAAOjI,EAAKqoB,OACZ5X,SAGRzQ,EAAKqvD,QAAUr2D,EACfO,EAAQ5Z,KAAKqZ,GAEjB,IAAIhY,EAAI,EAAGA,EAAIof,IAASpf,EACpBgY,EAASO,EAAQvY,GACZgY,IAA0B,IAAhBA,EAAOrV,OAGtBqV,EAAOrV,KAAO2oE,GAAe/yD,EAASvY,EAAGjD,EAAQwuE,WAExD,EACD,UAAA+C,CAAYpqD,EAAOukD,EAAO1rE,GACtB,MAAMylC,EAA4B,eAArBzlC,EAAQwxE,SACfjoC,EAAWpiB,EAAMo5B,+BACjB5uB,EAAOxK,EAAMsqB,UACnB,IAAI,IAAIxuC,EAAIsmC,EAAS1mC,OAAS,EAAGI,GAAK,IAAKA,EAAE,CACzC,MAAMgY,EAASsuB,EAAStmC,GAAGquE,QACtBr2D,IAGLA,EAAOyX,KAAKqsB,oBAAoBptB,EAAM1W,EAAOwH,MACzCgjB,GAAQxqB,EAAOrV,MACfuqE,GAAUhpD,EAAMzjB,IAAKuX,EAAQ0W,GAEpC,CACJ,EACD,kBAAA8/C,CAAoBtqD,EAAOukD,EAAO1rE,GAC9B,GAAyB,uBAArBA,EAAQwxE,SACR,OAEJ,MAAMjoC,EAAWpiB,EAAMo5B,+BACvB,IAAI,IAAIt9C,EAAIsmC,EAAS1mC,OAAS,EAAGI,GAAK,IAAKA,EAAE,CACzC,MAAMgY,EAASsuB,EAAStmC,GAAGquE,QACvBhD,GAAiBrzD,IACjBk1D,GAAUhpD,EAAMzjB,IAAKuX,EAAQkM,EAAMsqB,UAE1C,CACJ,EACD,iBAAAigC,CAAmBvqD,EAAO/M,EAAMpa,GAC5B,MAAMib,EAASb,EAAK6H,KAAKqvD,QACpBhD,GAAiBrzD,IAAgC,sBAArBjb,EAAQwxE,UAGzCrB,GAAUhpD,EAAMzjB,IAAKuX,EAAQkM,EAAMsqB,UACtC,EACDvmB,SAAU,CACNsjD,WAAW,EACXgD,SAAU,sBAIlB,MAAMG,GAAa,CAACC,EAAWhc,KAC3B,IAAIic,UAAEA,EAAWjc,EAAQkc,SAAGA,EAAUlc,GAAcgc,EAKpD,OAJIA,EAAUG,gBACVF,EAAYxpE,KAAKE,IAAIspE,EAAWjc,GAChCkc,EAAWF,EAAUI,iBAAmB3pE,KAAKE,IAAIupE,EAAUlc,IAExD,CACHkc,WACAD,YACAI,WAAY5pE,KAAKC,IAAIstD,EAAUic,GAClC,EAGL,MAAMK,WAAehmB,GACpB,WAAA70C,CAAY8wB,GACL8O,QACA1vC,KAAK4qE,QAAS,EACd5qE,KAAK6qE,eAAiB,GAC7B7qE,KAAK8qE,aAAe,KACb9qE,KAAK+qE,cAAe,EACpB/qE,KAAK4f,MAAQghB,EAAOhhB,MACpB5f,KAAKvH,QAAUmoC,EAAOnoC,QACtBuH,KAAK7D,IAAMykC,EAAOzkC,IAClB6D,KAAKgrE,iBAAc1tE,EACnB0C,KAAKirE,iBAAc3tE,EACnB0C,KAAKkrE,gBAAa5tE,EAClB0C,KAAK83B,eAAYx6B,EACjB0C,KAAK6sB,cAAWvvB,EAChB0C,KAAK6kB,SAAMvnB,EACX0C,KAAK+kB,YAASznB,EACd0C,KAAKglB,UAAO1nB,EACZ0C,KAAK8kB,WAAQxnB,EACb0C,KAAK0oB,YAASprB,EACd0C,KAAKkmB,WAAQ5oB,EACb0C,KAAK4kD,cAAWtnD,EAChB0C,KAAK+4C,cAAWz7C,EAChB0C,KAAKuQ,YAASjT,EACd0C,KAAKq7C,cAAW/9C,CACnB,CACD,MAAA/B,CAAOsxB,EAAUiL,EAAWD,GACxB73B,KAAK6sB,SAAWA,EAChB7sB,KAAK83B,UAAYA,EACjB93B,KAAK4kD,SAAW/sB,EAChB73B,KAAKymD,gBACLzmD,KAAKmrE,cACLnrE,KAAK2nD,KACR,CACD,aAAAlB,GACQzmD,KAAK6vC,gBACL7vC,KAAKkmB,MAAQlmB,KAAK6sB,SAClB7sB,KAAKglB,KAAOhlB,KAAK4kD,SAAS5/B,KAC1BhlB,KAAK8kB,MAAQ9kB,KAAKkmB,QAElBlmB,KAAK0oB,OAAS1oB,KAAK83B,UACnB93B,KAAK6kB,IAAM7kB,KAAK4kD,SAAS//B,IACzB7kB,KAAK+kB,OAAS/kB,KAAK0oB,OAE1B,CACD,WAAAyiD,GACI,MAAMd,EAAYrqE,KAAKvH,QAAQ6vC,QAAU,CAAA,EACzC,IAAI0iC,EAAcrvE,GAAS0uE,EAAU13B,eAAgB,CACjD3yC,KAAK4f,OACN5f,OAAS,GACRqqE,EAAUxsE,SACVmtE,EAAcA,EAAYntE,QAAQyX,GAAO+0D,EAAUxsE,OAAOyX,EAAMtV,KAAK4f,MAAMznB,SAE3EkyE,EAAU98B,OACVy9B,EAAcA,EAAYz9B,MAAK,CAACx2C,EAAGC,IAAIqzE,EAAU98B,KAAKx2C,EAAGC,EAAGgJ,KAAK4f,MAAMznB,SAEvE6H,KAAKvH,QAAQya,SACb83D,EAAY93D,UAEhBlT,KAAKgrE,YAAcA,CACtB,CACD,GAAArjB,GACI,MAAMlvD,QAAEA,EAAO0D,IAAGA,GAAS6D,KAC3B,IAAKvH,EAAQwsB,QAET,YADAjlB,KAAKkmB,MAAQlmB,KAAK0oB,OAAS,GAG/B,MAAM2hD,EAAY5xE,EAAQ6vC,OACpB8iC,EAAYn9C,GAAOo8C,EAAU5oD,MAC7B4sC,EAAW+c,EAAU/1D,KACrB6zC,EAAclpD,KAAKqrE,uBACnBd,SAAEA,EAAQG,WAAGA,GAAgBN,GAAWC,EAAWhc,GACzD,IAAInoC,EAAOwC,EACXvsB,EAAIslB,KAAO2pD,EAAU/jD,OACjBrnB,KAAK6vC,gBACL3pB,EAAQlmB,KAAK6sB,SACbnE,EAAS1oB,KAAKsrE,SAASpiB,EAAamF,EAAUkc,EAAUG,GAAc,KAEtEhiD,EAAS1oB,KAAK83B,UACd5R,EAAQlmB,KAAKurE,SAASriB,EAAakiB,EAAWb,EAAUG,GAAc,IAE1E1qE,KAAKkmB,MAAQplB,KAAKE,IAAIklB,EAAOztB,EAAQo0B,UAAY7sB,KAAK6sB,UACtD7sB,KAAK0oB,OAAS5nB,KAAKE,IAAI0nB,EAAQjwB,EAAQq/B,WAAa93B,KAAK83B,UAC5D,CACJ,QAAAwzC,CAASpiB,EAAamF,EAAUkc,EAAUG,GACnC,MAAMvuE,IAAEA,WAAM0wB,EAAWp0B,SAAW6vC,QAAQ1jB,QAAEA,KAAmB5kB,KAC3DwrE,EAAWxrE,KAAK6qE,eAAiB,GACjCK,EAAalrE,KAAKkrE,WAAa,CACjC,GAEEvpD,EAAa+oD,EAAa9lD,EAChC,IAAI6mD,EAAcviB,EAClB/sD,EAAIqwB,UAAY,OAChBrwB,EAAIswB,aAAe,SACnB,IAAIi/C,GAAO,EACP7mD,GAAOlD,EAkBX,OAjBA3hB,KAAKgrE,YAAYr0E,SAAQ,CAACk8C,EAAYn3C,KAClC,MAAMs+B,EAAYuwC,EAAWlc,EAAW,EAAIlyD,EAAIorB,YAAYsrB,EAAW36C,MAAMguB,OACnE,IAANxqB,GAAWwvE,EAAWA,EAAW5vE,OAAS,GAAK0+B,EAAY,EAAIpV,EAAUiI,KACzE4+C,GAAe9pD,EACfupD,EAAWA,EAAW5vE,QAAUI,EAAI,EAAI,EAAI,IAAM,EAClDmpB,GAAOlD,EACP+pD,KAEJF,EAAS9vE,GAAK,CACVspB,KAAM,EACNH,MACA6mD,MACAxlD,MAAO8T,EACPtR,OAAQgiD,GAEZQ,EAAWA,EAAW5vE,OAAS,IAAM0+B,EAAYpV,CAAO,IAErD6mD,CACV,CACD,QAAAF,CAASriB,EAAakiB,EAAWb,EAAUoB,GACvC,MAAMxvE,IAAEA,YAAM27B,EAAYr/B,SAAW6vC,QAAQ1jB,QAAEA,KAAmB5kB,KAC5DwrE,EAAWxrE,KAAK6qE,eAAiB,GACjCI,EAAcjrE,KAAKirE,YAAc,GACjCW,EAAc9zC,EAAYoxB,EAChC,IAAI2iB,EAAajnD,EACbknD,EAAkB,EAClBC,EAAmB,EACnB/mD,EAAO,EACPgnD,EAAM,EA4BV,OA3BAhsE,KAAKgrE,YAAYr0E,SAAQ,CAACk8C,EAAYn3C,KAClC,MAAMs+B,UAAEA,aAAY0wC,GAqRhC,SAA2BH,EAAUa,EAAWjvE,EAAK02C,EAAY84B,GAC7D,MAAM3xC,EAOV,SAA4B6Y,EAAY03B,EAAUa,EAAWjvE,GACzD,IAAI8vE,EAAiBp5B,EAAW36C,KAC5B+zE,GAA4C,iBAAnBA,IACzBA,EAAiBA,EAAettC,QAAO,CAAC5nC,EAAGC,IAAID,EAAEuE,OAAStE,EAAEsE,OAASvE,EAAIC,KAE7E,OAAOuzE,EAAWa,EAAU/1D,KAAO,EAAIlZ,EAAIorB,YAAY0kD,GAAgB/lD,KAC3E,CAbsBgmD,CAAmBr5B,EAAY03B,EAAUa,EAAWjvE,GAChEuuE,EAaV,SAA6BiB,EAAa94B,EAAYs5B,GAClD,IAAIzB,EAAaiB,EACc,iBAApB94B,EAAW36C,OAClBwyE,EAAa0B,GAA0Bv5B,EAAYs5B,IAEvD,OAAOzB,CACX,CAnBuB2B,CAAoBV,EAAa94B,EAAYu4B,EAAUzpD,YAC1E,MAAO,CACHqY,YACA0wC,aAER,CA5RgD4B,CAAkB/B,EAAUa,EAAWjvE,EAAK02C,EAAY84B,GACxFjwE,EAAI,GAAKqwE,EAAmBrB,EAAa,EAAI9lD,EAAUgnD,IACvDC,GAAcC,EAAkBlnD,EAChCqmD,EAAY5wE,KAAK,CACb6rB,MAAO4lD,EACPpjD,OAAQqjD,IAEZ/mD,GAAQ8mD,EAAkBlnD,EAC1BonD,IACAF,EAAkBC,EAAmB,GAEzCP,EAAS9vE,GAAK,CACVspB,OACAH,IAAKknD,EACLC,MACA9lD,MAAO8T,EACPtR,OAAQgiD,GAEZoB,EAAkBhrE,KAAKC,IAAI+qE,EAAiB9xC,GAC5C+xC,GAAoBrB,EAAa9lD,CAAO,IAE5CinD,GAAcC,EACdb,EAAY5wE,KAAK,CACb6rB,MAAO4lD,EACPpjD,OAAQqjD,IAELF,CACV,CACD,cAAAU,GACI,IAAKvsE,KAAKvH,QAAQwsB,QACd,OAEJ,MAAMikC,EAAclpD,KAAKqrE,uBACjBR,eAAgBW,EAAW/yE,SAAS8hB,MAAEA,EAAQ+tB,QAAQ1jB,QAAEA,GAAU+U,IAAGA,IAAY35B,KACnFwsE,EAAY9yC,GAAcC,EAAK35B,KAAKglB,KAAMhlB,KAAKkmB,OACrD,GAAIlmB,KAAK6vC,eAAgB,CACrB,IAAI67B,EAAM,EACN1mD,EAAOxK,GAAeD,EAAOva,KAAKglB,KAAOJ,EAAS5kB,KAAK8kB,MAAQ9kB,KAAKkrE,WAAWQ,IACnF,IAAK,MAAMe,KAAUjB,EACbE,IAAQe,EAAOf,MACfA,EAAMe,EAAOf,IACb1mD,EAAOxK,GAAeD,EAAOva,KAAKglB,KAAOJ,EAAS5kB,KAAK8kB,MAAQ9kB,KAAKkrE,WAAWQ,KAEnFe,EAAO5nD,KAAO7kB,KAAK6kB,IAAMqkC,EAActkC,EACvC6nD,EAAOznD,KAAOwnD,EAAUzyC,WAAWyyC,EAAU9oE,EAAEshB,GAAOynD,EAAOvmD,OAC7DlB,GAAQynD,EAAOvmD,MAAQtB,CAEvC,KAAe,CACH,IAAIonD,EAAM,EACNnnD,EAAMrK,GAAeD,EAAOva,KAAK6kB,IAAMqkC,EAActkC,EAAS5kB,KAAK+kB,OAAS/kB,KAAKirE,YAAYe,GAAKtjD,QACtG,IAAK,MAAM+jD,KAAUjB,EACbiB,EAAOT,MAAQA,IACfA,EAAMS,EAAOT,IACbnnD,EAAMrK,GAAeD,EAAOva,KAAK6kB,IAAMqkC,EAActkC,EAAS5kB,KAAK+kB,OAAS/kB,KAAKirE,YAAYe,GAAKtjD,SAEtG+jD,EAAO5nD,IAAMA,EACb4nD,EAAOznD,MAAQhlB,KAAKglB,KAAOJ,EAC3B6nD,EAAOznD,KAAOwnD,EAAUzyC,WAAWyyC,EAAU9oE,EAAE+oE,EAAOznD,MAAOynD,EAAOvmD,OACpErB,GAAO4nD,EAAO/jD,OAAS9D,CAE9B,CACJ,CACD,YAAAirB,GACI,MAAiC,QAA1B7vC,KAAKvH,QAAQsgD,UAAgD,WAA1B/4C,KAAKvH,QAAQsgD,QAC1D,CACD,IAAA7a,GACI,GAAIl+B,KAAKvH,QAAQwsB,QAAS,CACtB,MAAM9oB,EAAM6D,KAAK7D,IACjBmuB,GAASnuB,EAAK6D,MACdA,KAAK0sE,QACLniD,GAAWpuB,EACd,CACJ,CACJ,KAAAuwE,GACO,MAAQj0E,QAAS2yB,EAAO6/C,YAAAA,EAAcC,WAAAA,EAAa/uE,IAAAA,GAAS6D,MACtDua,MAAEA,EAAQ+tB,OAAQ+hC,GAAej/C,EACjCuhD,EAAehpD,GAASrT,MACxBk8D,EAAY9yC,GAActO,EAAKuO,IAAK35B,KAAKglB,KAAMhlB,KAAKkmB,OACpDklD,EAAYn9C,GAAOo8C,EAAU5oD,OAC7BmD,QAAEA,GAAaylD,EACfhc,EAAW+c,EAAU/1D,KACrBu3D,EAAeve,EAAW,EAChC,IAAIwe,EACJ7sE,KAAK4tD,YACLzxD,EAAIqwB,UAAYggD,EAAUhgD,UAAU,QACpCrwB,EAAIswB,aAAe,SACnBtwB,EAAIqpB,UAAY,GAChBrpB,EAAIslB,KAAO2pD,EAAU/jD,OACrB,MAAMkjD,SAAEA,EAAQD,UAAGA,EAAYI,WAAAA,GAAgBN,GAAWC,EAAWhc,GAqD/Dxe,EAAe7vC,KAAK6vC,eACpBqZ,EAAclpD,KAAKqrE,sBAErBwB,EADAh9B,EACS,CACLnsC,EAAG8W,GAAeD,EAAOva,KAAKglB,KAAOJ,EAAS5kB,KAAK8kB,MAAQomD,EAAW,IACtE12D,EAAGxU,KAAK6kB,IAAMD,EAAUskC,EACxB/9B,KAAM,GAGD,CACLznB,EAAG1D,KAAKglB,KAAOJ,EACfpQ,EAAGgG,GAAeD,EAAOva,KAAK6kB,IAAMqkC,EAActkC,EAAS5kB,KAAK+kB,OAASkmD,EAAY,GAAGviD,QACxFyC,KAAM,GAGdgP,GAAsBn6B,KAAK7D,IAAKivB,EAAK0hD,eACrC,MAAMnrD,EAAa+oD,EAAa9lD,EAChC5kB,KAAKgrE,YAAYr0E,SAAQ,CAACk8C,EAAYn3C,KAClCS,EAAI0vB,YAAcgnB,EAAWD,UAC7Bz2C,EAAI2vB,UAAY+mB,EAAWD,UAC3B,MAAMtrB,EAAYnrB,EAAIorB,YAAYsrB,EAAW36C,MAAMguB,MAC7CsG,EAAYggD,EAAUhgD,UAAUqmB,EAAWrmB,YAAcqmB,EAAWrmB,UAAY69C,EAAU79C,YAC1FtG,EAAQqkD,EAAWqC,EAAetlD,EACxC,IAAI5jB,EAAImpE,EAAOnpE,EACX8Q,EAAIq4D,EAAOr4D,EACfg4D,EAAU3yC,SAAS75B,KAAKkmB,OACpB2pB,EACIn0C,EAAI,GAAKgI,EAAIwiB,EAAQtB,EAAU5kB,KAAK8kB,QACpCtQ,EAAIq4D,EAAOr4D,GAAKmN,EAChBkrD,EAAO1hD,OACPznB,EAAImpE,EAAOnpE,EAAI8W,GAAeD,EAAOva,KAAKglB,KAAOJ,EAAS5kB,KAAK8kB,MAAQomD,EAAW2B,EAAO1hD,QAEtFzvB,EAAI,GAAK8Y,EAAImN,EAAa3hB,KAAK+kB,SACtCrhB,EAAImpE,EAAOnpE,EAAIA,EAAIunE,EAAY4B,EAAO1hD,MAAMjF,MAAQtB,EACpDioD,EAAO1hD,OACP3W,EAAIq4D,EAAOr4D,EAAIgG,GAAeD,EAAOva,KAAK6kB,IAAMqkC,EAActkC,EAAS5kB,KAAK+kB,OAASkmD,EAAY4B,EAAO1hD,MAAMzC,SAMlH,GA7FkB,SAAShlB,EAAG8Q,EAAGq+B,GACjC,GAAIj8B,MAAM2zD,IAAaA,GAAY,GAAK3zD,MAAM0zD,IAAcA,EAAY,EACpE,OAEJnuE,EAAIyrB,OACJ,MAAMpC,EAAYhT,GAAeqgC,EAAWrtB,UAAW,GAQvD,GAPArpB,EAAI2vB,UAAYtZ,GAAeqgC,EAAW/mB,UAAW6gD,GACrDxwE,EAAI0iE,QAAUrsD,GAAeqgC,EAAWgsB,QAAS,QACjD1iE,EAAIoxD,eAAiB/6C,GAAeqgC,EAAW0a,eAAgB,GAC/DpxD,EAAIsiE,SAAWjsD,GAAeqgC,EAAW4rB,SAAU,SACnDtiE,EAAIqpB,UAAYA,EAChBrpB,EAAI0vB,YAAcrZ,GAAeqgC,EAAWhnB,YAAa8gD,GACzDxwE,EAAImxD,YAAY96C,GAAeqgC,EAAWk6B,SAAU,KAChD1C,EAAUG,cAAe,CACzB,MAAMwC,EAAc,CAChB5jD,OAAQkhD,EAAYxpE,KAAKmsE,MAAQ,EACjC/jD,WAAY2pB,EAAW3pB,WACvBC,SAAU0pB,EAAW1pB,SACrBa,YAAaxE,GAEX4vB,EAAUo3B,EAAU1yC,MAAMp2B,EAAG6mE,EAAW,GAE9C3hD,GAAgBzsB,EAAK6wE,EAAa53B,EADlB5gC,EAAIo4D,EACgCvC,EAAUI,iBAAmBF,EACjG,KAAmB,CACH,MAAM2C,EAAU14D,EAAI1T,KAAKC,KAAKstD,EAAWic,GAAa,EAAG,GACnD6C,EAAWX,EAAUzyC,WAAWr2B,EAAG6mE,GACnClO,EAAetuC,GAAc8kB,EAAWwpB,cAC9ClgE,EAAIqtB,YACAjzB,OAAOipB,OAAO68C,GAAc1K,MAAMhxD,GAAU,IAANA,IACtCosB,GAAmB5wB,EAAK,CACpBuH,EAAGypE,EACH34D,EAAG04D,EACHvqE,EAAG4nE,EACH1pE,EAAGypE,EACHlhD,OAAQizC,IAGZlgE,EAAI4tB,KAAKojD,EAAUD,EAAS3C,EAAUD,GAE1CnuE,EAAIkC,OACc,IAAdmnB,GACArpB,EAAI8tB,QAEX,CACD9tB,EAAI4rB,SAChB,CA6CYqlD,CADcZ,EAAU9oE,EAAEA,GACL8Q,EAAGq+B,GACxBnvC,ED1rPO,EAAC6W,EAAOyK,EAAMF,EAAO6U,IAE7Bpf,KADOof,EAAM,OAAS,SACJ7U,EAAkB,WAAVvK,GAAsByK,EAAOF,GAAS,EAAIE,ECwrP/DqoD,CAAO7gD,EAAW9oB,EAAI6mE,EAAWqC,EAAc/8B,EAAensC,EAAIwiB,EAAQlmB,KAAK8kB,MAAOsG,EAAKuO,KA7ClF,SAASj2B,EAAG8Q,EAAGq+B,GAC5B1mB,GAAWhwB,EAAK02C,EAAW36C,KAAMwL,EAAG8Q,EAAIk2D,EAAa,EAAGU,EAAW,CAC/D//C,cAAewnB,EAAW1J,OAC1B3c,UAAWggD,EAAUhgD,UAAUqmB,EAAWrmB,YAE1D,CAyCYM,CAAS0/C,EAAU9oE,EAAEA,GAAI8Q,EAAGq+B,GACxBhD,EACAg9B,EAAOnpE,GAAKwiB,EAAQtB,OACjB,GAA+B,iBAApBiuB,EAAW36C,KAAmB,CAC5C,MAAMi0E,EAAiBf,EAAUzpD,WACjCkrD,EAAOr4D,GAAK43D,GAA0Bv5B,EAAYs5B,GAAkBvnD,CACpF,MACgBioD,EAAOr4D,GAAKmN,CACf,IAEL8Y,GAAqBz6B,KAAK7D,IAAKivB,EAAK0hD,cACvC,CACJ,SAAAlf,GACO,MAAMxiC,EAAOprB,KAAKvH,QACZuwD,EAAY59B,EAAKjF,MACjBmnD,EAAYr/C,GAAO+6B,EAAUvnC,MAC7B8rD,EAAev/C,GAAUg7B,EAAUpkC,SACzC,IAAKokC,EAAU/jC,QACX,OAEJ,MAAMunD,EAAY9yC,GAActO,EAAKuO,IAAK35B,KAAKglB,KAAMhlB,KAAKkmB,OACpD/pB,EAAM6D,KAAK7D,IACX48C,EAAWiQ,EAAUjQ,SACrB6zB,EAAeU,EAAUj4D,KAAO,EAChCm4D,EAA6BD,EAAa1oD,IAAM+nD,EACtD,IAAIp4D,EACAwQ,EAAOhlB,KAAKglB,KACZ6H,EAAW7sB,KAAKkmB,MACpB,GAAIlmB,KAAK6vC,eACLhjB,EAAW/rB,KAAKC,OAAOf,KAAKkrE,YAC5B12D,EAAIxU,KAAK6kB,IAAM2oD,EACfxoD,EAAOxK,GAAe4Q,EAAK7Q,MAAOyK,EAAMhlB,KAAK8kB,MAAQ+H,OAClD,CACH,MAAMiL,EAAY93B,KAAKirE,YAAYtsC,QAAO,CAACC,EAAKvpB,IAAOvU,KAAKC,IAAI69B,EAAKvpB,EAAKqT,SAAS,GACnFlU,EAAIg5D,EAA6BhzD,GAAe4Q,EAAK7Q,MAAOva,KAAK6kB,IAAK7kB,KAAK+kB,OAAS+S,EAAY1M,EAAKkd,OAAO1jB,QAAU5kB,KAAKqrE,sBAC9H,CACD,MAAM3nE,EAAI8W,GAAeu+B,EAAU/zB,EAAMA,EAAO6H,GAChD1wB,EAAIqwB,UAAYggD,EAAUhgD,UAAUlS,GAAmBy+B,IACvD58C,EAAIswB,aAAe,SACnBtwB,EAAI0vB,YAAcm9B,EAAU14C,MAC5BnU,EAAI2vB,UAAYk9B,EAAU14C,MAC1BnU,EAAIslB,KAAO6rD,EAAUjmD,OACrB8E,GAAWhwB,EAAK6sD,EAAU9wD,KAAMwL,EAAG8Q,EAAG84D,EACzC,CACJ,mBAAAjC,GACO,MAAMriB,EAAYhpD,KAAKvH,QAAQ0tB,MACzBmnD,EAAYr/C,GAAO+6B,EAAUvnC,MAC7B8rD,EAAev/C,GAAUg7B,EAAUpkC,SACzC,OAAOokC,EAAU/jC,QAAUqoD,EAAU3rD,WAAa4rD,EAAa7kD,OAAS,CAC3E,CACJ,gBAAA+kD,CAAiB/pE,EAAG8Q,GACb,IAAI9Y,EAAGgyE,EAAQC,EACf,GAAI90D,GAAWnV,EAAG1D,KAAKglB,KAAMhlB,KAAK8kB,QAAUjM,GAAWrE,EAAGxU,KAAK6kB,IAAK7kB,KAAK+kB,QAErE,IADA4oD,EAAK3tE,KAAK6qE,eACNnvE,EAAI,EAAGA,EAAIiyE,EAAGryE,SAAUI,EAExB,GADAgyE,EAASC,EAAGjyE,GACRmd,GAAWnV,EAAGgqE,EAAO1oD,KAAM0oD,EAAO1oD,KAAO0oD,EAAOxnD,QAAUrN,GAAWrE,EAAGk5D,EAAO7oD,IAAK6oD,EAAO7oD,IAAM6oD,EAAOhlD,QACxG,OAAO1oB,KAAKgrE,YAAYtvE,GAIpC,OAAO,IACV,CACJ,WAAAkyE,CAAYpyE,GACL,MAAM4vB,EAAOprB,KAAKvH,QAClB,IAyDR,SAAoByH,EAAMkrB,GACtB,IAAc,cAATlrB,GAAiC,aAATA,KAAyBkrB,EAAK9I,SAAW8I,EAAKyiD,SACvE,OAAO,EAEX,GAAIziD,EAAK7I,UAAqB,UAATriB,GAA6B,YAATA,GACrC,OAAO,EAEX,OAAO,CACX,CAjEa4tE,CAAWtyE,EAAE0E,KAAMkrB,GACpB,OAEJ,MAAM2iD,EAAc/tE,KAAKytE,iBAAiBjyE,EAAEkI,EAAGlI,EAAEgZ,GACjD,GAAe,cAAXhZ,EAAE0E,MAAmC,aAAX1E,EAAE0E,KAAqB,CACjD,MAAMuqB,EAAWzqB,KAAK8qE,aAChBkD,GA3XKh3E,EA2X2B+2E,EA3XjB,QAAbh3E,EA2XoB0zB,IA3XO,OAANzzB,GAAcD,EAAE0c,eAAiBzc,EAAEyc,cAAgB1c,EAAEoJ,QAAUnJ,EAAEmJ,OA4X1FsqB,IAAaujD,GACbryE,GAASyvB,EAAKyiD,QAAS,CACnBryE,EACAivB,EACAzqB,MACDA,MAEPA,KAAK8qE,aAAeiD,EAChBA,IAAgBC,GAChBryE,GAASyvB,EAAK9I,QAAS,CACnB9mB,EACAuyE,EACA/tE,MACDA,KAEV,MAAU+tE,GACPpyE,GAASyvB,EAAK7I,QAAS,CACnB/mB,EACAuyE,EACA/tE,MACDA,MAhZI,IAACjJ,EAAGC,CAkZlB,EAwBL,SAASo1E,GAA0Bv5B,EAAYs5B,GAE3C,OAAOA,GADat5B,EAAW36C,KAAO26C,EAAW36C,KAAKoD,OAAS,EAEnE,CAUA,IAAI2yE,GAAgB,CAChBr8D,GAAI,SACPs8D,SAAUvD,GACP,KAAAtyD,CAAOuH,EAAOukD,EAAO1rE,GACjB,MAAMi6C,EAAS9yB,EAAM8yB,OAAS,IAAIi4B,GAAO,CACrCxuE,IAAKyjB,EAAMzjB,IACX1D,UACAmnB,UAEJg7B,GAAQ9Z,UAAUlhB,EAAO8yB,EAAQj6C,GACjCmiD,GAAQmC,OAAOn9B,EAAO8yB,EACzB,EACD,IAAA3T,CAAMnf,GACFg7B,GAAQsC,UAAUt9B,EAAOA,EAAM8yB,eACxB9yB,EAAM8yB,MAChB,EACD,YAAA4T,CAAc1mC,EAAOukD,EAAO1rE,GACxB,MAAMi6C,EAAS9yB,EAAM8yB,OACrBkI,GAAQ9Z,UAAUlhB,EAAO8yB,EAAQj6C,GACjCi6C,EAAOj6C,QAAUA,CACpB,EACD,WAAAovD,CAAajoC,GACT,MAAM8yB,EAAS9yB,EAAM8yB,OACrBA,EAAOy4B,cACPz4B,EAAO65B,gBACV,EACD,UAAA4B,CAAYvuD,EAAO/M,GACVA,EAAKyoD,QACN17C,EAAM8yB,OAAOk7B,YAAY/6D,EAAKta,MAErC,EACDorB,SAAU,CACNsB,SAAS,EACT8zB,SAAU,MACVx+B,MAAO,SACP8gC,UAAU,EACVnoC,SAAS,EACT3C,OAAQ,IACR,OAAAgS,CAAS/mB,EAAGq3C,EAAYH,GACpB,MAAMvyC,EAAQ0yC,EAAWp/B,aACnB26D,EAAK17B,EAAO9yB,MACdwuD,EAAG/6B,iBAAiBlzC,IACpBiuE,EAAG1pD,KAAKvkB,GACR0yC,EAAW1J,QAAS,IAEpBilC,EAAG7pD,KAAKpkB,GACR0yC,EAAW1J,QAAS,EAE3B,EACD7mB,QAAS,KACTurD,QAAS,KACTvlC,OAAQ,CACJh4B,MAAQnU,GAAMA,EAAIyjB,MAAMnnB,QAAQ6X,MAChCi6D,SAAU,GACV3lD,QAAS,GACT,cAAA+tB,CAAgB/yB,GACZ,MAAMuB,EAAWvB,EAAMznB,KAAKgpB,UACpBmnB,QAAQkiC,cAAEA,EAAgBthD,WAAAA,EAAasD,UAAAA,EAAYlc,MAAAA,kBAAQ+9D,EAAehS,aAAGA,IAAqBz8C,EAAM8yB,OAAOj6C,QACvH,OAAOmnB,EAAMqiB,yBAAyBrkC,KAAK8c,IACvC,MAAMjhB,EAAQihB,EAAKyoB,WAAW/J,SAASoxC,EAAgB,OAAIltE,GACrD0sB,EAAcgE,GAAUv0B,EAAMuwB,aACpC,MAAO,CACH9xB,KAAMipB,EAASzG,EAAKva,OAAOypC,MAC3B9d,UAAWryB,EAAMwnB,gBACjB2xB,UAAWtiC,EACX64B,QAASzuB,EAAK+J,QACdo6C,QAASplE,EAAMmjC,eACfmwC,SAAUtzE,EAAMojC,WAChB0wB,eAAgB9zD,EAAMqjC,iBACtB2hC,SAAUhlE,EAAMsjC,gBAChBvX,WAAYwE,EAAY9D,MAAQ8D,EAAYtB,QAAU,EACtDmD,YAAapyB,EAAMynB,YACnBgI,WAAYA,GAAczvB,EAAMyvB,WAChCC,SAAU1vB,EAAM0vB,SAChBqD,UAAWA,GAAa/yB,EAAM+yB,UAC9B6vC,aAAcgS,IAAoBhS,GAAgB5iE,EAAM4iE,cACxD5oD,aAAciH,EAAKva,MACtB,GACFH,KACN,GAELmmB,MAAO,CACH7V,MAAQnU,GAAMA,EAAIyjB,MAAMnnB,QAAQ6X,MAChC2U,SAAS,EACT8zB,SAAU,SACV7gD,KAAM,KAGdmB,YAAa,CACTuqB,YAAc7rB,IAAQA,EAAK8rB,WAAW,MACtCykB,OAAQ,CACJ1kB,YAAc7rB,IAAQ,CACd,iBACA,SACA,QACFyoB,SAASzoB,MAK3B,MAAMu2E,WAAc3pB,GACnB,WAAA70C,CAAY8wB,GACL8O,QACA1vC,KAAK4f,MAAQghB,EAAOhhB,MACpB5f,KAAKvH,QAAUmoC,EAAOnoC,QACtBuH,KAAK7D,IAAMykC,EAAOzkC,IAClB6D,KAAKuuE,cAAWjxE,EAChB0C,KAAK6kB,SAAMvnB,EACX0C,KAAK+kB,YAASznB,EACd0C,KAAKglB,UAAO1nB,EACZ0C,KAAK8kB,WAAQxnB,EACb0C,KAAKkmB,WAAQ5oB,EACb0C,KAAK0oB,YAASprB,EACd0C,KAAK+4C,cAAWz7C,EAChB0C,KAAKuQ,YAASjT,EACd0C,KAAKq7C,cAAW/9C,CACnB,CACD,MAAA/B,CAAOsxB,EAAUiL,GACb,MAAM1M,EAAOprB,KAAKvH,QAGlB,GAFAuH,KAAKglB,KAAO,EACZhlB,KAAK6kB,IAAM,GACNuG,EAAKnG,QAEN,YADAjlB,KAAKkmB,MAAQlmB,KAAK0oB,OAAS1oB,KAAK8kB,MAAQ9kB,KAAK+kB,OAAS,GAG1D/kB,KAAKkmB,MAAQlmB,KAAK8kB,MAAQ+H,EAC1B7sB,KAAK0oB,OAAS1oB,KAAK+kB,OAAS+S,EAC5B,MAAM40B,EAAY1pD,GAAQooB,EAAKlzB,MAAQkzB,EAAKlzB,KAAKoD,OAAS,EAC1D0E,KAAKuuE,SAAWvgD,GAAU5C,EAAKxG,SAC/B,MAAM4pD,EAAW9hB,EAAYz+B,GAAO7C,EAAK3J,MAAME,WAAa3hB,KAAKuuE,SAAS7lD,OACtE1oB,KAAK6vC,eACL7vC,KAAK0oB,OAAS8lD,EAEdxuE,KAAKkmB,MAAQsoD,CAEpB,CACD,YAAA3+B,GACI,MAAMrZ,EAAMx2B,KAAKvH,QAAQsgD,SACzB,MAAe,QAARviB,GAAyB,WAARA,CAC3B,CACD,SAAAi4C,CAAUvpD,GACN,MAAML,IAAEA,EAAGG,KAAGA,EAAOD,OAAAA,EAASD,MAAAA,EAAQrsB,QAAAA,GAAauH,KAC7Cua,EAAQ9hB,EAAQ8hB,MACtB,IACIsS,EAAUghC,EAAQC,EADlB3kC,EAAW,EAkBf,OAhBInpB,KAAK6vC,gBACLge,EAASrzC,GAAeD,EAAOyK,EAAMF,GACrCgpC,EAASjpC,EAAMK,EACf2H,EAAW/H,EAAQE,IAEM,SAArBvsB,EAAQsgD,UACR8U,EAAS7oC,EAAOE,EAChB4oC,EAAStzC,GAAeD,EAAOwK,EAAQF,GACvCsE,GAAiB,GAAN5T,KAEXs4C,EAAS/oC,EAAQI,EACjB4oC,EAAStzC,GAAeD,EAAOsK,EAAKE,GACpCoE,EAAgB,GAAL5T,IAEfsX,EAAW9H,EAASF,GAEjB,CACHgpC,SACAC,SACAjhC,WACA1D,WAEP,CACD,IAAA+U,GACI,MAAM/hC,EAAM6D,KAAK7D,IACXivB,EAAOprB,KAAKvH,QAClB,IAAK2yB,EAAKnG,QACN,OAEJ,MAAMypD,EAAWzgD,GAAO7C,EAAK3J,MAEvByD,EADawpD,EAAS/sD,WACA,EAAI3hB,KAAKuuE,SAAS1pD,KACxCgpC,OAAEA,EAASC,OAAAA,WAASjhC,EAAQ1D,SAAGA,GAAcnpB,KAAKyuE,UAAUvpD,GAClEiH,GAAWhwB,EAAKivB,EAAKlzB,KAAM,EAAG,EAAGw2E,EAAU,CACvCp+D,MAAO8a,EAAK9a,MACZuc,WACA1D,WACAqD,UAAWlS,GAAmB8Q,EAAK7Q,OACnCkS,aAAc,SACdF,YAAa,CACTshC,EACAC,IAGX,EAYL,IAAI6gB,GAAe,CACf/8D,GAAI,QACPs8D,SAAUI,GACP,KAAAj2D,CAAOuH,EAAOukD,EAAO1rE,IAbzB,SAAqBmnB,EAAOopC,GACxB,MAAM7iC,EAAQ,IAAImoD,GAAM,CACpBnyE,IAAKyjB,EAAMzjB,IACX1D,QAASuwD,EACTppC,UAEJg7B,GAAQ9Z,UAAUlhB,EAAOuG,EAAO6iC,GAChCpO,GAAQmC,OAAOn9B,EAAOuG,GACtBvG,EAAMgvD,WAAazoD,CACvB,CAKQ0oD,CAAYjvD,EAAOnnB,EACtB,EACD,IAAAsmC,CAAMnf,GACF,MAAMgvD,EAAahvD,EAAMgvD,WACzBh0B,GAAQsC,UAAUt9B,EAAOgvD,UAClBhvD,EAAMgvD,UAChB,EACD,YAAAtoB,CAAc1mC,EAAOukD,EAAO1rE,GACxB,MAAM0tB,EAAQvG,EAAMgvD,WACpBh0B,GAAQ9Z,UAAUlhB,EAAOuG,EAAO1tB,GAChC0tB,EAAM1tB,QAAUA,CACnB,EACDkrB,SAAU,CACNpJ,MAAO,SACP0K,SAAS,EACTxD,KAAM,CACFlR,OAAQ,QAEZ8qC,UAAU,EACVz2B,QAAS,GACTm0B,SAAU,MACV7gD,KAAM,GACNqY,OAAQ,KAEZs+C,cAAe,CACXv+C,MAAO,SAEXjX,YAAa,CACTuqB,aAAa,EACbE,YAAY,IAIpB,MAAMlmB,GAAM,IAAIkxE,QAChB,IAAIC,GAAkB,CAClBn9D,GAAI,WACJ,KAAAyG,CAAOuH,EAAOukD,EAAO1rE,GACjB,MAAM0tB,EAAQ,IAAImoD,GAAM,CACpBnyE,IAAKyjB,EAAMzjB,IACX1D,UACAmnB,UAEJg7B,GAAQ9Z,UAAUlhB,EAAOuG,EAAO1tB,GAChCmiD,GAAQmC,OAAOn9B,EAAOuG,GACtBvoB,GAAIjE,IAAIimB,EAAOuG,EAClB,EACD,IAAA4Y,CAAMnf,GACFg7B,GAAQsC,UAAUt9B,EAAOhiB,GAAIshB,IAAIU,IACjChiB,GAAIlB,OAAOkjB,EACd,EACD,YAAA0mC,CAAc1mC,EAAOukD,EAAO1rE,GACxB,MAAM0tB,EAAQvoB,GAAIshB,IAAIU,GACtBg7B,GAAQ9Z,UAAUlhB,EAAOuG,EAAO1tB,GAChC0tB,EAAM1tB,QAAUA,CACnB,EACDkrB,SAAU,CACNpJ,MAAO,SACP0K,SAAS,EACTxD,KAAM,CACFlR,OAAQ,UAEZ8qC,UAAU,EACVz2B,QAAS,EACTm0B,SAAU,MACV7gD,KAAM,GACNqY,OAAQ,MAEZs+C,cAAe,CACXv+C,MAAO,SAEXjX,YAAa,CACTuqB,aAAa,EACbE,YAAY,IAIpB,MAAMkrD,GAAc,CACnB,OAAAC,CAASl1D,GACF,IAAKA,EAAMze,OACP,OAAO,EAEX,IAAII,EAAGqU,EACHm/D,EAAO,IAAIh0E,IACXsZ,EAAI,EACJsG,EAAQ,EACZ,IAAIpf,EAAI,EAAGqU,EAAMgK,EAAMze,OAAQI,EAAIqU,IAAOrU,EAAE,CACxC,MAAMw9B,EAAKnf,EAAMre,GAAG5D,QACpB,GAAIohC,GAAMA,EAAG+oB,WAAY,CACrB,MAAMzrB,EAAM0C,EAAG8oB,kBACfktB,EAAKrzE,IAAI26B,EAAI9yB,GACb8Q,GAAKgiB,EAAIhiB,IACPsG,CACL,CACJ,CAID,MAAO,CACHpX,EAJa,IACVwrE,GACLvwC,QAAO,CAAC5nC,EAAGC,IAAID,EAAIC,IAAKk4E,EAAK75D,KAG3Bb,EAAGA,EAAIsG,EAEd,EACJ,OAAAw/B,CAASvgC,EAAOo1D,GACT,IAAKp1D,EAAMze,OACP,OAAO,EAEX,IAGII,EAAGqU,EAAKq/D,EAHR1rE,EAAIyrE,EAAczrE,EAClB8Q,EAAI26D,EAAc36D,EAClBolC,EAAcxnC,OAAOuD,kBAEzB,IAAIja,EAAI,EAAGqU,EAAMgK,EAAMze,OAAQI,EAAIqU,IAAOrU,EAAE,CACxC,MAAMw9B,EAAKnf,EAAMre,GAAG5D,QACpB,GAAIohC,GAAMA,EAAG+oB,WAAY,CACrB,MACMnlD,EAAIib,GAAsBo3D,EADjBj2C,EAAG2gB,kBAEd/8C,EAAI88C,IACJA,EAAc98C,EACdsyE,EAAiBl2C,EAExB,CACJ,CACD,GAAIk2C,EAAgB,CAChB,MAAMC,EAAKD,EAAeptB,kBAC1Bt+C,EAAI2rE,EAAG3rE,EACP8Q,EAAI66D,EAAG76D,CACV,CACD,MAAO,CACH9Q,IACA8Q,IAEP,GAEL,SAAS86D,GAAahoC,EAAMioC,GAQxB,OAPIA,IACIvsE,GAAQusE,GACR/vE,MAAMsS,UAAUzX,KAAK0Y,MAAMu0B,EAAMioC,GAEjCjoC,EAAKjtC,KAAKk1E,IAGXjoC,CACX,CACC,SAASkoC,GAAcpsE,GACpB,OAAoB,iBAARA,GAAoBA,aAAeqsE,SAAWrsE,EAAIxJ,QAAQ,OAAS,EACpEwJ,EAAIwR,MAAM,MAEdxR,CACX,CACC,SAASssE,GAAkB9vD,EAAOtK,GAC/B,MAAMxd,QAAEA,EAAU2b,aAAAA,QAAetT,GAAWmV,EACtC6tB,EAAavjB,EAAM8mB,eAAejzB,GAAc0vB,YAChDyG,MAAEA,EAAK9wC,MAAGA,GAAWqqC,EAAWwG,iBAAiBxpC,GACvD,MAAO,CACHyf,QACAgqB,QACAjX,OAAQwQ,EAAWwF,UAAUxoC,GAC7BmqC,IAAK1qB,EAAMznB,KAAKgpB,SAAS1N,GAActb,KAAKgI,GAC5CwvE,eAAgB72E,EAChB6sC,QAASxC,EAAWyC,aACpByE,UAAWlqC,EACXsT,eACA3b,UAER,CACC,SAAS83E,GAAeC,EAASp3E,GAC9B,MAAM0D,EAAM0zE,EAAQjwD,MAAMzjB,KACpB2zE,KAAEA,EAAOC,OAAAA,QAAS5pD,GAAW0pD,GAC7BtF,SAAEA,EAAQD,UAAGA,GAAe7xE,EAC5Bu3E,EAAW/hD,GAAOx1B,EAAQu3E,UAC1B1C,EAAYr/C,GAAOx1B,EAAQ60E,WAC3B2C,EAAahiD,GAAOx1B,EAAQw3E,YAC5BC,EAAiB/pD,EAAM7qB,OACvB60E,EAAkBJ,EAAOz0E,OACzB80E,EAAoBN,EAAKx0E,OACzBspB,EAAUoJ,GAAUv1B,EAAQmsB,SAClC,IAAI8D,EAAS9D,EAAQ8D,OACjBxC,EAAQ,EACRmqD,EAAqBP,EAAKnxC,QAAO,CAAC7jB,EAAOw1D,IAAWx1D,EAAQw1D,EAASC,OAAOj1E,OAASg1E,EAASlkD,MAAM9wB,OAASg1E,EAASE,MAAMl1E,QAAQ,GAKxI,GAJA+0E,GAAsBR,EAAQY,WAAWn1E,OAASu0E,EAAQa,UAAUp1E,OAChE40E,IACAxnD,GAAUwnD,EAAiB5C,EAAU3rD,YAAcuuD,EAAiB,GAAKz3E,EAAQk4E,aAAel4E,EAAQm4E,mBAExGP,EAAoB,CAEpB3nD,GAAU0nD,GADa33E,EAAQo4E,cAAgB/vE,KAAKC,IAAIupE,EAAW0F,EAASruD,YAAcquD,EAASruD,aACnD0uD,EAAqBD,GAAqBJ,EAASruD,YAAc0uD,EAAqB,GAAK53E,EAAQq4E,WACtJ,CACGX,IACAznD,GAAUjwB,EAAQs4E,gBAAkBZ,EAAkBF,EAAWtuD,YAAcwuD,EAAkB,GAAK13E,EAAQu4E,eAElH,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS/lD,GAC1BjF,EAAQplB,KAAKC,IAAImlB,EAAO/pB,EAAIorB,YAAY4D,GAAMjF,MAAQ+qD,EAC9D,EAiBI,OAhBA90E,EAAIyrB,OACJzrB,EAAIslB,KAAO6rD,EAAUjmD,OACrBrU,GAAK68D,EAAQ1pD,MAAO+qD,GACpB/0E,EAAIslB,KAAOuuD,EAAS3oD,OACpBrU,GAAK68D,EAAQY,WAAWnjC,OAAOuiC,EAAQa,WAAYQ,GACnDD,EAAex4E,EAAQo4E,cAAgBtG,EAAW,EAAI9xE,EAAQkjD,WAAa,EAC3E3oC,GAAK88D,GAAOQ,IACRt9D,GAAKs9D,EAASC,OAAQW,GACtBl+D,GAAKs9D,EAASlkD,MAAO8kD,GACrBl+D,GAAKs9D,EAASE,MAAOU,EAAa,IAEtCD,EAAe,EACf90E,EAAIslB,KAAOwuD,EAAW5oD,OACtBrU,GAAK68D,EAAQE,OAAQmB,GACrB/0E,EAAI4rB,UACJ7B,GAAStB,EAAQsB,MACV,CACHA,QACAwC,SAER,CAoBA,SAASyoD,GAAgBvxD,EAAOnnB,EAAS4c,EAAM+7D,GAC3C,MAAM1tE,EAAEA,EAACwiB,MAAGA,GAAW7Q,GACf6Q,MAAOmrD,EAAannC,WAAWllB,KAAEA,QAAOF,IAAclF,EAC9D,IAAI0xD,EAAS,SAWb,MAVe,WAAXF,EACAE,EAAS5tE,IAAMshB,EAAOF,GAAS,EAAI,OAAS,QACrCphB,GAAKwiB,EAAQ,EACpBorD,EAAS,OACF5tE,GAAK2tE,EAAanrD,EAAQ,IACjCorD,EAAS,SAnBjB,SAA6BA,EAAQ1xD,EAAOnnB,EAAS4c,GACjD,MAAM3R,EAAEA,EAACwiB,MAAGA,GAAW7Q,EACjBk8D,EAAQ94E,EAAQ+4E,UAAY/4E,EAAQg5E,aAC1C,MAAe,SAAXH,GAAqB5tE,EAAIwiB,EAAQqrD,EAAQ3xD,EAAMsG,OAGpC,UAAXorD,GAAsB5tE,EAAIwiB,EAAQqrD,EAAQ,QAA9C,CAGJ,CAYQG,CAAoBJ,EAAQ1xD,EAAOnnB,EAAS4c,KAC5Ci8D,EAAS,UAENA,CACX,CACC,SAASK,GAAmB/xD,EAAOnnB,EAAS4c,GACzC,MAAM+7D,EAAS/7D,EAAK+7D,QAAU34E,EAAQ24E,QApC1C,SAAyBxxD,EAAOvK,GAC5B,MAAMb,EAAEA,EAACkU,OAAGA,GAAYrT,EACxB,OAAIb,EAAIkU,EAAS,EACN,MACAlU,EAAIoL,EAAM8I,OAASA,EAAS,EAC5B,SAEJ,QACX,CA4BoDkpD,CAAgBhyD,EAAOvK,GACvE,MAAO,CACHi8D,OAAQj8D,EAAKi8D,QAAU74E,EAAQ64E,QAAUH,GAAgBvxD,EAAOnnB,EAAS4c,EAAM+7D,GAC/EA,SAER,CAqBC,SAASS,GAAmBp5E,EAAS4c,EAAMy8D,EAAWlyD,GACnD,MAAM4xD,UAAEA,EAAYC,aAAAA,eAAe1oD,GAAkBtwB,GAC/C64E,OAAEA,EAAMF,OAAGA,GAAYU,EACvBC,EAAiBP,EAAYC,GAC7BzkD,QAAEA,EAAOG,SAAGA,EAAWF,WAAAA,EAAaC,YAAAA,GAAiBa,GAAchF,GACzE,IAAIrlB,EAzBR,SAAgB2R,EAAMi8D,GAClB,IAAI5tE,EAAEA,EAACwiB,MAAGA,GAAW7Q,EAMrB,MALe,UAAXi8D,EACA5tE,GAAKwiB,EACa,WAAXorD,IACP5tE,GAAKwiB,EAAQ,GAEVxiB,CACX,CAiBYsuE,CAAO38D,EAAMi8D,GACrB,MAAM98D,EAjBV,SAAgBa,EAAM+7D,EAAQW,GAC1B,IAAIv9D,EAAEA,EAACkU,OAAGA,GAAYrT,EAQtB,MAPe,QAAX+7D,EACA58D,GAAKu9D,EAELv9D,GADkB,WAAX48D,EACF1oD,EAASqpD,EAETrpD,EAAS,EAEXlU,CACX,CAOcy9D,CAAO58D,EAAM+7D,EAAQW,GAY/B,MAXe,WAAXX,EACe,SAAXE,EACA5tE,GAAKquE,EACa,UAAXT,IACP5tE,GAAKquE,GAES,SAAXT,EACP5tE,GAAK5C,KAAKC,IAAIisB,EAASC,GAAcukD,EACnB,UAAXF,IACP5tE,GAAK5C,KAAKC,IAAIosB,EAAUD,GAAeskD,GAEpC,CACH9tE,EAAGkV,GAAYlV,EAAG,EAAGkc,EAAMsG,MAAQ7Q,EAAK6Q,OACxC1R,EAAGoE,GAAYpE,EAAG,EAAGoL,EAAM8I,OAASrT,EAAKqT,QAEjD,CACA,SAASwpD,GAAYrC,EAASt1D,EAAO9hB,GACjC,MAAMmsB,EAAUoJ,GAAUv1B,EAAQmsB,SAClC,MAAiB,WAAVrK,EAAqBs1D,EAAQnsE,EAAImsE,EAAQ3pD,MAAQ,EAAc,UAAV3L,EAAoBs1D,EAAQnsE,EAAImsE,EAAQ3pD,MAAQtB,EAAQE,MAAQ+qD,EAAQnsE,EAAIkhB,EAAQI,IACpJ,CACC,SAASmtD,GAAwBx2E,GAC9B,OAAO2zE,GAAa,GAAIE,GAAc7zE,GAC1C,CAQA,SAASy2E,GAAkBpzE,EAAWF,GAClC,MAAMkkB,EAAWlkB,GAAWA,EAAQ6mC,SAAW7mC,EAAQ6mC,QAAQkqC,SAAW/wE,EAAQ6mC,QAAQkqC,QAAQ7wE,UAClG,OAAOgkB,EAAWhkB,EAAUgkB,SAASA,GAAYhkB,CACrD,CACA,MAAMqzE,GAAmB,CACrBC,YAAav8E,GACb,KAAAowB,CAAOosD,GACH,GAAIA,EAAaj3E,OAAS,EAAG,CACzB,MAAMga,EAAOi9D,EAAa,GACpBjqC,EAAShzB,EAAKsK,MAAMznB,KAAKmwC,OACzBkqC,EAAalqC,EAASA,EAAOhtC,OAAS,EAC5C,GAAI0E,MAAQA,KAAKvH,SAAiC,YAAtBuH,KAAKvH,QAAQypB,KACrC,OAAO5M,EAAKqwB,QAAQiE,OAAS,GAC1B,GAAIt0B,EAAKs0B,MACZ,OAAOt0B,EAAKs0B,MACT,GAAI4oC,EAAa,GAAKl9D,EAAK+0B,UAAYmoC,EAC1C,OAAOlqC,EAAOhzB,EAAK+0B,UAE1B,CACD,MAAO,EACV,EACDooC,WAAY18E,GACZ06E,WAAY16E,GACZ28E,YAAa38E,GACb,KAAA6zC,CAAO+oC,GACH,GAAI3yE,MAAQA,KAAKvH,SAAiC,YAAtBuH,KAAKvH,QAAQypB,KACrC,OAAOywD,EAAY/oC,MAAQ,KAAO+oC,EAAYhD,gBAAkBgD,EAAYhD,eAEhF,IAAI/lC,EAAQ+oC,EAAYhtC,QAAQiE,OAAS,GACrCA,IACAA,GAAS,MAEb,MAAM9wC,EAAQ65E,EAAYhD,eAI1B,OAHK99D,GAAc/Y,KACf8wC,GAAS9wC,GAEN8wC,CACV,EACD,UAAAgpC,CAAYD,GACR,MACMl6E,EADOk6E,EAAY/yD,MAAM8mB,eAAeisC,EAAYl/D,cACrC0vB,WAAW/J,SAASu5C,EAAYtoC,WACrD,MAAO,CACHnpB,YAAazoB,EAAQyoB,YACrBD,gBAAiBxoB,EAAQwoB,gBACzB+I,YAAavxB,EAAQuxB,YACrB6S,WAAYpkC,EAAQokC,WACpBC,iBAAkBrkC,EAAQqkC,iBAC1Bu/B,aAAc,EAErB,EACD,cAAAwW,GACI,OAAO7yE,KAAKvH,QAAQq6E,SACvB,EACD,eAAAC,CAAiBJ,GACb,MACMl6E,EADOk6E,EAAY/yD,MAAM8mB,eAAeisC,EAAYl/D,cACrC0vB,WAAW/J,SAASu5C,EAAYtoC,WACrD,MAAO,CACHnhB,WAAYzwB,EAAQywB,WACpBC,SAAU1wB,EAAQ0wB,SAEzB,EACD6pD,WAAYj9E,GACZ26E,UAAW36E,GACXk9E,aAAcl9E,GACdg6E,OAAQh6E,GACRm9E,YAAan9E,IAEhB,SAASo9E,GAA2Bn0E,EAAWjH,EAAMoE,EAAKi0D,GACvD,MAAMj5D,EAAS6H,EAAUjH,GAAMia,KAAK7V,EAAKi0D,GACzC,YAAsB,IAAXj5D,EACAk7E,GAAiBt6E,GAAMia,KAAK7V,EAAKi0D,GAErCj5D,CACX,CACA,MAAMi8E,WAAgBzuB,GACrBrgB,mBAAqB0qC,GAClB,WAAAl/D,CAAY8wB,GACR8O,QACA1vC,KAAKqzE,QAAU,EACfrzE,KAAKm+B,QAAU,GACfn+B,KAAKszE,oBAAiBh2E,EACtB0C,KAAKuzE,WAAQj2E,EACb0C,KAAKwzE,uBAAoBl2E,EACzB0C,KAAKyzE,cAAgB,GACrBzzE,KAAKshC,iBAAchkC,EACnB0C,KAAKilC,cAAW3nC,EAChB0C,KAAK4f,MAAQghB,EAAOhhB,MACpB5f,KAAKvH,QAAUmoC,EAAOnoC,QACtBuH,KAAK0zE,gBAAap2E,EAClB0C,KAAKmmB,WAAQ7oB,EACb0C,KAAKywE,gBAAanzE,EAClB0C,KAAK8vE,UAAOxyE,EACZ0C,KAAK0wE,eAAYpzE,EACjB0C,KAAK+vE,YAASzyE,EACd0C,KAAKsxE,YAASh0E,EACd0C,KAAKoxE,YAAS9zE,EACd0C,KAAK0D,OAAIpG,EACT0C,KAAKwU,OAAIlX,EACT0C,KAAK0oB,YAASprB,EACd0C,KAAKkmB,WAAQ5oB,EACb0C,KAAK2zE,YAASr2E,EACd0C,KAAK4zE,YAASt2E,EACd0C,KAAK6zE,iBAAcv2E,EACnB0C,KAAK8zE,sBAAmBx2E,EACxB0C,KAAK+zE,qBAAkBz2E,CAC1B,CACD,UAAA+nC,CAAW5sC,GACPuH,KAAKvH,QAAUA,EACfuH,KAAKwzE,uBAAoBl2E,EACzB0C,KAAKilC,cAAW3nC,CACnB,CACJ,kBAAAytC,GACO,MAAM5G,EAASnkC,KAAKwzE,kBACpB,GAAIrvC,EACA,OAAOA,EAEX,MAAMvkB,EAAQ5f,KAAK4f,MACbnnB,EAAUuH,KAAKvH,QAAQu4B,WAAWhxB,KAAKuoB,cACvC6C,EAAO3yB,EAAQoqD,SAAWjjC,EAAMnnB,QAAQuoB,WAAavoB,EAAQ+rB,WAC7DA,EAAa,IAAImc,GAAW3gC,KAAK4f,MAAOwL,GAI9C,OAHIA,EAAKgE,aACLpvB,KAAKwzE,kBAAoBj9E,OAAOu0C,OAAOtmB,IAEpCA,CACV,CACJ,UAAA+D,GACO,OAAOvoB,KAAKilC,WAAajlC,KAAKilC,UArIRhT,EAqIwCjyB,KAAK4f,MAAM2I,aArI3CsnD,EAqIyD7vE,KArIhDuyE,EAqIsDvyE,KAAKyzE,cApI/FhlD,GAAcwD,EAAQ,CACzB49C,UACA0C,eACAryE,KAAM,cAJd,IAA8B+xB,EAAQ49C,EAAS0C,CAsI1C,CACD,QAAAyB,CAASl1E,EAASrG,GACd,MAAMuG,UAAEA,GAAevG,EACjB65E,EAAca,GAA2Bn0E,EAAW,cAAegB,KAAMlB,GACzEqnB,EAAQgtD,GAA2Bn0E,EAAW,QAASgB,KAAMlB,GAC7D2zE,EAAaU,GAA2Bn0E,EAAW,aAAcgB,KAAMlB,GAC7E,IAAIstB,EAAQ,GAIZ,OAHAA,EAAQkjD,GAAaljD,EAAOojD,GAAc8C,IAC1ClmD,EAAQkjD,GAAaljD,EAAOojD,GAAcrpD,IAC1CiG,EAAQkjD,GAAaljD,EAAOojD,GAAciD,IACnCrmD,CACV,CACD,aAAA6nD,CAAc1B,EAAc95E,GACxB,OAAO05E,GAAwBgB,GAA2B16E,EAAQuG,UAAW,aAAcgB,KAAMuyE,GACpG,CACD,OAAA2B,CAAQ3B,EAAc95E,GAClB,MAAMuG,UAAEA,GAAevG,EACjB07E,EAAY,GAalB,OAZAnhE,GAAKu/D,GAAezzE,IAChB,MAAMwxE,EAAW,CACbC,OAAQ,GACRnkD,MAAO,GACPokD,MAAO,IAEL4D,EAAShC,GAAkBpzE,EAAWF,GAC5CwwE,GAAagB,EAASC,OAAQf,GAAc2D,GAA2BiB,EAAQ,cAAep0E,KAAMlB,KACpGwwE,GAAagB,EAASlkD,MAAO+mD,GAA2BiB,EAAQ,QAASp0E,KAAMlB,IAC/EwwE,GAAagB,EAASE,MAAOhB,GAAc2D,GAA2BiB,EAAQ,aAAcp0E,KAAMlB,KAClGq1E,EAAU95E,KAAKi2E,EAAS,IAErB6D,CACV,CACD,YAAAE,CAAa9B,EAAc95E,GACvB,OAAO05E,GAAwBgB,GAA2B16E,EAAQuG,UAAW,YAAagB,KAAMuyE,GACnG,CACD,SAAA+B,CAAU/B,EAAc95E,GACpB,MAAMuG,UAAEA,GAAevG,EACjBw6E,EAAeE,GAA2Bn0E,EAAW,eAAgBgB,KAAMuyE,GAC3ExC,EAASoD,GAA2Bn0E,EAAW,SAAUgB,KAAMuyE,GAC/DW,EAAcC,GAA2Bn0E,EAAW,cAAegB,KAAMuyE,GAC/E,IAAInmD,EAAQ,GAIZ,OAHAA,EAAQkjD,GAAaljD,EAAOojD,GAAcyD,IAC1C7mD,EAAQkjD,GAAaljD,EAAOojD,GAAcO,IAC1C3jD,EAAQkjD,GAAaljD,EAAOojD,GAAc0D,IACnC9mD,CACV,CACJ,YAAAmoD,CAAa97E,GACN,MAAM4rB,EAASrkB,KAAKm+B,QACdhmC,EAAO6H,KAAK4f,MAAMznB,KAClB07E,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIr4E,EAAGqU,EADHwiE,EAAe,GAEnB,IAAI72E,EAAI,EAAGqU,EAAMsU,EAAO/oB,OAAQI,EAAIqU,IAAOrU,EACvC62E,EAAal4E,KAAKq1E,GAAkB1vE,KAAK4f,MAAOyE,EAAO3oB,KAkB3D,OAhBIjD,EAAQoF,SACR00E,EAAeA,EAAa10E,QAAO,CAAC/F,EAASqI,EAAO2W,IAAQre,EAAQoF,OAAO/F,EAASqI,EAAO2W,EAAO3e,MAElGM,EAAQ+7E,WACRjC,EAAeA,EAAahlC,MAAK,CAACx2C,EAAGC,IAAIyB,EAAQ+7E,SAASz9E,EAAGC,EAAGmB,MAEpE6a,GAAKu/D,GAAezzE,IAChB,MAAMs1E,EAAShC,GAAkB35E,EAAQuG,UAAWF,GACpD+0E,EAAYx5E,KAAK84E,GAA2BiB,EAAQ,aAAcp0E,KAAMlB,IACxEg1E,EAAiBz5E,KAAK84E,GAA2BiB,EAAQ,kBAAmBp0E,KAAMlB,IAClFi1E,EAAgB15E,KAAK84E,GAA2BiB,EAAQ,iBAAkBp0E,KAAMlB,GAAS,IAE7FkB,KAAK6zE,YAAcA,EACnB7zE,KAAK8zE,iBAAmBA,EACxB9zE,KAAK+zE,gBAAkBA,EACvB/zE,KAAK0zE,WAAanB,EACXA,CACV,CACD,MAAAh3E,CAAOygB,EAASs/C,GACZ,MAAM7iE,EAAUuH,KAAKvH,QAAQu4B,WAAWhxB,KAAKuoB,cACvClE,EAASrkB,KAAKm+B,QACpB,IAAI/Z,EACAmuD,EAAe,GACnB,GAAKluD,EAAO/oB,OAML,CACH,MAAMy9C,EAAWi2B,GAAYv2E,EAAQsgD,UAAU/mC,KAAKhS,KAAMqkB,EAAQrkB,KAAKszE,gBACvEf,EAAevyE,KAAKu0E,aAAa97E,GACjCuH,KAAKmmB,MAAQnmB,KAAKg0E,SAASzB,EAAc95E,GACzCuH,KAAKywE,WAAazwE,KAAKi0E,cAAc1B,EAAc95E,GACnDuH,KAAK8vE,KAAO9vE,KAAKk0E,QAAQ3B,EAAc95E,GACvCuH,KAAK0wE,UAAY1wE,KAAKq0E,aAAa9B,EAAc95E,GACjDuH,KAAK+vE,OAAS/vE,KAAKs0E,UAAU/B,EAAc95E,GAC3C,MAAM4c,EAAOrV,KAAKuzE,MAAQ3D,GAAe5vE,KAAMvH,GACzCg8E,EAAkBl+E,OAAOP,OAAO,CAAA,EAAI+iD,EAAU1jC,GAC9Cy8D,EAAYH,GAAmB3xE,KAAK4f,MAAOnnB,EAASg8E,GACpDC,EAAkB7C,GAAmBp5E,EAASg8E,EAAiB3C,EAAW9xE,KAAK4f,OACrF5f,KAAKsxE,OAASQ,EAAUR,OACxBtxE,KAAKoxE,OAASU,EAAUV,OACxBhtD,EAAa,CACTivD,QAAS,EACT3vE,EAAGgxE,EAAgBhxE,EACnB8Q,EAAGkgE,EAAgBlgE,EACnB0R,MAAO7Q,EAAK6Q,MACZwC,OAAQrT,EAAKqT,OACbirD,OAAQ56B,EAASr1C,EACjBkwE,OAAQ76B,EAASvkC,EAExB,MA5BwB,IAAjBxU,KAAKqzE,UACLjvD,EAAa,CACTivD,QAAS,IA2BrBrzE,KAAKyzE,cAAgBlB,EACrBvyE,KAAKilC,cAAW3nC,EACZ8mB,GACApkB,KAAK+qC,qBAAqBxvC,OAAOyE,KAAMokB,GAEvCpI,GAAWvjB,EAAQk8E,UACnBl8E,EAAQk8E,SAAS3iE,KAAKhS,KAAM,CACxB4f,MAAO5f,KAAK4f,MACZiwD,QAAS7vE,KACTs7D,UAGX,CACD,SAAAsZ,CAAUC,EAAc14E,EAAKkZ,EAAM5c,GAC/B,MAAMq8E,EAAgB90E,KAAK+0E,iBAAiBF,EAAcx/D,EAAM5c,GAChE0D,EAAI0tB,OAAOirD,EAAclpB,GAAIkpB,EAAcjpB,IAC3C1vD,EAAI0tB,OAAOirD,EAAchpB,GAAIgpB,EAAc/oB,IAC3C5vD,EAAI0tB,OAAOirD,EAAcE,GAAIF,EAAcG,GAC9C,CACD,gBAAAF,CAAiBF,EAAcx/D,EAAM5c,GACjC,MAAM64E,OAAEA,EAAMF,OAAGA,GAAYpxE,MACvBwxE,UAAEA,EAASzoD,aAAGA,GAAkBtwB,GAChCu0B,QAAEA,EAAOG,SAAGA,EAAWF,WAAAA,EAAaC,YAAAA,GAAiBa,GAAchF,IACjErlB,EAAGwxE,EAAM1gE,EAAG2gE,GAASN,GACvB3uD,MAAEA,EAAKwC,OAAGA,GAAYrT,EAC5B,IAAIu2C,EAAIE,EAAIkpB,EAAInpB,EAAIE,EAAIkpB,EAoCxB,MAnCe,WAAX7D,GACArlB,EAAKopB,EAAMzsD,EAAS,EACL,SAAX4oD,GACA1lB,EAAKspB,EACLppB,EAAKF,EAAK4lB,EACV3lB,EAAKE,EAAKylB,EACVyD,EAAKlpB,EAAKylB,IAEV5lB,EAAKspB,EAAMhvD,EACX4lC,EAAKF,EAAK4lB,EACV3lB,EAAKE,EAAKylB,EACVyD,EAAKlpB,EAAKylB,GAEdwD,EAAKppB,IAGDE,EADW,SAAXwlB,EACK4D,EAAMp0E,KAAKC,IAAIisB,EAASC,GAAcukD,EACzB,UAAXF,EACF4D,EAAMhvD,EAAQplB,KAAKC,IAAIosB,EAAUD,GAAeskD,EAEhDxxE,KAAK2zE,OAEC,QAAXvC,GACAvlB,EAAKspB,EACLppB,EAAKF,EAAK2lB,EACV5lB,EAAKE,EAAK0lB,EACVwD,EAAKlpB,EAAK0lB,IAEV3lB,EAAKspB,EAAMzsD,EACXqjC,EAAKF,EAAK2lB,EACV5lB,EAAKE,EAAK0lB,EACVwD,EAAKlpB,EAAK0lB,GAEdyD,EAAKppB,GAEF,CACHD,KACAE,KACAkpB,KACAnpB,KACAE,KACAkpB,KAEP,CACD,SAAArnB,CAAU94B,EAAI34B,EAAK1D,GACf,MAAM0tB,EAAQnmB,KAAKmmB,MACb7qB,EAAS6qB,EAAM7qB,OACrB,IAAIgyE,EAAWqD,EAAcj1E,EAC7B,GAAIJ,EAAQ,CACR,MAAMkxE,EAAY9yC,GAAcjhC,EAAQkhC,IAAK35B,KAAK0D,EAAG1D,KAAKkmB,OAQ1D,IAPA4O,EAAGpxB,EAAIwuE,GAAYlyE,KAAMvH,EAAQ+rD,WAAY/rD,GAC7C0D,EAAIqwB,UAAYggD,EAAUhgD,UAAU/zB,EAAQ+rD,YAC5CroD,EAAIswB,aAAe,SACnB6gD,EAAYr/C,GAAOx1B,EAAQ60E,WAC3BqD,EAAel4E,EAAQk4E,aACvBx0E,EAAI2vB,UAAYrzB,EAAQ28E,WACxBj5E,EAAIslB,KAAO6rD,EAAUjmD,OACjB3rB,EAAI,EAAGA,EAAIJ,IAAUI,EACrBS,EAAI2wB,SAAS3G,EAAMzqB,GAAI8wE,EAAU9oE,EAAEoxB,EAAGpxB,GAAIoxB,EAAGtgB,EAAI84D,EAAU3rD,WAAa,GACxEmT,EAAGtgB,GAAK84D,EAAU3rD,WAAagvD,EAC3Bj1E,EAAI,IAAMJ,IACVw5B,EAAGtgB,GAAK/b,EAAQm4E,kBAAoBD,EAG/C,CACJ,CACJ,aAAA0E,CAAcl5E,EAAK24B,EAAIp5B,EAAG8wE,EAAW/zE,GAC9B,MAAMm6E,EAAa5yE,KAAK6zE,YAAYn4E,GAC9Bq3E,EAAkB/yE,KAAK8zE,iBAAiBp4E,IACxC4uE,UAAEA,EAASC,SAAGA,GAAc9xE,EAC5Bu3E,EAAW/hD,GAAOx1B,EAAQu3E,UAC1BsF,EAASpD,GAAYlyE,KAAM,OAAQvH,GACnC88E,EAAY/I,EAAU9oE,EAAE4xE,GACxBE,EAAUlL,EAAY0F,EAASruD,YAAcquD,EAASruD,WAAa2oD,GAAa,EAAI,EACpFmL,EAAS3gD,EAAGtgB,EAAIghE,EACtB,GAAI/8E,EAAQ+xE,cAAe,CACvB,MAAMwC,EAAc,CAChB5jD,OAAQtoB,KAAKE,IAAIupE,EAAUD,GAAa,EACxCphD,WAAY6pD,EAAgB7pD,WAC5BC,SAAU4pD,EAAgB5pD,SAC1Ba,YAAa,GAEXorB,EAAUo3B,EAAUzyC,WAAWw7C,EAAWhL,GAAYA,EAAW,EACjEl1B,EAAUogC,EAASnL,EAAY,EACrCnuE,EAAI0vB,YAAcpzB,EAAQi9E,mBAC1Bv5E,EAAI2vB,UAAYrzB,EAAQi9E,mBACxB/sD,GAAUxsB,EAAK6wE,EAAa53B,EAASC,GACrCl5C,EAAI0vB,YAAc+mD,EAAW1xD,YAC7B/kB,EAAI2vB,UAAY8mD,EAAW3xD,gBAC3B0H,GAAUxsB,EAAK6wE,EAAa53B,EAASC,EACjD,KAAe,CACHl5C,EAAIqpB,UAAYtT,GAAS0gE,EAAW5oD,aAAelpB,KAAKC,OAAOxK,OAAOipB,OAAOozD,EAAW5oD,cAAgB4oD,EAAW5oD,aAAe,EAClI7tB,EAAI0vB,YAAc+mD,EAAW1xD,YAC7B/kB,EAAImxD,YAAYslB,EAAW/1C,YAAc,IACzC1gC,EAAIoxD,eAAiBqlB,EAAW91C,kBAAoB,EACpD,MAAM64C,EAASnJ,EAAUzyC,WAAWw7C,EAAWhL,GACzCqL,EAASpJ,EAAUzyC,WAAWyyC,EAAU1yC,MAAMy7C,EAAW,GAAIhL,EAAW,GACxElO,EAAetuC,GAAc6kD,EAAWvW,cAC1C9lE,OAAOipB,OAAO68C,GAAc1K,MAAMhxD,GAAU,IAANA,KACtCxE,EAAIqtB,YACJrtB,EAAI2vB,UAAYrzB,EAAQi9E,mBACxB3oD,GAAmB5wB,EAAK,CACpBuH,EAAGiyE,EACHnhE,EAAGihE,EACH9yE,EAAG4nE,EACH1pE,EAAGypE,EACHlhD,OAAQizC,IAEZlgE,EAAIkC,OACJlC,EAAI8tB,SACJ9tB,EAAI2vB,UAAY8mD,EAAW3xD,gBAC3B9kB,EAAIqtB,YACJuD,GAAmB5wB,EAAK,CACpBuH,EAAGkyE,EACHphE,EAAGihE,EAAS,EACZ9yE,EAAG4nE,EAAW,EACd1pE,EAAGypE,EAAY,EACflhD,OAAQizC,IAEZlgE,EAAIkC,SAEJlC,EAAI2vB,UAAYrzB,EAAQi9E,mBACxBv5E,EAAI+vB,SAASypD,EAAQF,EAAQlL,EAAUD,GACvCnuE,EAAI05E,WAAWF,EAAQF,EAAQlL,EAAUD,GACzCnuE,EAAI2vB,UAAY8mD,EAAW3xD,gBAC3B9kB,EAAI+vB,SAAS0pD,EAAQH,EAAS,EAAGlL,EAAW,EAAGD,EAAY,GAElE,CACDnuE,EAAI2vB,UAAY9rB,KAAK+zE,gBAAgBr4E,EACxC,CACD,QAAAo6E,CAAShhD,EAAI34B,EAAK1D,GACd,MAAMq3E,KAAEA,GAAU9vE,MACZ8wE,YAAEA,EAAciF,UAAAA,gBAAYlF,EAAavG,UAAGA,EAASC,SAAGA,EAAW5uB,WAAAA,GAAgBljD,EACnFu3E,EAAW/hD,GAAOx1B,EAAQu3E,UAChC,IAAIgG,EAAiBhG,EAASruD,WAC1Bs0D,EAAe,EACnB,MAAMzJ,EAAY9yC,GAAcjhC,EAAQkhC,IAAK35B,KAAK0D,EAAG1D,KAAKkmB,OACpDgwD,EAAiB,SAAS/qD,GAC5BhvB,EAAI2wB,SAAS3B,EAAMqhD,EAAU9oE,EAAEoxB,EAAGpxB,EAAIuyE,GAAenhD,EAAGtgB,EAAIwhE,EAAiB,GAC7ElhD,EAAGtgB,GAAKwhE,EAAiBlF,CACrC,EACcqF,EAA0B3J,EAAUhgD,UAAUupD,GACpD,IAAIzF,EAAU8F,EAAWhqD,EAAO1wB,EAAG8S,EAAG8E,EAAMuU,EAQ5C,IAPA1rB,EAAIqwB,UAAYupD,EAChB55E,EAAIswB,aAAe,SACnBtwB,EAAIslB,KAAOuuD,EAAS3oD,OACpByN,EAAGpxB,EAAIwuE,GAAYlyE,KAAMm2E,EAAyB19E,GAClD0D,EAAI2vB,UAAYrzB,EAAQq6E,UACxB9/D,GAAKhT,KAAKywE,WAAYyF,GACtBD,EAAepF,GAA6C,UAA5BsF,EAAoD,WAAdJ,EAAyBxL,EAAW,EAAI5uB,EAAa4uB,EAAW,EAAI5uB,EAAa,EACnJjgD,EAAI,EAAG4X,EAAOw8D,EAAKx0E,OAAQI,EAAI4X,IAAQ5X,EAAE,CAUzC,IATA40E,EAAWR,EAAKp0E,GAChB06E,EAAYp2E,KAAK+zE,gBAAgBr4E,GACjCS,EAAI2vB,UAAYsqD,EAChBpjE,GAAKs9D,EAASC,OAAQ2F,GACtB9pD,EAAQkkD,EAASlkD,MACbykD,GAAiBzkD,EAAM9wB,SACvB0E,KAAKq1E,cAAcl5E,EAAK24B,EAAIp5B,EAAG8wE,EAAW/zE,GAC1Cu9E,EAAiBl1E,KAAKC,IAAIivE,EAASruD,WAAY2oD,IAE/C97D,EAAI,EAAGqZ,EAAOuE,EAAM9wB,OAAQkT,EAAIqZ,IAAQrZ,EACxC0nE,EAAe9pD,EAAM5d,IACrBwnE,EAAiBhG,EAASruD,WAE9B3O,GAAKs9D,EAASE,MAAO0F,EACxB,CACDD,EAAe,EACfD,EAAiBhG,EAASruD,WAC1B3O,GAAKhT,KAAK0wE,UAAWwF,GACrBphD,EAAGtgB,GAAKs8D,CACX,CACD,UAAAuF,CAAWvhD,EAAI34B,EAAK1D,GAChB,MAAMs3E,EAAS/vE,KAAK+vE,OACdz0E,EAASy0E,EAAOz0E,OACtB,IAAI20E,EAAYv0E,EAChB,GAAIJ,EAAQ,CACR,MAAMkxE,EAAY9yC,GAAcjhC,EAAQkhC,IAAK35B,KAAK0D,EAAG1D,KAAKkmB,OAQ1D,IAPA4O,EAAGpxB,EAAIwuE,GAAYlyE,KAAMvH,EAAQ69E,YAAa79E,GAC9Cq8B,EAAGtgB,GAAK/b,EAAQs4E,gBAChB50E,EAAIqwB,UAAYggD,EAAUhgD,UAAU/zB,EAAQ69E,aAC5Cn6E,EAAIswB,aAAe,SACnBwjD,EAAahiD,GAAOx1B,EAAQw3E,YAC5B9zE,EAAI2vB,UAAYrzB,EAAQ89E,YACxBp6E,EAAIslB,KAAOwuD,EAAW5oD,OAClB3rB,EAAI,EAAGA,EAAIJ,IAAUI,EACrBS,EAAI2wB,SAASijD,EAAOr0E,GAAI8wE,EAAU9oE,EAAEoxB,EAAGpxB,GAAIoxB,EAAGtgB,EAAIy7D,EAAWtuD,WAAa,GAC1EmT,EAAGtgB,GAAKy7D,EAAWtuD,WAAalpB,EAAQu4E,aAE/C,CACJ,CACD,cAAA9jB,CAAep4B,EAAI34B,EAAKq6E,EAAa/9E,GACjC,MAAM64E,OAAEA,EAAMF,OAAGA,GAAYpxE,MACvB0D,EAAEA,EAAC8Q,EAAGA,GAAOsgB,GACb5O,MAAEA,EAAKwC,OAAGA,GAAY8tD,GACtBxpD,QAAEA,EAAUG,SAAAA,aAAWF,EAAUC,YAAGA,GAAiBa,GAAct1B,EAAQswB,cACjF5sB,EAAI2vB,UAAYrzB,EAAQwoB,gBACxB9kB,EAAI0vB,YAAcpzB,EAAQyoB,YAC1B/kB,EAAIqpB,UAAY/sB,EAAQuxB,YACxB7tB,EAAIqtB,YACJrtB,EAAIytB,OAAOlmB,EAAIspB,EAASxY,GACT,QAAX48D,GACApxE,KAAK40E,UAAU9/C,EAAI34B,EAAKq6E,EAAa/9E,GAEzC0D,EAAI0tB,OAAOnmB,EAAIwiB,EAAQiH,EAAU3Y,GACjCrY,EAAIs6E,iBAAiB/yE,EAAIwiB,EAAO1R,EAAG9Q,EAAIwiB,EAAO1R,EAAI2Y,GACnC,WAAXikD,GAAkC,UAAXE,GACvBtxE,KAAK40E,UAAU9/C,EAAI34B,EAAKq6E,EAAa/9E,GAEzC0D,EAAI0tB,OAAOnmB,EAAIwiB,EAAO1R,EAAIkU,EAASwE,GACnC/wB,EAAIs6E,iBAAiB/yE,EAAIwiB,EAAO1R,EAAIkU,EAAQhlB,EAAIwiB,EAAQgH,EAAa1Y,EAAIkU,GAC1D,WAAX0oD,GACApxE,KAAK40E,UAAU9/C,EAAI34B,EAAKq6E,EAAa/9E,GAEzC0D,EAAI0tB,OAAOnmB,EAAIupB,EAAYzY,EAAIkU,GAC/BvsB,EAAIs6E,iBAAiB/yE,EAAG8Q,EAAIkU,EAAQhlB,EAAG8Q,EAAIkU,EAASuE,GACrC,WAAXmkD,GAAkC,SAAXE,GACvBtxE,KAAK40E,UAAU9/C,EAAI34B,EAAKq6E,EAAa/9E,GAEzC0D,EAAI0tB,OAAOnmB,EAAG8Q,EAAIwY,GAClB7wB,EAAIs6E,iBAAiB/yE,EAAG8Q,EAAG9Q,EAAIspB,EAASxY,GACxCrY,EAAIwtB,YACJxtB,EAAIkC,OACA5F,EAAQuxB,YAAc,GACtB7tB,EAAI8tB,QAEX,CACJ,sBAAAysD,CAAuBj+E,GAChB,MAAMmnB,EAAQ5f,KAAK4f,MACb2d,EAAQv9B,KAAKshC,YACbq1C,EAAQp5C,GAASA,EAAM75B,EACvBkzE,EAAQr5C,GAASA,EAAM/oB,EAC7B,GAAImiE,GAASC,EAAO,CAChB,MAAM79B,EAAWi2B,GAAYv2E,EAAQsgD,UAAU/mC,KAAKhS,KAAMA,KAAKm+B,QAASn+B,KAAKszE,gBAC7E,IAAKv6B,EACD,OAEJ,MAAM1jC,EAAOrV,KAAKuzE,MAAQ3D,GAAe5vE,KAAMvH,GACzCg8E,EAAkBl+E,OAAOP,OAAO,CAAE,EAAE+iD,EAAU/4C,KAAKuzE,OACnDzB,EAAYH,GAAmB/xD,EAAOnnB,EAASg8E,GAC/CtqD,EAAQ0nD,GAAmBp5E,EAASg8E,EAAiB3C,EAAWlyD,GAClE+2D,EAAMz2C,MAAQ/V,EAAMzmB,GAAKkzE,EAAM12C,MAAQ/V,EAAM3V,IAC7CxU,KAAKsxE,OAASQ,EAAUR,OACxBtxE,KAAKoxE,OAASU,EAAUV,OACxBpxE,KAAKkmB,MAAQ7Q,EAAK6Q,MAClBlmB,KAAK0oB,OAASrT,EAAKqT,OACnB1oB,KAAK2zE,OAAS56B,EAASr1C,EACvB1D,KAAK4zE,OAAS76B,EAASvkC,EACvBxU,KAAK+qC,qBAAqBxvC,OAAOyE,KAAMmqB,GAE9C,CACJ,CACJ,WAAA0sD,GACO,QAAS72E,KAAKqzE,OACjB,CACD,IAAAn1C,CAAK/hC,GACD,MAAM1D,EAAUuH,KAAKvH,QAAQu4B,WAAWhxB,KAAKuoB,cAC7C,IAAI8qD,EAAUrzE,KAAKqzE,QACnB,IAAKA,EACD,OAEJrzE,KAAK02E,uBAAuBj+E,GAC5B,MAAM+9E,EAAc,CAChBtwD,MAAOlmB,KAAKkmB,MACZwC,OAAQ1oB,KAAK0oB,QAEXoM,EAAK,CACPpxB,EAAG1D,KAAK0D,EACR8Q,EAAGxU,KAAKwU,GAEZ6+D,EAAUvyE,KAAKsV,IAAIi9D,GAAW,KAAO,EAAIA,EACzC,MAAMzuD,EAAUoJ,GAAUv1B,EAAQmsB,SAC5BkyD,EAAoB92E,KAAKmmB,MAAM7qB,QAAU0E,KAAKywE,WAAWn1E,QAAU0E,KAAK8vE,KAAKx0E,QAAU0E,KAAK0wE,UAAUp1E,QAAU0E,KAAK+vE,OAAOz0E,OAC9H7C,EAAQoqD,SAAWi0B,IACnB36E,EAAIyrB,OACJzrB,EAAI46E,YAAc1D,EAClBrzE,KAAKktD,eAAep4B,EAAI34B,EAAKq6E,EAAa/9E,GAC1C0hC,GAAsBh+B,EAAK1D,EAAQq0E,eACnCh4C,EAAGtgB,GAAKoQ,EAAQC,IAChB7kB,KAAK4tD,UAAU94B,EAAI34B,EAAK1D,GACxBuH,KAAK81E,SAAShhD,EAAI34B,EAAK1D,GACvBuH,KAAKq2E,WAAWvhD,EAAI34B,EAAK1D,GACzBgiC,GAAqBt+B,EAAK1D,EAAQq0E,eAClC3wE,EAAI4rB,UAEX,CACJ,iBAAAkzC,GACO,OAAOj7D,KAAKm+B,SAAW,EAC1B,CACJ,iBAAA+8B,CAAkBC,EAAgBgU,GAC3B,MAAM/T,EAAap7D,KAAKm+B,QAClB9Z,EAAS82C,EAAev9D,KAAI,EAAG6V,eAAetT,YAChD,MAAMua,EAAO1a,KAAK4f,MAAM8mB,eAAejzB,GACvC,IAAKiH,EACD,MAAM,IAAIzgB,MAAM,kCAAoCwZ,GAExD,MAAO,CACHA,eACA3b,QAAS4iB,EAAKviB,KAAKgI,GACnBA,QACH,IAEC6b,GAAW7I,GAAeioD,EAAY/2C,GACtC2yD,EAAkBh3E,KAAKi3E,iBAAiB5yD,EAAQ8qD,IAClDnzD,GAAWg7D,KACXh3E,KAAKm+B,QAAU9Z,EACfrkB,KAAKszE,eAAiBnE,EACtBnvE,KAAKk3E,qBAAsB,EAC3Bl3E,KAAKzE,QAAO,GAEnB,CACJ,WAAAqyE,CAAYpyE,EAAG8/D,EAAQI,GAAc,GAC9B,GAAIJ,GAAUt7D,KAAKk3E,oBACf,OAAO,EAEXl3E,KAAKk3E,qBAAsB,EAC3B,MAAMz+E,EAAUuH,KAAKvH,QACf2iE,EAAap7D,KAAKm+B,SAAW,GAC7B9Z,EAASrkB,KAAK67D,mBAAmBrgE,EAAG4/D,EAAYE,EAAQI,GACxDsb,EAAkBh3E,KAAKi3E,iBAAiB5yD,EAAQ7oB,GAChDwgB,EAAUs/C,IAAWnoD,GAAekR,EAAQ+2C,IAAe4b,EAWjE,OAVIh7D,IACAhc,KAAKm+B,QAAU9Z,GACX5rB,EAAQoqD,SAAWpqD,EAAQk8E,YAC3B30E,KAAKszE,eAAiB,CAClB5vE,EAAGlI,EAAEkI,EACL8Q,EAAGhZ,EAAEgZ,GAETxU,KAAKzE,QAAO,EAAM+/D,KAGnBt/C,CACV,CACJ,kBAAA6/C,CAAmBrgE,EAAG4/D,EAAYE,EAAQI,GACnC,MAAMjjE,EAAUuH,KAAKvH,QACrB,GAAe,aAAX+C,EAAE0E,KACF,MAAO,GAEX,IAAKw7D,EACD,OAAON,EAAWv9D,QAAQnC,GAAIsE,KAAK4f,MAAMznB,KAAKgpB,SAASzlB,EAAE+X,oBAA6FnW,IAA5E0C,KAAK4f,MAAM8mB,eAAehrC,EAAE+X,cAAc0vB,WAAWwF,UAAUjtC,EAAEyE,SAE/I,MAAMkkB,EAASrkB,KAAK4f,MAAMw6C,0BAA0B5+D,EAAG/C,EAAQypB,KAAMzpB,EAAS6iE,GAI9E,OAHI7iE,EAAQya,SACRmR,EAAOnR,UAEJmR,CACV,CACJ,gBAAA4yD,CAAiB5yD,EAAQ7oB,GAClB,MAAMm4E,OAAEA,EAASC,OAAAA,UAASn7E,GAAauH,KACjC+4C,EAAWi2B,GAAYv2E,EAAQsgD,UAAU/mC,KAAKhS,KAAMqkB,EAAQ7oB,GAClE,OAAoB,IAAbu9C,IAAuB46B,IAAW56B,EAASr1C,GAAKkwE,IAAW76B,EAASvkC,EAC9E,EAEL,IAAI2iE,GAAiB,CACjBvlE,GAAI,UACJs8D,SAAUkF,GACVpE,eACA,SAAAoI,CAAWx3D,EAAOukD,EAAO1rE,GACjBA,IACAmnB,EAAMiwD,QAAU,IAAIuD,GAAQ,CACxBxzD,QACAnnB,YAGX,EACD,YAAA6tD,CAAc1mC,EAAOukD,EAAO1rE,GACpBmnB,EAAMiwD,SACNjwD,EAAMiwD,QAAQxqC,WAAW5sC,EAEhC,EACD,KAAAouC,CAAOjnB,EAAOukD,EAAO1rE,GACbmnB,EAAMiwD,SACNjwD,EAAMiwD,QAAQxqC,WAAW5sC,EAEhC,EACD,SAAA4+E,CAAWz3D,GACP,MAAMiwD,EAAUjwD,EAAMiwD,QACtB,GAAIA,GAAWA,EAAQgH,cAAe,CAClC,MAAMhkE,EAAO,CACTg9D,WAEJ,IAGO,IAHHjwD,EAAMsoC,cAAc,oBAAqB,IACtCr1C,EACHo+C,YAAY,IAEZ,OAEJ4e,EAAQ3xC,KAAKte,EAAMzjB,KACnByjB,EAAMsoC,cAAc,mBAAoBr1C,EAC3C,CACJ,EACD,UAAAs7D,CAAYvuD,EAAO/M,GACf,GAAI+M,EAAMiwD,QAAS,CACf,MAAM32B,EAAmBrmC,EAAKyoD,OAC1B17C,EAAMiwD,QAAQjC,YAAY/6D,EAAKta,MAAO2gD,EAAkBrmC,EAAK6oD,eAC7D7oD,EAAKmJ,SAAU,EAEtB,CACJ,EACD2H,SAAU,CACNk/B,SAAS,EACT8xB,SAAU,KACV57B,SAAU,UACV93B,gBAAiB,kBACjBm0D,WAAY,OACZ9H,UAAW,CACP/8D,OAAQ,QAEZogE,aAAc,EACdC,kBAAmB,EACnBpsB,WAAY,OACZsuB,UAAW,OACXhC,YAAa,EACbd,SAAU,CAAE,EACZ+F,UAAW,OACXQ,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBd,WAAY,CACR1/D,OAAQ,QAEZ+lE,YAAa,OACb1xD,QAAS,EACT6sD,aAAc,EACdD,UAAW,EACXzoD,aAAc,EACduhD,UAAW,CAACnuE,EAAKivB,IAAOA,EAAK4kD,SAAS36D,KACtCk1D,SAAU,CAACpuE,EAAKivB,IAAOA,EAAK4kD,SAAS36D,KACrCqgE,mBAAoB,OACpB7E,eAAe,EACfl1B,WAAY,EACZz6B,YAAa,gBACb8I,YAAa,EACbhJ,UAAW,CACPiD,SAAU,IACVC,OAAQ,gBAEZM,WAAY,CACRhG,QAAS,CACLte,KAAM,SACNkkB,WAAY,CACR,IACA,IACA,QACA,SACA,SACA,WAGRivD,QAAS,CACLnvD,OAAQ,SACRD,SAAU,MAGlBjlB,UAAWqzE,IAEfxjB,cAAe,CACXmhB,SAAU,OACVC,WAAY,OACZ3C,UAAW,QAEfj0E,YAAa,CACTuqB,YAAc7rB,GAAgB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACjE+rB,YAAY,EACZ9kB,UAAW,CACP4kB,aAAa,EACbE,YAAY,GAEhB9C,UAAW,CACP+C,WAAW,GAEfS,WAAY,CACRT,UAAW,cAGnB+vC,uBAAwB,CACpB,gBAIJrxC,GAAuBlsB,OAAOu0C,OAAO,CACzCvxC,UAAW,KACX+9E,OAAQrT,GACRsT,WAAY/S,GACZgT,OAAQr3E,GACRwqE,OAAQsD,GACRwJ,SAAU1I,GACVT,MAAOK,GACPyE,QAAS+D,KAeT,SAASO,GAAepvC,EAAQgC,EAAKnqC,EAAOw3E,GACxC,MAAM30B,EAAQ1a,EAAO1uC,QAAQ0wC,GAC7B,IAAe,IAAX0Y,EACA,MAfY,EAAC1a,EAAQgC,EAAKnqC,EAAOw3E,KAClB,iBAARrtC,GACPnqC,EAAQmoC,EAAOjuC,KAAKiwC,GAAO,EAC3BqtC,EAAY9P,QAAQ,CAChB1nE,QACAypC,MAAOU,KAEJ1zB,MAAM0zB,KACbnqC,EAAQ,MAELA,GAKIy3E,CAAYtvC,EAAQgC,EAAKnqC,EAAOw3E,GAG3C,OAAO30B,IADM1a,EAAOuvC,YAAYvtC,GACRnqC,EAAQ6iD,CACpC,CAEA,SAAS80B,GAAkBh/E,GACvB,MAAMwvC,EAAStoC,KAAKuoC,YACpB,OAAIzvC,GAAS,GAAKA,EAAQwvC,EAAOhtC,OACtBgtC,EAAOxvC,GAEXA,CACX,CA+FA,SAASi/E,GAAgBC,EAAmBC,GACxC,MAAMt4D,EAAQ,IAERyF,OAAEA,EAAM8mC,KAAGA,EAAOlrD,IAAAA,EAAMD,IAAAA,EAAMm3E,UAAAA,QAAYp9D,EAAKq9D,SAAGA,EAAWC,UAAAA,gBAAYC,GAAmBL,EAC5FM,EAAOpsB,GAAQ,EACfqsB,EAAYJ,EAAW,GACrBn3E,IAAKw3E,EAAOz3E,IAAK03E,GAAUR,EAC7B98D,GAActJ,GAAc7Q,GAC5Boa,GAAcvJ,GAAc9Q,GAC5B23E,GAAgB7mE,GAAciJ,GAC9B69D,GAAcF,EAAOD,IAASJ,EAAY,GAChD,IACI/4C,EAAQu5C,EAASC,EAASC,EAD1BrmC,EAAUp8B,IAASoiE,EAAOD,GAAQD,EAAYD,GAAQA,EAE1D,GAAI7lC,EAXgB,QAWUt3B,IAAeC,EACzC,MAAO,CACH,CACItiB,MAAO0/E,GAEX,CACI1/E,MAAO2/E,IAInBK,EAAYh4E,KAAKoiD,KAAKu1B,EAAOhmC,GAAW3xC,KAAK2V,MAAM+hE,EAAO/lC,GACtDqmC,EAAYP,IACZ9lC,EAAUp8B,GAAQyiE,EAAYrmC,EAAU8lC,EAAYD,GAAQA,GAE3DzmE,GAAcqmE,KACf74C,EAASv+B,KAAKoO,IAAI,GAAIgpE,GACtBzlC,EAAU3xC,KAAKoiD,KAAKzQ,EAAUpT,GAAUA,GAE7B,UAAXja,GACAwzD,EAAU93E,KAAK2V,MAAM+hE,EAAO/lC,GAAWA,EACvComC,EAAU/3E,KAAKoiD,KAAKu1B,EAAOhmC,GAAWA,IAEtCmmC,EAAUJ,EACVK,EAAUJ,GAEVt9D,GAAcC,GAAc8wC,GD/+SpC,SAAqBxoD,EAAGyS,GACpB,MAAM4iE,EAAUj4E,KAAKJ,MAAMgD,GAC3B,OAAOq1E,EAAU5iE,GAAWzS,GAAKq1E,EAAU5iE,GAAWzS,CAC1D,CC4+S4Cs1E,EAAaj4E,EAAMC,GAAOkrD,EAAMzZ,EAAU,MAC9EqmC,EAAYh4E,KAAKJ,MAAMI,KAAKE,KAAKD,EAAMC,GAAOyxC,EAAS0lC,IACvD1lC,GAAW1xC,EAAMC,GAAO83E,EACxBF,EAAU53E,EACV63E,EAAU93E,GACH23E,GACPE,EAAUz9D,EAAana,EAAM43E,EAC7BC,EAAUz9D,EAAara,EAAM83E,EAC7BC,EAAYh+D,EAAQ,EACpB23B,GAAWomC,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWnmC,EAE9BqmC,EADA5iE,GAAa4iE,EAAWh4E,KAAKJ,MAAMo4E,GAAYrmC,EAAU,KAC7C3xC,KAAKJ,MAAMo4E,GAEXh4E,KAAKoiD,KAAK41B,IAG9B,MAAMG,EAAgBn4E,KAAKC,IAAIqW,GAAeq7B,GAAUr7B,GAAewhE,IACvEv5C,EAASv+B,KAAKoO,IAAI,GAAI2C,GAAcqmE,GAAae,EAAgBf,GACjEU,EAAU93E,KAAKJ,MAAMk4E,EAAUv5C,GAAUA,EACzCw5C,EAAU/3E,KAAKJ,MAAMm4E,EAAUx5C,GAAUA,EACzC,IAAI7wB,EAAI,EAgBR,IAfI2M,IACIk9D,GAAiBO,IAAY53E,GAC7B2e,EAAMtlB,KAAK,CACPvB,MAAOkI,IAEP43E,EAAU53E,GACVwN,IAEA0H,GAAapV,KAAKJ,OAAOk4E,EAAUpqE,EAAIikC,GAAWpT,GAAUA,EAAQr+B,EAAKk4E,GAAkBl4E,EAAK23E,EAAYX,KAC5GxpE,KAEGoqE,EAAU53E,GACjBwN,KAGFA,EAAIsqE,IAAatqE,EAAE,CACrB,MAAMkR,EAAY5e,KAAKJ,OAAOk4E,EAAUpqE,EAAIikC,GAAWpT,GAAUA,EACjE,GAAIjkB,GAAcsE,EAAY3e,EAC1B,MAEJ4e,EAAMtlB,KAAK,CACPvB,MAAO4mB,GAEd,CAcD,OAbItE,GAAci9D,GAAiBQ,IAAY93E,EACvC4e,EAAMrkB,QAAU4a,GAAayJ,EAAMA,EAAMrkB,OAAS,GAAGxC,MAAOiI,EAAKm4E,GAAkBn4E,EAAK43E,EAAYX,IACpGr4D,EAAMA,EAAMrkB,OAAS,GAAGxC,MAAQiI,EAEhC4e,EAAMtlB,KAAK,CACPvB,MAAOiI,IAGPqa,GAAcy9D,IAAY93E,GAClC4e,EAAMtlB,KAAK,CACPvB,MAAO+/E,IAGRl5D,CACX,CACA,SAASu5D,GAAkBpgF,EAAO6/E,GAAYhqC,WAAEA,EAAUvoB,YAAGA,IACzD,MAAMiD,EAAMrS,GAAUoP,GAChBhX,GAASu/B,EAAa7tC,KAAKqb,IAAIkN,GAAOvoB,KAAKsc,IAAIiM,KAAS,KACxD/tB,EAAS,IAAOq9E,GAAc,GAAK7/E,GAAOwC,OAChD,OAAOwF,KAAKE,IAAI23E,EAAavpE,EAAO9T,EACxC,CACA,MAAM69E,WAAwBz0B,GAC1B,WAAA50C,CAAY2vB,GACRiQ,MAAMjQ,GACLz/B,KAAKqY,WAAQ/a,EACb0C,KAAKsY,SAAMhb,EACX0C,KAAKo5E,iBAAc97E,EACnB0C,KAAKq5E,eAAY/7E,EAClB0C,KAAKs5E,YAAc,CACtB,CACD,KAAA1mD,CAAM0X,EAAKnqC,GACP,OAAI0R,GAAcy4B,KAGE,iBAARA,GAAoBA,aAAel4B,UAAYC,UAAUi4B,GAF1D,MAKHA,CACX,CACD,sBAAAivC,GACI,MAAMp0D,YAAEA,GAAiBnlB,KAAKvH,SACxB0iB,WAAEA,EAAaC,WAAAA,GAAgBpb,KAAKqb,gBAC1C,IAAIra,IAAEA,EAAGD,IAAGA,GAASf,KACrB,MAAMw5E,EAAU74E,GAAIK,EAAMma,EAAana,EAAML,EACvC84E,EAAU94E,GAAII,EAAMqa,EAAara,EAAMJ,EAC7C,GAAIwkB,EAAa,CACb,MAAMu0D,EAAUzjE,GAAKjV,GACf24E,EAAU1jE,GAAKlV,GACjB24E,EAAU,GAAKC,EAAU,EACzBF,EAAO,GACAC,EAAU,GAAKC,EAAU,GAChCH,EAAO,EAEd,CACD,GAAIx4E,IAAQD,EAAK,CACb,IAAImkB,EAAiB,IAARnkB,EAAY,EAAID,KAAKsV,IAAU,IAANrV,GACtC04E,EAAO14E,EAAMmkB,GACRC,GACDq0D,EAAOx4E,EAAMkkB,EAEpB,CACDllB,KAAKgB,IAAMA,EACXhB,KAAKe,IAAMA,CACd,CACD,YAAA64E,GACI,MAAMz3B,EAAWniD,KAAKvH,QAAQknB,MAC9B,IACIw4D,GADAx1B,cAAEA,EAAak3B,SAAGA,GAAc13B,EAepC,OAbI03B,GACA1B,EAAWr3E,KAAKoiD,KAAKljD,KAAKe,IAAM84E,GAAY/4E,KAAK2V,MAAMzW,KAAKgB,IAAM64E,GAAY,EAC1E1B,EAAW,MACXhqD,QAAQC,KAAK,UAAUpuB,KAAK4R,sBAAsBioE,mCAA0C1B,8BAC5FA,EAAW,OAGfA,EAAWn4E,KAAK85E,mBAChBn3B,EAAgBA,GAAiB,IAEjCA,IACAw1B,EAAWr3E,KAAKE,IAAI2hD,EAAew1B,IAEhCA,CACV,CACJ,gBAAA2B,GACO,OAAO1nE,OAAOuD,iBACjB,CACD,UAAAuxC,GACI,MAAM97B,EAAOprB,KAAKvH,QACZ0pD,EAAW/2B,EAAKzL,MACtB,IAAIw4D,EAAWn4E,KAAK45E,eACpBzB,EAAWr3E,KAAKC,IAAI,EAAGo3E,GACvB,MAcMx4D,EAAQo4D,GAdkB,CAC5BI,WACA/yD,OAAQgG,EAAKhG,OACbpkB,IAAKoqB,EAAKpqB,IACVD,IAAKqqB,EAAKrqB,IACVm3E,UAAW/1B,EAAS+1B,UACpBhsB,KAAM/J,EAAS03B,SACf/+D,MAAOqnC,EAASrnC,MAChBs9D,UAAWp4E,KAAKouD,aAChBzf,WAAY3uC,KAAK6vC,eACjBzpB,YAAa+7B,EAAS/7B,aAAe,EACrCiyD,eAA0C,IAA3Bl2B,EAASk2B,eAEVr4E,KAAKklD,QAAUllD,MAajC,MAXoB,UAAhBorB,EAAKhG,QACLvO,GAAmB8I,EAAO3f,KAAM,SAEhCorB,EAAKlY,SACLyM,EAAMzM,UACNlT,KAAKqY,MAAQrY,KAAKe,IAClBf,KAAKsY,IAAMtY,KAAKgB,MAEhBhB,KAAKqY,MAAQrY,KAAKgB,IAClBhB,KAAKsY,IAAMtY,KAAKe,KAEb4e,CACV,CACJ,SAAAmhB,GACO,MAAMnhB,EAAQ3f,KAAK2f,MACnB,IAAItH,EAAQrY,KAAKgB,IACbsX,EAAMtY,KAAKe,IAEf,GADA2uC,MAAM5O,YACF9gC,KAAKvH,QAAQysB,QAAUvF,EAAMrkB,OAAQ,CACrC,MAAM4pB,GAAU5M,EAAMD,GAASvX,KAAKC,IAAI4e,EAAMrkB,OAAS,EAAG,GAAK,EAC/D+c,GAAS6M,EACT5M,GAAO4M,CACV,CACDllB,KAAKo5E,YAAc/gE,EACnBrY,KAAKq5E,UAAY/gE,EACjBtY,KAAKs5E,YAAchhE,EAAMD,CAC5B,CACD,gBAAAwxB,CAAiB/wC,GACb,OAAO6lB,GAAa7lB,EAAOkH,KAAK4f,MAAMnnB,QAAQomB,OAAQ7e,KAAKvH,QAAQknB,MAAML,OAC5E,EAGL,MAAMy6D,WAAoBZ,GACtB70C,UAAY,SACfA,gBAAkB,CACX3kB,MAAO,CACHhkB,SAAU8kB,GAAMlB,WAAWE,UAGnC,mBAAAmnC,GACI,MAAM5lD,IAAEA,EAAGD,IAAGA,GAASf,KAAKgpC,WAAU,GACtChpC,KAAKgB,IAAMmR,GAAenR,GAAOA,EAAM,EACvChB,KAAKe,IAAMoR,GAAepR,GAAOA,EAAM,EACvCf,KAAKu5E,wBACR,CACJ,gBAAAO,GACO,MAAMnrC,EAAa3uC,KAAK6vC,eAClBv0C,EAASqzC,EAAa3uC,KAAKkmB,MAAQlmB,KAAK0oB,OACxCtC,EAAcpP,GAAUhX,KAAKvH,QAAQknB,MAAMyG,aAC3ChX,GAASu/B,EAAa7tC,KAAKqb,IAAIiK,GAAetlB,KAAKsc,IAAIgJ,KAAiB,KACxE8jC,EAAWlqD,KAAKuqD,wBAAwB,GAC9C,OAAOzpD,KAAKoiD,KAAK5nD,EAASwF,KAAKE,IAAI,GAAIkpD,EAASvoC,WAAavS,GAChE,CACD,gBAAAkM,CAAiBxiB,GACb,OAAiB,OAAVA,EAAiBiwC,IAAM/oC,KAAKsxC,oBAAoBx4C,EAAQkH,KAAKo5E,aAAep5E,KAAKs5E,YAC3F,CACD,gBAAA9nC,CAAiBtpB,GACb,OAAOloB,KAAKo5E,YAAcp5E,KAAK2qD,mBAAmBziC,GAASloB,KAAKs5E,WACnE,EAGL,MAAMU,GAAcr5E,GAAIG,KAAK2V,MAAMT,GAAMrV,IACnCs5E,GAAiB,CAACt5E,EAAGjD,IAAIoD,KAAKoO,IAAI,GAAI8qE,GAAWr5E,GAAKjD,GAC5D,SAASw8E,GAAQC,GAEb,OAAkB,IADHA,EAAUr5E,KAAKoO,IAAI,GAAI8qE,GAAWG,GAErD,CACA,SAASC,GAAMp5E,EAAKD,EAAKs5E,GACrB,MAAMC,EAAYx5E,KAAKoO,IAAI,GAAImrE,GACzBhiE,EAAQvX,KAAK2V,MAAMzV,EAAMs5E,GAE/B,OADYx5E,KAAKoiD,KAAKniD,EAAMu5E,GACfjiE,CACjB,CAYC,SAASkiE,GAAcvC,GAAmBh3E,IAAEA,EAAGD,IAAGA,IAC/CC,EAAMsR,GAAgB0lE,EAAkBh3E,IAAKA,GAC7C,MAAM2e,EAAQ,GACR66D,EAASR,GAAWh5E,GAC1B,IAAIy5E,EAfR,SAAkBz5E,EAAKD,GAEnB,IAAIs5E,EAAWL,GADDj5E,EAAMC,GAEpB,KAAMo5E,GAAMp5E,EAAKD,EAAKs5E,GAAY,IAC9BA,IAEJ,KAAMD,GAAMp5E,EAAKD,EAAKs5E,GAAY,IAC9BA,IAEJ,OAAOv5E,KAAKE,IAAIq5E,EAAUL,GAAWh5E,GACzC,CAKc05E,CAAS15E,EAAKD,GACpBm3E,EAAYuC,EAAM,EAAI35E,KAAKoO,IAAI,GAAIpO,KAAKsV,IAAIqkE,IAAQ,EACxD,MAAMZ,EAAW/4E,KAAKoO,IAAI,GAAIurE,GACxBnzC,EAAOkzC,EAASC,EAAM35E,KAAKoO,IAAI,GAAIsrE,GAAU,EAC7CniE,EAAQvX,KAAKJ,OAAOM,EAAMsmC,GAAQ4wC,GAAaA,EAC/ChzD,EAASpkB,KAAK2V,OAAOzV,EAAMsmC,GAAQuyC,EAAW,IAAMA,EAAW,GACrE,IAAIt5D,EAAczf,KAAK2V,OAAO4B,EAAQ6M,GAAUpkB,KAAKoO,IAAI,GAAIurE,IACzD3hF,EAAQwZ,GAAgB0lE,EAAkBh3E,IAAKF,KAAKJ,OAAO4mC,EAAOpiB,EAAS3E,EAAczf,KAAKoO,IAAI,GAAIurE,IAAQvC,GAAaA,GAC/H,KAAMp/E,EAAQiI,GACV4e,EAAMtlB,KAAK,CACPvB,QACA+tB,MAAOqzD,GAAQphF,GACfynB,gBAEAA,GAAe,GACfA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEAA,GAAe,KACfk6D,IACAl6D,EAAc,EACd23D,EAAYuC,GAAO,EAAI,EAAIvC,GAE/Bp/E,EAAQgI,KAAKJ,OAAO4mC,EAAOpiB,EAAS3E,EAAczf,KAAKoO,IAAI,GAAIurE,IAAQvC,GAAaA,EAExF,MAAMyC,EAAWroE,GAAgB0lE,EAAkBj3E,IAAKjI,GAMxD,OALA6mB,EAAMtlB,KAAK,CACPvB,MAAO6hF,EACP9zD,MAAOqzD,GAAQS,GACfp6D,gBAEGZ,CACX,CACA,MAAMi7D,WAAyBl2B,GAC3BpgB,UAAY,cACfA,gBAAkB,CACX3kB,MAAO,CACHhkB,SAAU8kB,GAAMlB,WAAWc,YAC3BwG,MAAO,CACHg8B,SAAS,KAIrB,WAAA/yC,CAAY2vB,GACRiQ,MAAMjQ,GACLz/B,KAAKqY,WAAQ/a,EACb0C,KAAKsY,SAAMhb,EACX0C,KAAKo5E,iBAAc97E,EACpB0C,KAAKs5E,YAAc,CACtB,CACD,KAAA1mD,CAAM0X,EAAKnqC,GACP,MAAMrH,EAAQqgF,GAAgBrnE,UAAU8gB,MAAM7f,MAAM/S,KAAM,CACtDsqC,EACAnqC,IAEJ,GAAc,IAAVrH,EAIJ,OAAOqZ,GAAerZ,IAAUA,EAAQ,EAAIA,EAAQ,KAHhDkH,KAAK66E,OAAQ,CAIpB,CACD,mBAAAj0B,GACI,MAAM5lD,IAAEA,EAAGD,IAAGA,GAASf,KAAKgpC,WAAU,GACtChpC,KAAKgB,IAAMmR,GAAenR,GAAOF,KAAKC,IAAI,EAAGC,GAAO,KACpDhB,KAAKe,IAAMoR,GAAepR,GAAOD,KAAKC,IAAI,EAAGA,GAAO,KAChDf,KAAKvH,QAAQ0sB,cACbnlB,KAAK66E,OAAQ,GAEb76E,KAAK66E,OAAS76E,KAAKgB,MAAQhB,KAAK0lD,gBAAkBvzC,GAAenS,KAAKwlD,YACtExlD,KAAKgB,IAAMA,IAAQi5E,GAAej6E,KAAKgB,IAAK,GAAKi5E,GAAej6E,KAAKgB,KAAM,GAAKi5E,GAAej6E,KAAKgB,IAAK,IAE7GhB,KAAKu5E,wBACR,CACD,sBAAAA,GACI,MAAMp+D,WAAEA,EAAaC,WAAAA,GAAgBpb,KAAKqb,gBAC1C,IAAIra,EAAMhB,KAAKgB,IACXD,EAAMf,KAAKe,IACf,MAAMy4E,EAAU74E,GAAIK,EAAMma,EAAana,EAAML,EACvC84E,EAAU94E,GAAII,EAAMqa,EAAara,EAAMJ,EACzCK,IAAQD,IACJC,GAAO,GACPw4E,EAAO,GACPC,EAAO,MAEPD,EAAOS,GAAej5E,GAAM,IAC5By4E,EAAOQ,GAAel5E,EAAK,MAG/BC,GAAO,GACPw4E,EAAOS,GAAel5E,GAAM,IAE5BA,GAAO,GACP04E,EAAOQ,GAAej5E,EAAK,IAE/BhB,KAAKgB,IAAMA,EACXhB,KAAKe,IAAMA,CACd,CACD,UAAAmmD,GACI,MAAM97B,EAAOprB,KAAKvH,QAKZknB,EAAQ46D,GAJY,CACtBv5E,IAAKhB,KAAKwlD,SACVzkD,IAAKf,KAAKulD,UAEiCvlD,MAY/C,MAXoB,UAAhBorB,EAAKhG,QACLvO,GAAmB8I,EAAO3f,KAAM,SAEhCorB,EAAKlY,SACLyM,EAAMzM,UACNlT,KAAKqY,MAAQrY,KAAKe,IAClBf,KAAKsY,IAAMtY,KAAKgB,MAEhBhB,KAAKqY,MAAQrY,KAAKgB,IAClBhB,KAAKsY,IAAMtY,KAAKe,KAEb4e,CACV,CACJ,gBAAAkqB,CAAiB/wC,GACV,YAAiBwE,IAAVxE,EAAsB,IAAM6lB,GAAa7lB,EAAOkH,KAAK4f,MAAMnnB,QAAQomB,OAAQ7e,KAAKvH,QAAQknB,MAAML,OACxG,CACJ,SAAAwhB,GACO,MAAMzoB,EAAQrY,KAAKgB,IACnB0uC,MAAM5O,YACN9gC,KAAKo5E,YAAcpjE,GAAMqC,GACzBrY,KAAKs5E,YAActjE,GAAMhW,KAAKe,KAAOiV,GAAMqC,EAC9C,CACD,gBAAAiD,CAAiBxiB,GAIb,YAHcwE,IAAVxE,GAAiC,IAAVA,IACvBA,EAAQkH,KAAKgB,KAEH,OAAVlI,GAAkB8d,MAAM9d,GACjBiwC,IAEJ/oC,KAAKsxC,mBAAmBx4C,IAAUkH,KAAKgB,IAAM,GAAKgV,GAAMld,GAASkH,KAAKo5E,aAAep5E,KAAKs5E,YACpG,CACD,gBAAA9nC,CAAiBtpB,GACb,MAAMwiC,EAAU1qD,KAAK2qD,mBAAmBziC,GACxC,OAAOpnB,KAAKoO,IAAI,GAAIlP,KAAKo5E,YAAc1uB,EAAU1qD,KAAKs5E,YACzD,EAGL,SAASwB,GAAsB1vD,GAC3B,MAAM+2B,EAAW/2B,EAAKzL,MACtB,GAAIwiC,EAASl9B,SAAWmG,EAAKnG,QAAS,CAClC,MAAML,EAAUoJ,GAAUm0B,EAASl7B,iBACnC,OAAOzU,GAAe2vC,EAAS1gC,MAAQ0gC,EAAS1gC,KAAKpM,KAAMsO,GAASlC,KAAKpM,MAAQuP,EAAQ8D,MAC5F,CACD,OAAO,CACX,CAUA,SAASqyD,GAAgBnjE,EAAO4e,EAAKnhB,EAAMrU,EAAKD,GAC5C,OAAI6W,IAAU5W,GAAO4W,IAAU7W,EACpB,CACHsX,MAAOme,EAAMnhB,EAAO,EACpBiD,IAAKke,EAAMnhB,EAAO,GAEfuC,EAAQ5W,GAAO4W,EAAQ7W,EACvB,CACHsX,MAAOme,EAAMnhB,EACbiD,IAAKke,GAGN,CACHne,MAAOme,EACPle,IAAKke,EAAMnhB,EAEnB,CACC,SAAS2lE,GAAmBr4D,GACzB,MAAMosB,EAAO,CACTnvC,EAAG+iB,EAAMqC,KAAOrC,EAAM4rD,SAASvpD,KAC/B9iB,EAAGygB,EAAMmC,MAAQnC,EAAM4rD,SAASzpD,MAChCjU,EAAG8R,EAAMkC,IAAMlC,EAAM4rD,SAAS1pD,IAC9B7tB,EAAG2rB,EAAMoC,OAASpC,EAAM4rD,SAASxpD,QAE/Bk2D,EAAS1kF,OAAOP,OAAO,CAAE,EAAE+4C,GAC3B0Z,EAAa,GACb7jC,EAAU,GACVs2D,EAAav4D,EAAMw4D,aAAa7/E,OAChC8/E,EAAiBz4D,EAAMlqB,QAAQq9C,YAC/BulC,EAAkBD,EAAeE,kBAAoB/lE,GAAK2lE,EAAa,EAC7E,IAAI,IAAIx/E,EAAI,EAAGA,EAAIw/E,EAAYx/E,IAAI,CAC/B,MAAM0vB,EAAOgwD,EAAepqD,WAAWrO,EAAM44D,qBAAqB7/E,IAClEkpB,EAAQlpB,GAAK0vB,EAAKxG,QAClB,MAAMgzB,EAAgBj1B,EAAM64D,iBAAiB9/E,EAAGinB,EAAM84D,YAAc72D,EAAQlpB,GAAI2/E,GAC1EK,EAASztD,GAAO7C,EAAK3J,MACrB+sD,GA5CYryE,EA4CgBwmB,EAAMxmB,IA5CjBslB,EA4CsBi6D,EA3CjD9xC,EAAQ5mC,GADyB4mC,EA4CwBjnB,EAAMw4D,aAAaz/E,IA3CnDkuC,EAAQ,CAC7BA,GAEG,CACHjnC,EAAG6kB,GAAarrB,EAAKslB,EAAK4F,OAAQuiB,GAClC/oC,EAAG+oC,EAAMtuC,OAASmmB,EAAKE,aAuCvB8mC,EAAW/sD,GAAK8yE,EAChB,MAAMplB,EAAejxC,GAAgBwK,EAAM4zB,cAAc76C,GAAK2/E,GACxDzjE,EAAQ9W,KAAKJ,MAAMwW,GAAUkyC,IAGnCuyB,GAAaV,EAAQlsC,EAAMqa,EAFX2xB,GAAgBnjE,EAAOggC,EAAcl0C,EAAG8qE,EAAS7rE,EAAG,EAAG,KACvDo4E,GAAgBnjE,EAAOggC,EAAcpjC,EAAGg6D,EAAS3tE,EAAG,GAAI,KAE3E,CAnDL,IAA0B1E,EAAKslB,EAAMmoB,EAoDjCjnB,EAAMi5D,eAAe7sC,EAAKnvC,EAAIq7E,EAAOr7E,EAAGq7E,EAAO/4E,EAAI6sC,EAAK7sC,EAAG6sC,EAAKl+B,EAAIoqE,EAAOpqE,EAAGoqE,EAAOjkF,EAAI+3C,EAAK/3C,GAC9F2rB,EAAMk5D,iBA6DV,SAA8Bl5D,EAAO8lC,EAAY7jC,GAC7C,MAAM7K,EAAQ,GACRmhE,EAAav4D,EAAMw4D,aAAa7/E,OAChC8vB,EAAOzI,EAAMlqB,SACb6iF,kBAAEA,EAAoBr2D,QAAAA,GAAamG,EAAK0qB,YACxCgmC,EAAW,CACbC,MAAOjB,GAAsB1vD,GAAQ,EACrCiwD,gBAAiBC,EAAoB/lE,GAAK2lE,EAAa,GAE3D,IAAI9wD,EACJ,IAAI,IAAI1uB,EAAI,EAAGA,EAAIw/E,EAAYx/E,IAAI,CAC/BogF,EAASl3D,QAAUA,EAAQlpB,GAC3BogF,EAASzmE,KAAOozC,EAAW/sD,GAC3B,MAAM4Z,EAAO0mE,GAAqBr5D,EAAOjnB,EAAGogF,GAC5C/hE,EAAM1f,KAAKib,GACK,SAAZ2P,IACA3P,EAAKmP,QAAUw3D,GAAgB3mE,EAAM8U,GACjC9U,EAAKmP,UACL2F,EAAO9U,GAGlB,CACD,OAAOyE,CACX,CApF6BmiE,CAAqBv5D,EAAO8lC,EAAY7jC,EACrE,CACA,SAAS+2D,GAAaV,EAAQlsC,EAAMn3B,EAAOukE,EAASC,GAChD,MAAMjgE,EAAMrb,KAAKsV,IAAItV,KAAKqb,IAAIvE,IACxBwF,EAAMtc,KAAKsV,IAAItV,KAAKsc,IAAIxF,IAC9B,IAAIlU,EAAI,EACJ8Q,EAAI,EACJ2nE,EAAQ9jE,MAAQ02B,EAAKnvC,GACrB8D,GAAKqrC,EAAKnvC,EAAIu8E,EAAQ9jE,OAAS8D,EAC/B8+D,EAAOr7E,EAAIkB,KAAKE,IAAIi6E,EAAOr7E,EAAGmvC,EAAKnvC,EAAI8D,IAChCy4E,EAAQ7jE,IAAMy2B,EAAK7sC,IAC1BwB,GAAKy4E,EAAQ7jE,IAAMy2B,EAAK7sC,GAAKia,EAC7B8+D,EAAO/4E,EAAIpB,KAAKC,IAAIk6E,EAAO/4E,EAAG6sC,EAAK7sC,EAAIwB,IAEvC04E,EAAQ/jE,MAAQ02B,EAAKl+B,GACrB2D,GAAKu6B,EAAKl+B,EAAIurE,EAAQ/jE,OAAS+E,EAC/B69D,EAAOpqE,EAAI/P,KAAKE,IAAIi6E,EAAOpqE,EAAGk+B,EAAKl+B,EAAI2D,IAChC4nE,EAAQ9jE,IAAMy2B,EAAK/3C,IAC1Bwd,GAAK4nE,EAAQ9jE,IAAMy2B,EAAK/3C,GAAKomB,EAC7B69D,EAAOjkF,EAAI8J,KAAKC,IAAIk6E,EAAOjkF,EAAG+3C,EAAK/3C,EAAIwd,GAE/C,CACA,SAASwnE,GAAqBr5D,EAAOxiB,EAAO27E,GACxC,MAAMO,EAAgB15D,EAAM84D,aACtBM,MAAEA,EAAKV,gBAAGA,EAAez2D,QAAGA,EAAOvP,KAAGA,GAAUymE,EAChDQ,EAAqB35D,EAAM64D,iBAAiBr7E,EAAOk8E,EAAgBN,EAAQn3D,EAASy2D,GACpFzjE,EAAQ9W,KAAKJ,MAAMwW,GAAUiB,GAAgBmkE,EAAmB1kE,MAAQ/B,MACxErB,EA0EV,SAAmBA,EAAG3T,EAAG+W,GACP,KAAVA,GAA0B,MAAVA,EAChBpD,GAAK3T,EAAI,GACF+W,EAAQ,KAAOA,EAAQ,MAC9BpD,GAAK3T,GAET,OAAO2T,CACX,CAjFc+nE,CAAUD,EAAmB9nE,EAAGa,EAAKxU,EAAG+W,GAC5C4U,EAyDV,SAA8B5U,GAC1B,GAAc,IAAVA,GAAyB,MAAVA,EACf,MAAO,SACJ,GAAIA,EAAQ,IACf,MAAO,OAEX,MAAO,OACX,CAhEsB4kE,CAAqB5kE,GACjCoN,EAgEV,SAA0BthB,EAAGf,EAAG4X,GACd,UAAVA,EACA7W,GAAKf,EACY,WAAV4X,IACP7W,GAAKf,EAAI,GAEb,OAAOe,CACX,CAvEiB+4E,CAAiBH,EAAmB54E,EAAG2R,EAAK1S,EAAG6pB,GAC5D,MAAO,CACH/H,SAAS,EACT/gB,EAAG44E,EAAmB54E,EACtB8Q,IACAgY,YACAxH,OACAH,IAAKrQ,EACLsQ,MAAOE,EAAO3P,EAAK1S,EACnBoiB,OAAQvQ,EAAIa,EAAKxU,EAEzB,CACA,SAASo7E,GAAgB3mE,EAAM8U,GAC3B,IAAKA,EACD,OAAO,EAEX,MAAMpF,KAAEA,EAAIH,IAAGA,EAAGC,MAAGA,EAAKC,OAAGA,GAAYzP,EAczC,QAbqB4U,GAAe,CAChCxmB,EAAGshB,EACHxQ,EAAGqQ,GACJuF,IAASF,GAAe,CACvBxmB,EAAGshB,EACHxQ,EAAGuQ,GACJqF,IAASF,GAAe,CACvBxmB,EAAGohB,EACHtQ,EAAGqQ,GACJuF,IAASF,GAAe,CACvBxmB,EAAGohB,EACHtQ,EAAGuQ,GACJqF,GAEP,CAiDA,SAASsyD,GAAkBvgF,EAAKivB,EAAM9V,GAClC,MAAM0P,KAAEA,EAAIH,IAAGA,EAAGC,MAAGA,EAAKC,OAAGA,GAAYzP,GACnC0R,cAAEA,GAAmBoE,EAC3B,IAAKvZ,GAAcmV,GAAgB,CAC/B,MAAMq1C,EAAetuC,GAAc3C,EAAKixC,cAClCz3C,EAAUoJ,GAAU5C,EAAKnE,iBAC/B9qB,EAAI2vB,UAAY9E,EAChB,MAAM21D,EAAe33D,EAAOJ,EAAQI,KAC9B43D,EAAc/3D,EAAMD,EAAQC,IAC5Bg4D,EAAgB/3D,EAAQE,EAAOJ,EAAQsB,MACvC42D,EAAiB/3D,EAASF,EAAMD,EAAQ8D,OAC1CnyB,OAAOipB,OAAO68C,GAAc1K,MAAMhxD,GAAU,IAANA,KACtCxE,EAAIqtB,YACJuD,GAAmB5wB,EAAK,CACpBuH,EAAGi5E,EACHnoE,EAAGooE,EACHj6E,EAAGk6E,EACHh8E,EAAGi8E,EACH1zD,OAAQizC,IAEZlgE,EAAIkC,QAEJlC,EAAI+vB,SAASywD,EAAcC,EAAaC,EAAeC,EAE9D,CACL,CAmBA,SAASC,GAAep6D,EAAOyG,EAAQysB,EAAU28B,GAC7C,MAAMr2E,IAAEA,GAASwmB,EACjB,GAAIkzB,EACA15C,EAAIutB,IAAI/G,EAAMyzB,QAASzzB,EAAM0zB,QAASjtB,EAAQ,EAAG5T,QAC9C,CACH,IAAIoiC,EAAgBj1B,EAAM64D,iBAAiB,EAAGpyD,GAC9CjtB,EAAIytB,OAAOguB,EAAcl0C,EAAGk0C,EAAcpjC,GAC1C,IAAI,IAAI9Y,EAAI,EAAGA,EAAI82E,EAAY92E,IAC3Bk8C,EAAgBj1B,EAAM64D,iBAAiB9/E,EAAG0tB,GAC1CjtB,EAAI0tB,OAAO+tB,EAAcl0C,EAAGk0C,EAAcpjC,EAEjD,CACL,CA0BA,MAAMwoE,WAA0B7D,GAC5B70C,UAAY,eACfA,gBAAkB,CACXrf,SAAS,EACTg4D,SAAS,EACTlkC,SAAU,YACVnD,WAAY,CACR3wB,SAAS,EACTO,UAAW,EACXqX,WAAY,GACZC,iBAAkB,GAEtBvX,KAAM,CACFswB,UAAU,GAEd/B,WAAY,EACZn0B,MAAO,CACHoH,mBAAmB,EACnBprB,SAAU8kB,GAAMlB,WAAWE,SAE/Bq2B,YAAa,CACT9uB,mBAAe1pB,EACf2pB,gBAAiB,EACjBhC,SAAS,EACTxD,KAAM,CACFpM,KAAM,IAEV1Z,SAAUiuC,GACCA,EAEXhlB,QAAS,EACT02D,mBAAmB,IAG3Bh3C,qBAAuB,CACnB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEnBA,mBAAqB,CACjBsR,WAAY,CACR7xB,UAAW,SAGnB,WAAAjU,CAAY2vB,GACRiQ,MAAMjQ,GACLz/B,KAAKo2C,aAAU94C,EACf0C,KAAKq2C,aAAU/4C,EACf0C,KAAKy7E,iBAAcn+E,EACnB0C,KAAKm7E,aAAe,GACrBn7E,KAAK67E,iBAAmB,EAC3B,CACD,aAAAp1B,GACI,MAAM7hC,EAAU5kB,KAAKuuE,SAAWvgD,GAAU8sD,GAAsB96E,KAAKvH,SAAW,GAC1EkK,EAAI3C,KAAKkmB,MAAQlmB,KAAK6sB,SAAWjI,EAAQsB,MACzCrlB,EAAIb,KAAK0oB,OAAS1oB,KAAK83B,UAAYlT,EAAQ8D,OACjD1oB,KAAKo2C,QAAUt1C,KAAK2V,MAAMzW,KAAKglB,KAAOriB,EAAI,EAAIiiB,EAAQI,MACtDhlB,KAAKq2C,QAAUv1C,KAAK2V,MAAMzW,KAAK6kB,IAAMhkB,EAAI,EAAI+jB,EAAQC,KACrD7kB,KAAKy7E,YAAc36E,KAAK2V,MAAM3V,KAAKE,IAAI2B,EAAG9B,GAAK,EAClD,CACD,mBAAA+lD,GACI,MAAM5lD,IAAEA,EAAGD,IAAGA,GAASf,KAAKgpC,WAAU,GACtChpC,KAAKgB,IAAMmR,GAAenR,KAAS4V,MAAM5V,GAAOA,EAAM,EACtDhB,KAAKe,IAAMoR,GAAepR,KAAS6V,MAAM7V,GAAOA,EAAM,EACtDf,KAAKu5E,wBACR,CACJ,gBAAAO,GACO,OAAOh5E,KAAKoiD,KAAKljD,KAAKy7E,YAAcX,GAAsB96E,KAAKvH,SAClE,CACD,kBAAA2vD,CAAmBzoC,GACfw5D,GAAgBrnE,UAAUs2C,mBAAmBp2C,KAAKhS,KAAM2f,GACxD3f,KAAKm7E,aAAen7E,KAAKuoC,YAAY3qC,KAAI,CAAC9E,EAAOqH,KAC7C,MAAMypC,EAAQjuC,GAASqE,KAAKvH,QAAQq9C,YAAYn6C,SAAU,CACtD7C,EACAqH,GACDH,MACH,OAAO4pC,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IACzC/rC,QAAO,CAAC8C,EAAGjF,IAAIsE,KAAK4f,MAAMuxB,kBAAkBz1C,IAClD,CACD,GAAAisD,GACI,MAAMv8B,EAAOprB,KAAKvH,QACd2yB,EAAKnG,SAAWmG,EAAK0qB,YAAY7wB,QACjC+1D,GAAmBh7E,MAEnBA,KAAK47E,eAAe,EAAG,EAAG,EAAG,EAEpC,CACD,cAAAA,CAAesB,EAAcC,EAAeC,EAAaC,GACrDr9E,KAAKo2C,SAAWt1C,KAAK2V,OAAOymE,EAAeC,GAAiB,GAC5Dn9E,KAAKq2C,SAAWv1C,KAAK2V,OAAO2mE,EAAcC,GAAkB,GAC5Dr9E,KAAKy7E,aAAe36E,KAAKE,IAAIhB,KAAKy7E,YAAc,EAAG36E,KAAKC,IAAIm8E,EAAcC,EAAeC,EAAaC,GACzG,CACD,aAAA9mC,CAAcp2C,GAGV,OAAOgY,GAAgBhY,GAFCqV,IAAOxV,KAAKm7E,aAAa7/E,QAAU,IAEV0b,GAD9BhX,KAAKvH,QAAQq7C,YAAc,GAEjD,CACD,6BAAA6C,CAA8B79C,GAC1B,GAAI+Y,GAAc/Y,GACd,OAAOiwC,IAEX,MAAMu0C,EAAgBt9E,KAAKy7E,aAAez7E,KAAKe,IAAMf,KAAKgB,KAC1D,OAAIhB,KAAKvH,QAAQya,SACLlT,KAAKe,IAAMjI,GAASwkF,GAExBxkF,EAAQkH,KAAKgB,KAAOs8E,CAC/B,CACD,6BAAAC,CAA8BzlE,GAC1B,GAAIjG,GAAciG,GACd,OAAOixB,IAEX,MAAMy0C,EAAiB1lE,GAAY9X,KAAKy7E,aAAez7E,KAAKe,IAAMf,KAAKgB,MACvE,OAAOhB,KAAKvH,QAAQya,QAAUlT,KAAKe,IAAMy8E,EAAiBx9E,KAAKgB,IAAMw8E,CACxE,CACD,oBAAAjC,CAAqBp7E,GACjB,MAAM21C,EAAc91C,KAAKm7E,cAAgB,GACzC,GAAIh7E,GAAS,GAAKA,EAAQ21C,EAAYx6C,OAAQ,CAC1C,MAAMmiF,EAAa3nC,EAAY31C,GAC/B,OA7HZ,SAAiC8xB,EAAQ9xB,EAAOypC,GAC5C,OAAOnb,GAAcwD,EAAQ,CACzB2X,QACAzpC,QACAD,KAAM,cAEd,CAuHmBw9E,CAAwB19E,KAAKuoB,aAAcpoB,EAAOs9E,EAC5D,CACJ,CACD,gBAAAjC,CAAiBr7E,EAAOw9E,EAAoBtC,EAAkB,GAC1D,MAAMzjE,EAAQ5X,KAAKu2C,cAAcp2C,GAAS0V,GAAUwlE,EACpD,MAAO,CACH33E,EAAG5C,KAAKsc,IAAIxF,GAAS+lE,EAAqB39E,KAAKo2C,QAC/C5hC,EAAG1T,KAAKqb,IAAIvE,GAAS+lE,EAAqB39E,KAAKq2C,QAC/Cz+B,QAEP,CACD,wBAAAigC,CAAyB13C,EAAOrH,GAC5B,OAAOkH,KAAKw7E,iBAAiBr7E,EAAOH,KAAK22C,8BAA8B79C,GAC1E,CACD,eAAA8kF,CAAgBz9E,GACZ,OAAOH,KAAK63C,yBAAyB13C,GAAS,EAAGH,KAAK4qD,eACzD,CACD,qBAAAizB,CAAsB19E,GAClB,MAAM6kB,KAAEA,EAAOH,IAAAA,QAAMC,EAAKC,OAAGA,GAAY/kB,KAAK67E,iBAAiB17E,GAC/D,MAAO,CACH6kB,OACAH,MACAC,QACAC,SAEP,CACJ,cAAAmoC,GACO,MAAMjsC,gBAAEA,EAAkBsE,MAAMswB,SAAEA,IAAiB71C,KAAKvH,QACxD,GAAIwoB,EAAiB,CACjB,MAAM9kB,EAAM6D,KAAK7D,IACjBA,EAAIyrB,OACJzrB,EAAIqtB,YACJuzD,GAAe/8E,KAAMA,KAAK22C,8BAA8B32C,KAAKq5E,WAAYxjC,EAAU71C,KAAKm7E,aAAa7/E,QACrGa,EAAIwtB,YACJxtB,EAAI2vB,UAAY7K,EAChB9kB,EAAIkC,OACJlC,EAAI4rB,SACP,CACJ,CACJ,QAAAqlC,GACO,MAAMjxD,EAAM6D,KAAK7D,IACXivB,EAAOprB,KAAKvH,SACZm9C,WAAEA,EAAarwB,KAAAA,SAAOQ,GAAYqF,EAClConD,EAAaxyE,KAAKm7E,aAAa7/E,OACrC,IAAII,EAAGwpB,EAAQ6zB,EAef,GAdI3tB,EAAK0qB,YAAY7wB,SA3N7B,SAAyBtC,EAAO6vD,GAC5B,MAAMr2E,IAAEA,EAAM1D,SAASq9C,YAAEA,IAAoBnzB,EAC7C,IAAI,IAAIjnB,EAAI82E,EAAa,EAAG92E,GAAK,EAAGA,IAAI,CACpC,MAAM4Z,EAAOqN,EAAMk5D,iBAAiBngF,GACpC,IAAK4Z,EAAKmP,QACN,SAEJ,MAAM0nC,EAAcrW,EAAY9kB,WAAWrO,EAAM44D,qBAAqB7/E,IACtEghF,GAAkBvgF,EAAKgwD,EAAa72C,GACpC,MAAMomE,EAASztD,GAAOk+B,EAAY1qC,OAC5B/d,EAAEA,EAAI8Q,EAAAA,YAAIgY,GAAelX,EAC/B6W,GAAWhwB,EAAKwmB,EAAMw4D,aAAaz/E,GAAIgI,EAAG8Q,EAAIknE,EAAO/5D,WAAa,EAAG+5D,EAAQ,CACzEprE,MAAO67C,EAAY77C,MACnBkc,UAAWA,EACXC,aAAc,UAErB,CACL,CA2MYqxD,CAAgB99E,KAAMwyE,GAEtBjtD,EAAKN,SACLjlB,KAAK2f,MAAMhpB,SAAQ,CAAC0nC,EAAMl+B,KACtB,GAAc,IAAVA,GAAyB,IAAVA,GAAeH,KAAKgB,IAAM,EAAG,CAC5CkkB,EAASllB,KAAK22C,8BAA8BtY,EAAKvlC,OACjD,MAAMgG,EAAUkB,KAAKuoB,WAAWpoB,GAC1BgsD,EAAc5mC,EAAKyL,WAAWlyB,GAC9BstD,EAAoBrmC,EAAOiL,WAAWlyB,IArMhE,SAAwB6jB,EAAOo7D,EAAc30D,EAAQopD,EAAYtnB,GAC7D,MAAM/uD,EAAMwmB,EAAMxmB,IACZ05C,EAAWkoC,EAAaloC,UACxBvlC,MAAEA,EAAKkV,UAAGA,GAAeu4D,GAC1BloC,IAAa28B,IAAeliE,IAAUkV,GAAa4D,EAAS,IAGjEjtB,EAAIyrB,OACJzrB,EAAI0vB,YAAcvb,EAClBnU,EAAIqpB,UAAYA,EAChBrpB,EAAImxD,YAAYpC,EAAWllC,MAC3B7pB,EAAIoxD,eAAiBrC,EAAWjlC,WAChC9pB,EAAIqtB,YACJuzD,GAAep6D,EAAOyG,EAAQysB,EAAU28B,GACxCr2E,EAAIwtB,YACJxtB,EAAI8tB,SACJ9tB,EAAI4rB,UACR,CAqLoBi2D,CAAeh+E,KAAMmsD,EAAajnC,EAAQstD,EAAYpmB,EACzD,KAGLxW,EAAW3wB,QAAS,CAEpB,IADA9oB,EAAIyrB,OACAlsB,EAAI82E,EAAa,EAAG92E,GAAK,EAAGA,IAAI,CAChC,MAAMywD,EAAcvW,EAAW5kB,WAAWhxB,KAAKu7E,qBAAqB7/E,KAC9D4U,MAAEA,EAAKkV,UAAGA,GAAe2mC,EAC1B3mC,GAAclV,IAGnBnU,EAAIqpB,UAAYA,EAChBrpB,EAAI0vB,YAAcvb,EAClBnU,EAAImxD,YAAYnB,EAAYtvB,YAC5B1gC,EAAIoxD,eAAiBpB,EAAYrvB,iBACjC5X,EAASllB,KAAK22C,8BAA8BvrB,EAAKzL,MAAMzM,QAAUlT,KAAKgB,IAAMhB,KAAKe,KACjFg4C,EAAW/4C,KAAKw7E,iBAAiB9/E,EAAGwpB,GACpC/oB,EAAIqtB,YACJrtB,EAAIytB,OAAO5pB,KAAKo2C,QAASp2C,KAAKq2C,SAC9Bl6C,EAAI0tB,OAAOkvB,EAASr1C,EAAGq1C,EAASvkC,GAChCrY,EAAI8tB,SACP,CACD9tB,EAAI4rB,SACP,CACJ,CACJ,UAAAylC,GAAe,CACf,UAAAE,GACO,MAAMvxD,EAAM6D,KAAK7D,IACXivB,EAAOprB,KAAKvH,QACZ0pD,EAAW/2B,EAAKzL,MACtB,IAAKwiC,EAASl9B,QACV,OAEJ,MAAM6uB,EAAa9zC,KAAKu2C,cAAc,GACtC,IAAIrxB,EAAQgB,EACZ/pB,EAAIyrB,OACJzrB,EAAImtB,UAAUtpB,KAAKo2C,QAASp2C,KAAKq2C,SACjCl6C,EAAIsV,OAAOqiC,GACX33C,EAAIqwB,UAAY,SAChBrwB,EAAIswB,aAAe,SACnBzsB,KAAK2f,MAAMhpB,SAAQ,CAAC0nC,EAAMl+B,KACtB,GAAc,IAAVA,GAAeH,KAAKgB,KAAO,IAAMoqB,EAAKlY,QACtC,OAEJ,MAAMi5C,EAAchK,EAASnxB,WAAWhxB,KAAKuoB,WAAWpoB,IAClD+pD,EAAWj8B,GAAOk+B,EAAY1qC,MAEpC,GADAyD,EAASllB,KAAK22C,8BAA8B32C,KAAK2f,MAAMxf,GAAOrH,OAC1DqzD,EAAYplC,kBAAmB,CAC/B5qB,EAAIslB,KAAOyoC,EAAS7iC,OACpBnB,EAAQ/pB,EAAIorB,YAAY8W,EAAKuL,OAAO1jB,MACpC/pB,EAAI2vB,UAAYqgC,EAAYnlC,cAC5B,MAAMpC,EAAUoJ,GAAUm+B,EAAYllC,iBACtC9qB,EAAI+vB,UAAUhG,EAAQ,EAAItB,EAAQI,MAAOE,EAASglC,EAAS70C,KAAO,EAAIuP,EAAQC,IAAKqB,EAAQtB,EAAQsB,MAAOgkC,EAAS70C,KAAOuP,EAAQ8D,OACrI,CACDyD,GAAWhwB,EAAKkiC,EAAKuL,MAAO,GAAI1kB,EAAQglC,EAAU,CAC9C55C,MAAO67C,EAAY77C,MACnBgc,YAAa6/B,EAAY3lC,gBACzB6F,YAAa8/B,EAAY5lC,iBAC3B,IAENpqB,EAAI4rB,SACP,CACJ,SAAA6lC,GAAc,EAGf,MAAMqwB,GAAY,CACdC,YAAa,CACTC,QAAQ,EACR9oE,KAAM,EACN+kE,MAAO,KAEXgE,OAAQ,CACJD,QAAQ,EACR9oE,KAAM,IACN+kE,MAAO,IAEXiE,OAAQ,CACJF,QAAQ,EACR9oE,KAAM,IACN+kE,MAAO,IAEXkE,KAAM,CACFH,QAAQ,EACR9oE,KAAM,KACN+kE,MAAO,IAEXmE,IAAK,CACDJ,QAAQ,EACR9oE,KAAM,MACN+kE,MAAO,IAEXoE,KAAM,CACFL,QAAQ,EACR9oE,KAAM,OACN+kE,MAAO,GAEXqE,MAAO,CACHN,QAAQ,EACR9oE,KAAM,OACN+kE,MAAO,IAEXsE,QAAS,CACLP,QAAQ,EACR9oE,KAAM,OACN+kE,MAAO,GAEXuE,KAAM,CACFR,QAAQ,EACR9oE,KAAM,SAGPupE,GAAyBroF,OAAOkK,KAAKw9E,IAC3C,SAASY,GAAO9nF,EAAGC,GAChB,OAAOD,EAAIC,CACf,CACC,SAAS47B,GAAMjQ,EAAOlT,GACnB,GAAIoC,GAAcpC,GACd,OAAO,KAEX,MAAMqvE,EAAUn8D,EAAMo8D,UAChBC,OAAEA,EAAMt+E,MAAGA,EAAKu+E,WAAGA,GAAgBt8D,EAAMu8D,WAC/C,IAAIpmF,EAAQ2W,EAOZ,MANsB,mBAAXuvE,IACPlmF,EAAQkmF,EAAOlmF,IAEdqZ,GAAerZ,KAChBA,EAA0B,iBAAXkmF,EAAsBF,EAAQlsD,MAAM95B,EAAQkmF,GAAUF,EAAQlsD,MAAM95B,IAEzE,OAAVA,EACO,MAEP4H,IACA5H,EAAkB,SAAV4H,IAAqBiW,GAASsoE,KAA8B,IAAfA,EAAuEH,EAAQxmC,QAAQx/C,EAAO4H,GAAvEo+E,EAAQxmC,QAAQx/C,EAAO,UAAWmmF,KAE1GnmF,EACZ,CACC,SAASqmF,GAA0BC,EAASp+E,EAAKD,EAAKs+E,GACnD,MAAM/rE,EAAOsrE,GAAMtjF,OACnB,IAAI,IAAII,EAAIkjF,GAAMhlF,QAAQwlF,GAAU1jF,EAAI4X,EAAO,IAAK5X,EAAE,CAClD,MAAM4jF,EAAWrB,GAAUW,GAAMljF,IAC3B2jC,EAASigD,EAASlF,MAAQkF,EAASlF,MAAQhoE,OAAOmtE,iBACxD,GAAID,EAASnB,QAAUr9E,KAAKoiD,MAAMniD,EAAMC,IAAQq+B,EAASigD,EAASjqE,QAAUgqE,EACxE,OAAOT,GAAMljF,EAEpB,CACD,OAAOkjF,GAAMtrE,EAAO,EACxB,CAiBC,SAASksE,GAAQ7/D,EAAO8/D,EAAMC,GAC3B,GAAKA,GAEE,GAAIA,EAAWpkF,OAAQ,CAC1B,MAAM6d,GAAEA,EAAED,GAAGA,GAAQJ,GAAQ4mE,EAAYD,GAEzC9/D,EADkB+/D,EAAWvmE,IAAOsmE,EAAOC,EAAWvmE,GAAMumE,EAAWxmE,KACpD,CACtB,OALGyG,EAAM8/D,IAAQ,CAMtB,CAcC,SAASE,GAAoBh9D,EAAOnD,EAAQogE,GACzC,MAAMjgE,EAAQ,GACP/hB,EAAM,CAAA,EACP0V,EAAOkM,EAAOlkB,OACpB,IAAII,EAAG5C,EACP,IAAI4C,EAAI,EAAGA,EAAI4X,IAAQ5X,EACnB5C,EAAQ0mB,EAAO9jB,GACfkC,EAAI9E,GAAS4C,EACbikB,EAAMtlB,KAAK,CACPvB,QACA+tB,OAAO,IAGf,OAAgB,IAATvT,GAAessE,EA1BzB,SAAuBj9D,EAAOhD,EAAO/hB,EAAKgiF,GACvC,MAAMd,EAAUn8D,EAAMo8D,SAChB/7B,GAAS87B,EAAQxmC,QAAQ34B,EAAM,GAAG7mB,MAAO8mF,GACzCvmE,EAAOsG,EAAMA,EAAMrkB,OAAS,GAAGxC,MACrC,IAAI+tB,EAAO1mB,EACX,IAAI0mB,EAAQm8B,EAAOn8B,GAASxN,EAAMwN,GAASi4D,EAAQjjF,IAAIgrB,EAAO,EAAG+4D,GAC7Dz/E,EAAQvC,EAAIipB,GACR1mB,GAAS,IACTwf,EAAMxf,GAAO0mB,OAAQ,GAG7B,OAAOlH,CACX,CAc8CkgE,CAAcl9D,EAAOhD,EAAO/hB,EAAKgiF,GAAzCjgE,CACtC,CACA,MAAMmgE,WAAkBp7B,GACpBpgB,UAAY,OACfA,gBAAkB,CAClBlf,OAAQ,OACDozB,SAAU,CAAE,EACZinC,KAAM,CACFT,QAAQ,EACR1G,MAAM,EACN53E,OAAO,EACPu+E,YAAY,EACZG,QAAS,cACTW,eAAgB,CAAE,GAEtBpgE,MAAO,CACdjM,OAAQ,OACG/X,UAAU,EACVkrB,MAAO,CACHg8B,SAAS,KAIxB,WAAA/yC,CAAY5Y,GACLw4C,MAAMx4C,GACL8I,KAAKmtC,OAAS,CACXh1C,KAAM,GACNmwC,OAAQ,GACR5G,IAAK,IAER1hC,KAAKggF,MAAQ,MACbhgF,KAAKigF,gBAAa3iF,EACnB0C,KAAKkgF,SAAW,GAChBlgF,KAAKmgF,aAAc,EACnBngF,KAAKk/E,gBAAa5hF,CACrB,CACD,IAAAgB,CAAKs5D,EAAWxsC,EAAO,IACnB,MAAMq0D,EAAO7nB,EAAU6nB,OAAS7nB,EAAU6nB,KAAO,CAAA,GAC1CX,EAAU9+E,KAAK++E,SAAW,IAAIvmC,GAAeof,EAAUpf,SAAShb,MACvEshD,EAAQxgF,KAAK8sB,GACbhX,GAAQqrE,EAAKM,eAAgBjB,EAAQ1mC,WACrCp4C,KAAKk/E,WAAa,CACdF,OAAQS,EAAKT,OACbt+E,MAAO++E,EAAK/+E,MACZu+E,WAAYQ,EAAKR,YAErBvvC,MAAMpxC,KAAKs5D,GACX53D,KAAKmgF,YAAc/0D,EAAKg1D,UAC3B,CACJ,KAAAxtD,CAAM0X,EAAKnqC,GACJ,YAAY7C,IAARgtC,EACO,KAEJ1X,GAAM5yB,KAAMsqC,EACtB,CACD,YAAAyT,GACIrO,MAAMqO,eACN/9C,KAAKmtC,OAAS,CACVh1C,KAAM,GACNmwC,OAAQ,GACR5G,IAAK,GAEZ,CACD,mBAAAklB,GACI,MAAMnuD,EAAUuH,KAAKvH,QACfqmF,EAAU9+E,KAAK++E,SACfzG,EAAO7/E,EAAQgnF,KAAKnH,MAAQ,MAClC,IAAIt3E,IAAEA,EAAGD,IAAGA,EAAMoa,WAAAA,EAAaC,WAAAA,GAAgBpb,KAAKqb,gBAC3D,SAASglE,EAAaj7D,GACNjK,GAAevE,MAAMwO,EAAOpkB,OAC7BA,EAAMF,KAAKE,IAAIA,EAAKokB,EAAOpkB,MAE1Boa,GAAexE,MAAMwO,EAAOrkB,OAC7BA,EAAMD,KAAKC,IAAIA,EAAKqkB,EAAOrkB,KAElC,CACIoa,GAAeC,IAChBilE,EAAargF,KAAKsgF,mBACK,UAAnB7nF,EAAQ2sB,QAA+C,WAAzB3sB,EAAQknB,MAAMjM,QAC5C2sE,EAAargF,KAAKgpC,WAAU,KAGpChoC,EAAMmR,GAAenR,KAAS4V,MAAM5V,GAAOA,GAAO89E,EAAQxmC,QAAQxa,KAAKC,MAAOu6C,GAC9Ev3E,EAAMoR,GAAepR,KAAS6V,MAAM7V,GAAOA,GAAO+9E,EAAQvmC,MAAMza,KAAKC,MAAOu6C,GAAQ,EACpFt4E,KAAKgB,IAAMF,KAAKE,IAAIA,EAAKD,EAAM,GAC/Bf,KAAKe,IAAMD,KAAKC,IAAIC,EAAM,EAAGD,EAChC,CACJ,eAAAu/E,GACO,MAAM/uD,EAAMvxB,KAAKugF,qBACjB,IAAIv/E,EAAMoR,OAAOuD,kBACb5U,EAAMqR,OAAOi3B,kBAKjB,OAJI9X,EAAIj2B,SACJ0F,EAAMuwB,EAAI,GACVxwB,EAAMwwB,EAAIA,EAAIj2B,OAAS,IAEpB,CACH0F,MACAD,MAEP,CACJ,UAAAmmD,GACO,MAAMzuD,EAAUuH,KAAKvH,QACf+nF,EAAW/nF,EAAQgnF,KACnBt9B,EAAW1pD,EAAQknB,MACnB+/D,EAAiC,WAApBv9B,EAASzuC,OAAsB1T,KAAKugF,qBAAuBvgF,KAAKygF,YAC5D,UAAnBhoF,EAAQ2sB,QAAsBs6D,EAAWpkF,SACzC0E,KAAKgB,IAAMhB,KAAKwlD,UAAYk6B,EAAW,GACvC1/E,KAAKe,IAAMf,KAAKulD,UAAYm6B,EAAWA,EAAWpkF,OAAS,IAE/D,MAAM0F,EAAMhB,KAAKgB,IAEX2e,EDz7UV,SAAwBH,EAAQxe,EAAKD,GACrC,IAAIsX,EAAQ,EACRC,EAAMkH,EAAOlkB,OACjB,KAAM+c,EAAQC,GAAOkH,EAAOnH,GAASrX,GACjCqX,IAEJ,KAAMC,EAAMD,GAASmH,EAAOlH,EAAM,GAAKvX,GACnCuX,IAEJ,OAAOD,EAAQ,GAAKC,EAAMkH,EAAOlkB,OAASkkB,EAAOvN,MAAMoG,EAAOC,GAAOkH,CACzE,CC+6UsBkhE,CAAehB,EAAY1+E,EAD7BhB,KAAKe,KAQjB,OANAf,KAAKggF,MAAQQ,EAASlI,OAASn2B,EAAS17B,SAAW04D,GAA0BqB,EAASpB,QAASp/E,KAAKgB,IAAKhB,KAAKe,IAAKf,KAAK2gF,kBAAkB3/E,IAnKjJ,SAAoC2hB,EAAO2lC,EAAU82B,EAASp+E,EAAKD,GAChE,IAAI,IAAIrF,EAAIkjF,GAAMtjF,OAAS,EAAGI,GAAKkjF,GAAMhlF,QAAQwlF,GAAU1jF,IAAI,CAC3D,MAAM48E,EAAOsG,GAAMljF,GACnB,GAAIuiF,GAAU3F,GAAM6F,QAAUx7D,EAAMo8D,SAAS1mC,KAAKt3C,EAAKC,EAAKs3E,IAAShwB,EAAW,EAC5E,OAAOgwB,CAEd,CACD,OAAOsG,GAAMQ,EAAUR,GAAMhlF,QAAQwlF,GAAW,EACpD,CA2J0JwB,CAA2B5gF,KAAM2f,EAAMrkB,OAAQklF,EAASpB,QAASp/E,KAAKgB,IAAKhB,KAAKe,MAClOf,KAAKigF,WAAc99B,EAASt7B,MAAMg8B,SAA0B,SAAf7iD,KAAKggF,MA3JzD,SAA4B1H,GACzB,IAAI,IAAI58E,EAAIkjF,GAAMhlF,QAAQ0+E,GAAQ,EAAGhlE,EAAOsrE,GAAMtjF,OAAQI,EAAI4X,IAAQ5X,EAClE,GAAIuiF,GAAUW,GAAMljF,IAAIyiF,OACpB,OAAOS,GAAMljF,EAGzB,CAqJyFmlF,CAAmB7gF,KAAKggF,YAApC1iF,EACrE0C,KAAK8gF,YAAYpB,GACbjnF,EAAQya,SACRyM,EAAMzM,UAEHysE,GAAoB3/E,KAAM2f,EAAO3f,KAAKigF,WAChD,CACD,aAAAx4B,GACQznD,KAAKvH,QAAQsoF,qBACb/gF,KAAK8gF,YAAY9gF,KAAK2f,MAAM/hB,KAAKygC,IAAQA,EAAKvlC,QAErD,CACJ,WAAAgoF,CAAYpB,EAAa,IAClB,IAEI18B,EAAO3pC,EAFPhB,EAAQ,EACRC,EAAM,EAENtY,KAAKvH,QAAQysB,QAAUw6D,EAAWpkF,SAClC0nD,EAAQhjD,KAAKghF,mBAAmBtB,EAAW,IAEvCrnE,EADsB,IAAtBqnE,EAAWpkF,OACH,EAAI0nD,GAEHhjD,KAAKghF,mBAAmBtB,EAAW,IAAM18B,GAAS,EAE/D3pC,EAAOrZ,KAAKghF,mBAAmBtB,EAAWA,EAAWpkF,OAAS,IAE1Dgd,EADsB,IAAtBonE,EAAWpkF,OACL+d,GAECA,EAAOrZ,KAAKghF,mBAAmBtB,EAAWA,EAAWpkF,OAAS,KAAO,GAGpF,MAAM2wD,EAAQyzB,EAAWpkF,OAAS,EAAI,GAAM,IAC5C+c,EAAQO,GAAYP,EAAO,EAAG4zC,GAC9B3zC,EAAMM,GAAYN,EAAK,EAAG2zC,GAC1BjsD,KAAKkgF,SAAW,CACZ7nE,QACAC,MACA+mB,OAAQ,GAAKhnB,EAAQ,EAAIC,GAEhC,CACJ,SAAAmoE,GACO,MAAM3B,EAAU9+E,KAAK++E,SACf/9E,EAAMhB,KAAKgB,IACXD,EAAMf,KAAKe,IACXtI,EAAUuH,KAAKvH,QACf+nF,EAAW/nF,EAAQgnF,KACnB74D,EAAQ45D,EAASlI,MAAQ6G,GAA0BqB,EAASpB,QAASp+E,EAAKD,EAAKf,KAAK2gF,kBAAkB3/E,IACtG64E,EAAWrnE,GAAe/Z,EAAQknB,MAAMk6D,SAAU,GAClDoH,EAAoB,SAAVr6D,GAAmB45D,EAASvB,WACtCiC,EAAavqE,GAASsqE,KAAwB,IAAZA,EAClCthE,EAAQ,CAAA,EACd,IACI8/D,EAAM3kE,EADNkoC,EAAQhiD,EAMZ,GAJIkgF,IACAl+B,GAAS87B,EAAQxmC,QAAQ0K,EAAO,UAAWi+B,IAE/Cj+B,GAAS87B,EAAQxmC,QAAQ0K,EAAOk+B,EAAa,MAAQt6D,GACjDk4D,EAAQzmC,KAAKt3C,EAAKC,EAAK4lB,GAAS,IAASizD,EACzC,MAAM,IAAI5/E,MAAM+G,EAAM,QAAUD,EAAM,uCAAyC84E,EAAW,IAAMjzD,GAEpG,MAAM84D,EAAsC,SAAzBjnF,EAAQknB,MAAMjM,QAAqB1T,KAAKmhF,oBAC3D,IAAI1B,EAAOz8B,EAAOloC,EAAQ,EAAG2kE,EAAO1+E,EAAK0+E,GAAQX,EAAQjjF,IAAI4jF,EAAM5F,EAAUjzD,GAAQ9L,IACjF0kE,GAAQ7/D,EAAO8/D,EAAMC,GAKzB,OAHID,IAAS1+E,GAA0B,UAAnBtI,EAAQ2sB,QAAgC,IAAVtK,GAC9C0kE,GAAQ7/D,EAAO8/D,EAAMC,GAElBnpF,OAAOkK,KAAKkf,GAAO4tB,KAAKsxC,IAAQjhF,KAAK8F,IAAKA,GACpD,CACJ,gBAAAmmC,CAAiB/wC,GACV,MAAMgmF,EAAU9+E,KAAK++E,SACfyB,EAAWxgF,KAAKvH,QAAQgnF,KAC9B,OAAIe,EAASY,cACFtC,EAAQx/D,OAAOxmB,EAAO0nF,EAASY,eAEnCtC,EAAQx/D,OAAOxmB,EAAO0nF,EAAST,eAAesB,SACxD,CACJ,MAAA/hE,CAAOxmB,EAAOwmB,GACP,MACM84B,EADUp4C,KAAKvH,QACGgnF,KAAKM,eACvBzH,EAAOt4E,KAAKggF,MACZsB,EAAMhiE,GAAU84B,EAAQkgC,GAC9B,OAAOt4E,KAAK++E,SAASz/D,OAAOxmB,EAAOwoF,EACtC,CACJ,mBAAAC,CAAoB9B,EAAMt/E,EAAOwf,EAAOL,GACjC,MAAM7mB,EAAUuH,KAAKvH,QACfwmB,EAAYxmB,EAAQknB,MAAMhkB,SAChC,GAAIsjB,EACA,OAAOtjB,GAASsjB,EAAW,CACvBwgE,EACAt/E,EACAwf,GACD3f,MAEP,MAAMo4C,EAAU3/C,EAAQgnF,KAAKM,eACvBzH,EAAOt4E,KAAKggF,MACZJ,EAAY5/E,KAAKigF,WACjBuB,EAAclJ,GAAQlgC,EAAQkgC,GAC9BmJ,EAAc7B,GAAaxnC,EAAQwnC,GACnCvhD,EAAO1e,EAAMxf,GACb0mB,EAAQ+4D,GAAa6B,GAAepjD,GAAQA,EAAKxX,MACvD,OAAO7mB,KAAK++E,SAASz/D,OAAOmgE,EAAMngE,IAAWuH,EAAQ46D,EAAcD,GACtE,CACJ,kBAAAp5B,CAAmBzoC,GACZ,IAAIjkB,EAAG4X,EAAM+qB,EACb,IAAI3iC,EAAI,EAAG4X,EAAOqM,EAAMrkB,OAAQI,EAAI4X,IAAQ5X,EACxC2iC,EAAO1e,EAAMjkB,GACb2iC,EAAKuL,MAAQ5pC,KAAKuhF,oBAAoBljD,EAAKvlC,MAAO4C,EAAGikB,EAE5D,CACJ,kBAAAqhE,CAAmBloF,GACZ,OAAiB,OAAVA,EAAiBiwC,KAAOjwC,EAAQkH,KAAKgB,MAAQhB,KAAKe,IAAMf,KAAKgB,IACvE,CACJ,gBAAAsa,CAAiBxiB,GACV,MAAM4oF,EAAU1hF,KAAKkgF,SACf1pD,EAAMx2B,KAAKghF,mBAAmBloF,GACpC,OAAOkH,KAAKsxC,oBAAoBowC,EAAQrpE,MAAQme,GAAOkrD,EAAQriD,OAClE,CACJ,gBAAAmS,CAAiBtpB,GACV,MAAMw5D,EAAU1hF,KAAKkgF,SACf1pD,EAAMx2B,KAAK2qD,mBAAmBziC,GAASw5D,EAAQriD,OAASqiD,EAAQppE,IACtE,OAAOtY,KAAKgB,IAAMw1B,GAAOx2B,KAAKe,IAAMf,KAAKgB,IAC5C,CACJ,aAAA2gF,CAAc/3C,GACP,MAAMg4C,EAAY5hF,KAAKvH,QAAQknB,MACzBkiE,EAAiB7hF,KAAK7D,IAAIorB,YAAYqiB,GAAO1jB,MAC7CtO,EAAQZ,GAAUhX,KAAK6vC,eAAiB+xC,EAAUv7D,YAAcu7D,EAAUx7D,aAC1E07D,EAAchhF,KAAKsc,IAAIxF,GACvBmqE,EAAcjhF,KAAKqb,IAAIvE,GACvBoqE,EAAehiF,KAAKuqD,wBAAwB,GAAGl1C,KACrD,MAAO,CACH1S,EAAGk/E,EAAiBC,EAAcE,EAAeD,EACjDlhF,EAAGghF,EAAiBE,EAAcC,EAAeF,EAExD,CACJ,iBAAAnB,CAAkBsB,GACX,MAAMzB,EAAWxgF,KAAKvH,QAAQgnF,KACxBM,EAAiBS,EAAST,eAC1BzgE,EAASygE,EAAeS,EAASlI,OAASyH,EAAe7B,YACzDgE,EAAeliF,KAAKuhF,oBAAoBU,EAAa,EAAGtC,GAAoB3/E,KAAM,CACpFiiF,GACDjiF,KAAKigF,YAAa3gE,GACfjK,EAAOrV,KAAK2hF,cAAcO,GAC1B7C,EAAWv+E,KAAK2V,MAAMzW,KAAK6vC,eAAiB7vC,KAAKkmB,MAAQ7Q,EAAK1S,EAAI3C,KAAK0oB,OAASrT,EAAKxU,GAAK,EAChG,OAAOw+E,EAAW,EAAIA,EAAW,CACpC,CACJ,iBAAA8B,GACO,IACIzlF,EAAG4X,EADHosE,EAAa1/E,KAAKmtC,OAAOh1C,MAAQ,GAErC,GAAIunF,EAAWpkF,OACX,OAAOokF,EAEX,MAAM15B,EAAQhmD,KAAKijC,0BACnB,GAAIjjC,KAAKmgF,aAAen6B,EAAM1qD,OAC1B,OAAO0E,KAAKmtC,OAAOh1C,KAAO6tD,EAAM,GAAG7iB,WAAWsG,mBAAmBzpC,MAErE,IAAItE,EAAI,EAAG4X,EAAO0yC,EAAM1qD,OAAQI,EAAI4X,IAAQ5X,EACxCgkF,EAAaA,EAAWpyC,OAAO0Y,EAAMtqD,GAAGynC,WAAWsG,mBAAmBzpC,OAE1E,OAAOA,KAAKmtC,OAAOh1C,KAAO6H,KAAK66B,UAAU6kD,EAC5C,CACJ,kBAAAa,GACO,MAAMb,EAAa1/E,KAAKmtC,OAAO7E,QAAU,GACzC,IAAI5sC,EAAG4X,EACP,GAAIosE,EAAWpkF,OACX,OAAOokF,EAEX,MAAMp3C,EAAStoC,KAAKuoC,YACpB,IAAI7sC,EAAI,EAAG4X,EAAOg1B,EAAOhtC,OAAQI,EAAI4X,IAAQ5X,EACzCgkF,EAAWrlF,KAAKu4B,GAAM5yB,KAAMsoC,EAAO5sC,KAEvC,OAAOsE,KAAKmtC,OAAO7E,OAAStoC,KAAKmgF,YAAcT,EAAa1/E,KAAK66B,UAAU6kD,EAC9E,CACJ,SAAA7kD,CAAUrb,GACH,OAAO1F,GAAa0F,EAAO+tB,KAAKsxC,IACnC,EAGL,SAASjuE,GAAYmI,EAAO7H,EAAKgC,GAC7B,IAEIivE,EAAYC,EAAYC,EAAYC,EAFpCnpE,EAAK,EACLD,EAAKH,EAAMzd,OAAS,EAEpB4X,GACIhC,GAAO6H,EAAMI,GAAIqd,KAAOtlB,GAAO6H,EAAMG,GAAIsd,OACtCrd,KAAKD,MAAQE,GAAaL,EAAO,MAAO7H,MAE5CslB,IAAK2rD,EAAa1C,KAAM4C,GAAgBtpE,EAAMI,MAC9Cqd,IAAK4rD,EAAa3C,KAAM6C,GAAgBvpE,EAAMG,MAE7ChI,GAAO6H,EAAMI,GAAIsmE,MAAQvuE,GAAO6H,EAAMG,GAAIumE,QACvCtmE,KAAKD,MAAQE,GAAaL,EAAO,OAAQ7H,MAE7CuuE,KAAM0C,EAAa3rD,IAAK6rD,GAAgBtpE,EAAMI,MAC9CsmE,KAAM2C,EAAa5rD,IAAK8rD,GAAgBvpE,EAAMG,KAErD,MAAMqpE,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAenxE,EAAMixE,GAAcI,EAAOF,CACvF,CA0FA,IAAIz/D,GAAsBrsB,OAAOu0C,OAAO,CACxCvxC,UAAW,KACXipF,cApgDA,cAA4B99B,GACxBpgB,UAAY,WACfA,gBAAkB,CACX3kB,MAAO,CACHhkB,SAAUm8E,KAGlB,WAAAhoE,CAAY2vB,GACRiQ,MAAMjQ,GACLz/B,KAAKo5E,iBAAc97E,EACpB0C,KAAKs5E,YAAc,EACnBt5E,KAAKyiF,aAAe,EACvB,CACD,IAAAnkF,CAAK2zD,GACD,MAAMywB,EAAQ1iF,KAAKyiF,aACnB,GAAIC,EAAMpnF,OAAQ,CACd,MAAMgtC,EAAStoC,KAAKuoC,YACpB,IAAK,MAAMpoC,MAAEA,QAAQypC,KAAY84C,EACzBp6C,EAAOnoC,KAAWypC,GAClBtB,EAAOloC,OAAOD,EAAO,GAG7BH,KAAKyiF,aAAe,EACvB,CACD/yC,MAAMpxC,KAAK2zD,EACd,CACD,KAAAr/B,CAAM0X,EAAKnqC,GACP,GAAI0R,GAAcy4B,GACd,OAAO,KAEX,MAAMhC,EAAStoC,KAAKuoC,YAEpB,MAxCW,EAACpoC,EAAOY,IAAgB,OAAVZ,EAAiB,KAAOyY,GAAY9X,KAAKJ,MAAMP,GAAQ,EAAGY,GAwC5EqjD,CADPjkD,EAAQkS,SAASlS,IAAUmoC,EAAOnoC,KAAWmqC,EAAMnqC,EAAQu3E,GAAepvC,EAAQgC,EAAK93B,GAAerS,EAAOmqC,GAAMtqC,KAAKyiF,cAC/Fn6C,EAAOhtC,OAAS,EAC5C,CACD,mBAAAsrD,GACI,MAAMzrC,WAAEA,EAAaC,WAAAA,GAAgBpb,KAAKqb,gBAC1C,IAAIra,IAAEA,EAAGD,IAAGA,GAASf,KAAKgpC,WAAU,GACR,UAAxBhpC,KAAKvH,QAAQ2sB,SACRjK,IACDna,EAAM,GAELoa,IACDra,EAAMf,KAAKuoC,YAAYjtC,OAAS,IAGxC0E,KAAKgB,IAAMA,EACXhB,KAAKe,IAAMA,CACd,CACD,UAAAmmD,GACI,MAAMlmD,EAAMhB,KAAKgB,IACXD,EAAMf,KAAKe,IACXmkB,EAASllB,KAAKvH,QAAQysB,OACtBvF,EAAQ,GACd,IAAI2oB,EAAStoC,KAAKuoC,YAClBD,EAAiB,IAARtnC,GAAaD,IAAQunC,EAAOhtC,OAAS,EAAIgtC,EAASA,EAAOr2B,MAAMjR,EAAKD,EAAM,GACnFf,KAAKs5E,YAAcx4E,KAAKC,IAAIunC,EAAOhtC,QAAU4pB,EAAS,EAAI,GAAI,GAC9DllB,KAAKo5E,YAAcp5E,KAAKgB,KAAOkkB,EAAS,GAAM,GAC9C,IAAI,IAAIpsB,EAAQkI,EAAKlI,GAASiI,EAAKjI,IAC/B6mB,EAAMtlB,KAAK,CACPvB,UAGR,OAAO6mB,CACV,CACD,gBAAAkqB,CAAiB/wC,GACb,OAAOg/E,GAAkB9lE,KAAKhS,KAAMlH,EACvC,CACJ,SAAAgoC,GACO4O,MAAM5O,YACD9gC,KAAK6vC,iBACN7vC,KAAK44C,gBAAkB54C,KAAK44C,eAEnC,CACD,gBAAAt9B,CAAiBxiB,GAIb,MAHqB,iBAAVA,IACPA,EAAQkH,KAAK4yB,MAAM95B,IAEN,OAAVA,EAAiBiwC,IAAM/oC,KAAKsxC,oBAAoBx4C,EAAQkH,KAAKo5E,aAAep5E,KAAKs5E,YAC3F,CACD,eAAA1rC,CAAgBztC,GACZ,MAAMwf,EAAQ3f,KAAK2f,MACnB,OAAIxf,EAAQ,GAAKA,EAAQwf,EAAMrkB,OAAS,EAC7B,KAEJ0E,KAAKsb,iBAAiBqE,EAAMxf,GAAOrH,MAC7C,CACD,gBAAA04C,CAAiBtpB,GACb,OAAOpnB,KAAKJ,MAAMV,KAAKo5E,YAAcp5E,KAAK2qD,mBAAmBziC,GAASloB,KAAKs5E,YAC9E,CACD,YAAA1pC,GACI,OAAO5vC,KAAK+kB,MACf,GA06CLg1D,YAAaA,GACba,iBAAkBA,GAClBoC,kBAAmBA,GACnB8C,UAAWA,GACX6C,gBAhGA,cAA8B7C,GAC1Bx7C,UAAY,aACfA,gBAAkBw7C,GAAUn8D,SAC5B,WAAA7T,CAAY5Y,GACLw4C,MAAMx4C,GACL8I,KAAK4iF,OAAS,GACd5iF,KAAK6iF,aAAUvlF,EACf0C,KAAK8iF,iBAAcxlF,CACvB,CACJ,WAAAwjF,GACO,MAAMpB,EAAa1/E,KAAK+iF,yBAClBhqE,EAAQ/Y,KAAK4iF,OAAS5iF,KAAKgjF,iBAAiBtD,GAClD1/E,KAAK6iF,QAAUjyE,GAAYmI,EAAO/Y,KAAKgB,KACvChB,KAAK8iF,YAAclyE,GAAYmI,EAAO/Y,KAAKe,KAAOf,KAAK6iF,QACvDnzC,MAAMoxC,YAAYpB,EACrB,CACJ,gBAAAsD,CAAiBtD,GACV,MAAM1+E,IAAEA,EAAGD,IAAGA,GAASf,KACjB+Z,EAAQ,GACRhB,EAAQ,GACd,IAAIrd,EAAG4X,EAAM6hB,EAAMsY,EAAMpa,EACzB,IAAI33B,EAAI,EAAG4X,EAAOosE,EAAWpkF,OAAQI,EAAI4X,IAAQ5X,EAC7C+xC,EAAOiyC,EAAWhkF,GACd+xC,GAAQzsC,GAAOysC,GAAQ1sC,GACvBgZ,EAAM1f,KAAKozC,GAGnB,GAAI1zB,EAAMze,OAAS,EACf,MAAO,CACH,CACImkF,KAAMz+E,EACNw1B,IAAK,GAET,CACIipD,KAAM1+E,EACNy1B,IAAK,IAIjB,IAAI96B,EAAI,EAAG4X,EAAOyG,EAAMze,OAAQI,EAAI4X,IAAQ5X,EACxC23B,EAAOtZ,EAAMre,EAAI,GACjBy5B,EAAOpb,EAAMre,EAAI,GACjB+xC,EAAO1zB,EAAMre,GACToF,KAAKJ,OAAO2yB,EAAO8B,GAAQ,KAAOsY,GAClC10B,EAAM1e,KAAK,CACPolF,KAAMhyC,EACNjX,IAAK96B,GAAK4X,EAAO,KAI7B,OAAOyF,CACV,CACJ,SAAA0nE,GACO,MAAMz/E,EAAMhB,KAAKgB,IACXD,EAAMf,KAAKe,IACjB,IAAI2+E,EAAahwC,MAAMyxC,oBAOvB,OANKzB,EAAWl/D,SAASxf,IAAS0+E,EAAWpkF,QACzCokF,EAAWt/E,OAAO,EAAG,EAAGY,GAEvB0+E,EAAWl/D,SAASzf,IAA8B,IAAtB2+E,EAAWpkF,QACxCokF,EAAWrlF,KAAK0G,GAEb2+E,EAAWnyC,MAAK,CAACx2C,EAAGC,IAAID,EAAIC,GACtC,CACJ,sBAAA+rF,GACO,IAAIrD,EAAa1/E,KAAKmtC,OAAOzL,KAAO,GACpC,GAAIg+C,EAAWpkF,OACX,OAAOokF,EAEX,MAAMvnF,EAAO6H,KAAKmhF,oBACZv3C,EAAQ5pC,KAAKugF,qBAOnB,OALIb,EADAvnF,EAAKmD,QAAUsuC,EAAMtuC,OACR0E,KAAK66B,UAAU1iC,EAAKm1C,OAAO1D,IAE3BzxC,EAAKmD,OAASnD,EAAOyxC,EAEtC81C,EAAa1/E,KAAKmtC,OAAOzL,IAAMg+C,EACxBA,CACV,CACJ,kBAAAsB,CAAmBloF,GACZ,OAAQ8X,GAAY5Q,KAAK4iF,OAAQ9pF,GAASkH,KAAK6iF,SAAW7iF,KAAK8iF,WAClE,CACJ,gBAAAtxC,CAAiBtpB,GACV,MAAMw5D,EAAU1hF,KAAKkgF,SACfx1B,EAAU1qD,KAAK2qD,mBAAmBziC,GAASw5D,EAAQriD,OAASqiD,EAAQppE,IAC1E,OAAO1H,GAAY5Q,KAAK4iF,OAAQl4B,EAAU1qD,KAAK8iF,YAAc9iF,KAAK6iF,SAAS,EAC9E,KAaL,MAAMI,GAAgB,CAClBrsC,GACAr1B,GACAkB,GACAG,ICjsWEsgE,GAAc,MACd1hE,GAAS,GAMf,SAAS2hE,GAAiBC,GACtB,MAAMrpF,EAAYF,EACZwpF,EAAc,GACpB,SAASC,EAAQ9nF,IJysCrB,SAAgBzB,EAAWxB,GACvB,MAAMyG,EAAYjF,EAAUI,GAAG6E,UAAUzG,EAAM2H,MAC3ClB,GAEAA,EAAUiT,QAAQtb,SAAQN,GAAMA,EAAG2b,KAAKhS,KAAMzH,IAEtD,CI9sCQgrF,CAAOxpF,EAAWyB,EACrB,CACDtB,GAAQ,KACJ,MAAMspF,EAAMJ,IACZ5hE,GAAO7qB,QAAQ6sF,aAAe7+B,QAAWpsD,GAAQ8qF,EAAYhpF,KAAK/B,EAAOkrF,EAAKjrF,EAAO+qF,IAAa/qF,GAAQ8qF,EAAYhpF,KAAKmpF,EAAIvjF,IAAI1H,EAAO+qF,IAAU,IAExJhpF,GAAU,KACN,KAAM+oF,EAAY/nF,QACd+nF,EAAY5nF,KAAZ4nF,EACH,GAET,CAiCA,SAASI,GAAkBtnF,GACvB,IAAImsB,EACAo7D,EAAgB,CACNvnF,EAAI,IAEdwnF,EAAc,CAAA,EAClB,IAAI,IAAIjoF,EAAI,EAAGA,EAAIgoF,EAAcpoF,OAAQI,GAAK,EAC1CioF,EAAc3tF,EAAO2tF,EAAaD,EAAchoF,IAEpD,MAAO,CACH,CAAAmB,GACIyrB,EAASxwB,EAAQ,UACjBqB,EAAemvB,EAAQq7D,EAC1B,EACD,CAAAjmF,CAAGrG,EAAQI,GACPD,EAAOH,EAAQixB,EAAQ7wB,GACJ0E,EAAI,GAAGmsB,EAC7B,EACD,CAAApsB,CAAGC,EAAKynF,GACJzqF,EAAemvB,EAAQq7D,EAAc5mF,EAAkB2mF,EAAe,CACxDvnF,EAAI,KAErB,EACDT,EAAG3F,EACH6G,EAAG7G,EACH,CAAA+G,CAAGiB,GACKA,GAAWpG,EAAO2wB,GACHnsB,EAAI,GAAG,KAC7B,EAET,CAMA,SAAS0nF,GAAWC,EAAQxjF,EAASyjF,GACjC,IAQIC,GARA9jF,KAAEA,GAAUI,GACZnI,KAAEA,EAAM,CACRgpB,SAAU,KACP7gB,GACH7H,QAAEA,EAAS,IAAQ6H,GACnBmiB,QAAEA,EAAS,IAAQniB,GACnB2jF,WAAEA,GAA2B3jF,GAC7Bsf,MAAEA,EAAO,MAAUtf,EAEnBpJ,EAfR,SAAeA,GAEX,IAAIiB,KAAEA,EAAI+H,KAAGA,EAAOzH,QAAAA,UAAUgqB,EAAO9iB,SAAGA,EAAWvC,QAAAA,UAAU8mF,KAAa7kF,GAASnI,EACnF,OAAOmI,CACX,CAWgB8kF,CAAM7jF,GJwhCtB,IAAqBjK,EIp/BjB,OAnCA6D,GAAQ,KACJ6pF,EAAa,EAAGnkE,EAAQ,IAAI81C,GAAQsuB,EAAW,CAC3C9jF,OACA/H,OACAM,UACAgqB,YACD,IJihCUpsB,EI/gCL,KACHupB,IACLmkE,EAAa,EAAGnkE,EAAMznB,KAAOA,EAAMynB,GACnCmkE,EAAa,EAAGnkE,EAAMnnB,QAAUA,EAASmnB,GACzCA,EAAMrkB,OAAO0oF,GAAW,EJ4gC5BjqF,IAAwBG,GAAGiC,aAAa/B,KAAKhE,GI1gC7CiE,GAAU,KACFslB,GAAOA,EAAM46C,UACjBupB,EAAa,EAAGnkE,EAAQ,KAAK,IAEjCujE,IAAiB,IAAIa,IAOrBF,EAAOtjF,MAAS4jF,IACZL,EAAa,EAAGzjF,EAAUtK,EAAOA,EAAO,GAAIsK,GAAUrJ,EAAuBmtF,KACzE,SAAUA,GAAaL,EAAa,EAAG7jF,EAAOkkF,EAAYlkF,MAC1D,SAAUkkF,GAAaL,EAAa,EAAG5rF,EAAOisF,EAAYjsF,MAC1D,YAAaisF,GAAaL,EAAa,EAAGtrF,EAAU2rF,EAAY3rF,SAChE,YAAa2rF,GAAaL,EAAa,EAAGthE,EAAU2hE,EAAY3hE,SAChE,eAAgB2hE,GAAaL,EAAa,EAAGE,EAAaG,EAAYH,YACtE,UAAWG,GAAaL,EAAa,EAAGnkE,EAAQwkE,EAAYxkE,MAAM,EAE1Etf,EAAUrJ,EAAuBqJ,GAC1B,CACH0jF,EACA9sF,EACA0oB,EACA1f,EACA/H,EACAM,EACAgqB,EACAwhE,EAxBJ,SAAwBI,GACpB5pF,EAAkB4pF,EAAU,UAAY,SAAQ,KAC5CL,EAAYK,EACZN,EAAa,EAAGC,EAAU,GAEjC,EAsBL,CAlJAztF,OAAOkK,KAAK6jF,YAAY3tF,SAAS6C,IACzB0pF,GAAYqB,KAAK/qF,IACjBgoB,GAAOnnB,KAAKb,EAAImV,QAAQu0E,GAAa,IACxC,IAgJL,MAAMhnB,WAAcp8D,EAChB,WAAAgQ,CAAYrX,GACRi3C,QACApxC,EAAK0B,KAAMvH,EAASorF,GAAYJ,GAAmB3sF,EAAgB,CAC/DoJ,KAAM,EACN/H,KAAM,EACNM,QAAS,EACTgqB,QAAS,EACTwhE,WAAY,EACZrkE,MAAO,GAEd,EA+YL,SAAS4kE,GAAkBroF,GACvB,IAAIsoF,EACAC,EACAvwE,EACJ,MAAMwwE,EAAwB,CAC1B,CACIzkF,KAAM,OAEA/D,EAAI,IAElB,SAASyoF,EAAsB9rF,GACDqD,EAAI,GAAGrD,EACpC,CACD,IAAI+rF,EAAgB,CAAA,EACpB,IAAI,IAAInpF,EAAI,EAAGA,EAAIipF,EAAsBrpF,OAAQI,GAAK,EAClDmpF,EAAgB7uF,EAAO6uF,EAAeF,EAAsBjpF,IAUhE,YARyB,IAAXS,EAAI,KACd0oF,EAAcjlE,MAAkBzjB,EAAI,IAExCsoF,EAAU,IAAIvoB,GAAM,CAChBhlE,MAAO2tF,IAES1oF,EAAI,GAAGsoF,GAC3BhqF,EAAkBJ,MAAK,IJs9C3B,SAAcN,EAAWhC,EAAM4D,GAC3B,MAAMwE,EAAQpG,EAAUI,GAAGjD,MAAMa,QACnBuF,IAAV6C,IACApG,EAAUI,GAAGyE,MAAMuB,GAASxE,EAC5BA,EAAS5B,EAAUI,GAAGgC,IAAIgE,IAElC,CI59C+B41C,CAAK0uC,EAAS,QAASG,KAC3C,CACH,CAAA/nF,GACIU,EAAiBknF,EAAQtqF,GAAG4B,SAC/B,EACD,CAAA2B,CAAGrG,EAAQI,GACP+F,EAAgBinF,EAASptF,EAAQI,GACjC0c,GAAU,CACb,EACD,CAAAjY,CAAGC,EAAKynF,GACJ,IAAK3nF,GAAS2nF,EACd,MAAMkB,EAAoC,EAAlB7oF,EAAsBc,EAAkB4nF,EAAuB,CACnFA,EAAsB,IJivCXI,EIhvCiB5oF,EAAI,GJivCb,iBAAjB4oF,GAA8C,OAAjBA,EAAwBA,EAAe,MIhvCrE,CAAA,EJ+uCjB,IAA2BA,EArlBC1uF,GIzpBXquF,GAAoC,EAAlBzoF,IACnByoF,GAAiB,EACjBI,EAAgBllE,MAAkBzjB,EAAI,GJupB1B9F,EItpBO,IAAIquF,GAAiB,EJupBpD/pF,EAAgBN,KAAKhE,IIrpBbouF,EAAQpkF,KAAKykF,EAChB,EACD,CAAAppF,CAAGe,GACK0X,IACJ5X,EAAckoF,EAAQtqF,GAAG4B,SAAUU,GACnC0X,GAAU,EACb,EACD,CAAAvX,CAAGH,GACCE,EAAe8nF,EAAQtqF,GAAG4B,SAAUU,GACpC0X,GAAU,CACb,EACD,CAAArX,CAAGiB,GACqB5B,EAAI,GAAG,MAC3B2B,EAAkB2mF,EAAS1mF,EAC9B,EAET,CACA,SAASinF,GAAWlB,EAAQxjF,EAASyjF,GACjCruB,GAAQjH,SAASrf,IACjB,IAEI61C,GAFArlE,MAAEA,EAAO,MAAUtf,EACnBpJ,EAAQoJ,EAkBZ,OAhBA6iF,IAAiB,IAAI8B,IAWrBnB,EAAOtjF,MAAS4jF,IACZL,EAAa,EAAGzjF,EAAUtK,EAAOA,EAAO,GAAIsK,GAAUrJ,EAAuBmtF,KACzE,UAAWA,GAAaL,EAAa,EAAGnkE,EAAQwkE,EAAYxkE,MAAM,EAE1Etf,EAAUrJ,EAAuBqJ,GAC1B,CACHsf,EACAqlE,EACA/tF,EAlBJ,SAAyBmtF,GACrB5pF,EAAkB4pF,EAAU,UAAY,SAAQ,KAC5CY,EAAeZ,EACfN,EAAa,EAAGkB,EAAa,GAEpC,EACD,SAA+BnsF,GAC3B8mB,EAAQ9mB,EACRirF,EAAa,EAAGnkE,EACnB,EAaL,CACA,MAAMslE,WAAYplF,EACd,WAAAgQ,CAAYrX,GACRi3C,QACApxC,EAAK0B,KAAMvH,EAASusF,GAAYR,GAAmB1tF,EAAgB,CAC/D8oB,MAAO,GAEd,+FCrlBYulE,EAAAhpF,KAAUpE,KAAI,GAAIqtF,EAAAjpF,KAAUusB,OAAM,wFAAnB,iBAAoB,kFAFxClxB,EAGQH,EAAAuyC,EAAAnyC,GAFJL,EAAsEwyC,EAAAn6B,kYAFvEtT,EAAW,wBAAhBb,OAAII,GAAA,2BAQLS,EAAS,GAACglB,SAAS,GAAGhpB,KAAKmD,OAAS,GAAC+pF,GAAAlpF,6PAX9C3E,EAcOH,EAAAiuF,EAAA7tF,GAbHL,EAAoCkuF,EAAAxjF,UACpC1K,EAOMkuF,EAAAC,2DACNnuF,EAAmEkuF,EAAAE,0FAPxDrpF,EAAW,WAAhBb,OAAII,GAAA,EAAA,mHAAJJ,OAQDa,EAAS,GAACglB,SAAS,GAAGhpB,KAAKmD,OAAS,kEL8xCzCgB,EAAS,CACL4F,EAAG,EACHrF,EAAG,GACHX,EAAGI,2BAIFA,EAAO4F,GACRzL,EAAQ6F,EAAOO,GAEnBP,EAASA,EAAOJ,sDAr8BpB,SAAsBupF,EAAY1nF,GAC9B,IAAK,IAAIrC,EAAI,EAAGA,EAAI+pF,EAAWnqF,OAAQI,GAAK,EACpC+pF,EAAW/pF,IACX+pF,EAAW/pF,GAAGoB,EAAEiB,EAE5B,kDK9ZQ2nF,EAAmB,GACnBC,EAAS,CACTr9C,OAAM,GACNnnB,SAAQ,EAEAyoB,MAAO,yBACPzxC,KAAI,GACJ8oB,gBAAiB,0BACjBC,YAAa,wBACb8I,YAAa,KAKhB,SAAA47D,EAAgBC,GACjBH,EAAoBllE,SAASqlE,GAC7BH,EAAsBA,EAAoB7nF,QAAOhB,GAAKA,IAAMgpF,IAExDH,EAAoBpqF,OAAS,EAC7BoqF,EAAmB,IAAOA,EAAqBG,GAE/CC,MAAM,4CAGdC,aAGKA,WACLJ,EAAUr9C,OAASo9C,EAAoB9nF,KAAIf,GAAKA,EAAE9E,OAAI4tF,GAClDD,EAAoBpqF,OAAS,EAAC,OACxB2uD,EAAUy7B,EAAoB9nF,KAAIf,GAAKA,EAAE6rB,SACzCoP,EAAYh3B,KAAKC,OAAOkpD,GAC9B85B,EAAA,EAAA4B,EAAUxkE,SAAS,GAAGhpB,KAAO8xD,EAAQrsD,KAAI8qB,GAAUoP,EAAYpP,IAAMi9D,QAErE5B,EAAA,EAAA4B,EAAUxkE,SAAS,GAAGhpB,KAAI,GAAAwtF,GAIlCzrF,GAAO,KACH6rF,GAAe,aA/CJ,CACV,CAAAhuF,KAAM,cAAe2wB,OAAQ,KAC7B,CAAA3wB,KAAM,cAAe2wB,OAAQ,KAC7B,CAAA3wB,KAAM,cAAe2wB,OAAQ,KAC7B,CAAA3wB,KAAM,cAAe2wB,OAAQ,KAC7B,CAAA3wB,KAAM,cAAe2wB,OAAQ,UAmDkBm9D,GAAAD,EAAgBC,OAK5CE,KChE5B7pB,GAAMzN,YAAYw0B,WCAN,kEAAQ,CAChB5rF,OAAQW,SAAS83E","x_google_ignoreList":[0,1,2,3,4,6]}